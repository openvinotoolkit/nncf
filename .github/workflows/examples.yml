name: Test examples
permissions: read-all

on:
  workflow_call:
  workflow_dispatch:
    inputs:
      pull_request_number:
        description: 'The pull request number'
        default: ''
      pytest_args:
        description: 'Pytest arguments'
        default: ''
      skip_windows:
        description: 'Skip tests on Windows'
        type: boolean
        default: false

concurrency:
  group: test-examples-${{ github.workflow }}-${{ github.ref }}-${{ github.event.inputs.pytest_args || '' }}-${{github.event.inputs.pull_request_number || ''}}
  cancel-in-progress: false

jobs:
  examples-cpu:
    name: Test exmaples CPU [${{ matrix.group }}/4]
    runs-on: ubuntu-22.04-16-cores
    strategy:
      fail-fast: false
      matrix:
        group: [1, 2, 3, 4]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
            lfs: true
            fetch-depth: 0  # Fetch full history to allow checking out any branch or PR
      - name: Fetch and Checkout the Pull Request Branch
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.pull_request_number != '' }}
        run: |
          git fetch origin pull/${{ github.event.inputs.pull_request_number }}/head:pr-${{ github.event.inputs.pull_request_number }}
          git checkout pr-${{ github.event.inputs.pull_request_number }}
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: 3.10.14
          cache: pip
      - name: cpuinfo
        run: cat /proc/cpuinfo
      - name: Install test requirements
        run: |
          pip install -r tests/cross_fw/examples/requirements.txt
      - name: Print installed modules
        run: pip list
      - name: Run examples test scope
        run: |
          set +e
          python -m pytest -s -ra tests/cross_fw/examples \
            --junit-xml=pytest-results.xml \
            --durations-path=tests/cross_fw/examples/.test_durations \
            --splitting-algorithm=least_duration \
            --splits 4 \
            --group ${{ matrix.group }} \
            ${{ github.event.inputs.pytest_args || '' }}
          ret=$?
          [ $ret -eq 5 ] && [ -n "${{ github.event.inputs.pytest_args || '' }}" ]  && exit 0 || exit $ret
        env:
          TQDM_DISABLE: 1
      - name: Test Summary
        if: ${{ !cancelled() }}
        run: |
          pip install defusedxml==0.7.1
          python .github/scripts/pytest_md_summary.py pytest-results.xml >> $GITHUB_STEP_SUMMARY

  examples-win-cpu:
    name: Test exmaples CPU Windows [${{ matrix.group }}/4]
    runs-on: windows-2019-16-core
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.skip_windows == 'false' }}
    strategy:
      fail-fast: false
      matrix:
        group: [1, 2, 3, 4]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
            lfs: true
            fetch-depth: 0  # Fetch full history to allow checking out any branch or PR
      - name: Fetch and Checkout the Pull Request Branch
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.pull_request_number != '' }}
        run: |
          git fetch origin pull/${{ github.event.inputs.pull_request_number }}/head:pr-${{ github.event.inputs.pull_request_number }}
          git checkout pr-${{ github.event.inputs.pull_request_number }}
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: "3.10"
          cache: pip
      - uses: ilammy/msvc-dev-cmd@ed94116c4d30d2091601b81f339a2eaa1c2ba0a6 # v1.4.1
      - name: Install NNCF and test requirements
        run: |
          pip install -e .
          pip install -r tests/cross_fw/examples/requirements.txt
      - name: Print installed modules
        run: pip list
      - name: Run examples test scope
        run: |
          set +e
          export LIB="${LIB};$(python -c "import sysconfig; print(sysconfig.get_config_var('LIBDIR'))")"
          export LIB="${LIB};$(python -c "import sys; print(sys.prefix + '/libs')")"
          export INCLUDE="${INCLUDE};$(python -c "import sysconfig; print(sysconfig.get_path('include'))")"
          python -m pytest -s -ra tests/cross_fw/examples \
            --junit-xml=pytest-results.xml \
            --durations-path=tests/cross_fw/examples/.test_durations \
            --splitting-algorithm=least_duration \
            --splits 4 \
            --group ${{ matrix.group }} \
            ${{ github.event.inputs.pytest_args || '' }}
          ret=$?
          [ $ret -eq 5 ] && [ -n "${{ github.event.inputs.pytest_args || '' }}" ]  && exit 0 || exit $ret
        env:
          TQDM_DISABLE: 1
      - name: Test Summary
        if: ${{ !cancelled() }}
        run: |
          pip install defusedxml==0.7.1
          python .github/scripts/pytest_md_summary.py pytest-results.xml >> $GITHUB_STEP_SUMMARY
