name: call-precommit
permissions: read-all

on:
  workflow_call:
    inputs:
      python_version:
        description: 'Python version'
        type: string
        required: true
      gpu_enabled:
        description: 'Enable gpu tests'
        type: boolean
        default: false
        required: true
      override_requirements:
        description: 'Override requirements'
        default: ''
        type: string
        required: false

jobs:
  common:
    timeout-minutes: 40
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          lfs: true
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: ${{ inputs.python_version }}
          cache: pip
      - name: Override constraints
        if: ${{ inputs.override_requirements != '' }}
        run: python .github/scripts/override_constraints.py "${{ inputs.override_requirements }}"
        shell: bash
      - name: Install NNCF and test requirements
        run: pip install . -r tests/common/requirements.txt
      - name: Print installed modules
        run: pip list
      - name: Run common precommit test scope
        run: make test-common
        env:
          NUM_WORKERS: 2

  onnx:
    timeout-minutes: 40
    runs-on: ubuntu-20.04-8-cores
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          lfs: true
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: ${{ inputs.python_version }}
      - name: Override constraints
        if: ${{ inputs.override_requirements != '' }}
        run: python .github/scripts/override_constraints.py "${{ inputs.override_requirements }}"
        shell: bash
      - name: Install NNCF and test requirements
        run: pip install . -r tests/onnx/requirements.txt
      - name: Print installed modules
        run: pip list
      - name: Run ONNX precommit test scope
        run: make test-onnx
        env:
          NUM_WORKERS: 4

  openvino:
    timeout-minutes: 40
    runs-on: ubuntu-20.04-8-cores
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          lfs: true
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: ${{ inputs.python_version }}
          cache: pip
      - name: Override constraints
        if: ${{ inputs.override_requirements != '' }}
        run: python .github/scripts/override_constraints.py "${{ inputs.override_requirements }}"
        shell: bash
      - name: Install NNCF and test requirements
        run: pip install . -r tests/openvino/requirements.txt
      - name: Print installed modules
        run: pip list
      - name: Run OV precommit test scope
        run: make test-openvino
        env:
          NUM_WORKERS: 4

  pytorch-cpu:
    timeout-minutes: 40
    runs-on: ubuntu-20.04-8-cores
    defaults:
      run:
        shell: bash
    env:
      DEBIAN_FRONTEND: noninteractive
    steps:
      - name: Install dependencies
        run : |
          sudo apt-get update
          sudo apt-get --assume-yes install gcc g++ build-essential ninja-build libgl1-mesa-dev libglib2.0-0
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          lfs: true
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: ${{ inputs.python_version }}
          cache: pip
      - name: Runner info
        continue-on-error: true
        run: |
          cat /etc/*release
          cat /proc/cpuinfo
      - name: Override constraints
        if: ${{ inputs.override_requirements != '' }}
        run: python .github/scripts/override_constraints.py "${{ inputs.override_requirements }}"
        shell: bash
      - name: Install NNCF and test requirements
        run: pip install . -r tests/torch/requirements.txt
      - name: Print installed modules
        run: pip list
      - name: Run PyTorch precommit test scope
        run: |
          make test-torch-cpu
        env:
          NUM_WORKERS: 4

  pytorch-cuda:
    timeout-minutes: 40
    runs-on: aks-linux-4-cores-28gb-gpu-tesla-t4
    if: ${{ inputs.gpu_enabled == true }}
    defaults:
      run:
        shell: bash
    env:
      DEBIAN_FRONTEND: noninteractive
    steps:
      - name: Install dependencies
        run : |
          sudo apt-get update
          sudo apt-get --assume-yes install build-essential ninja-build libgl1-mesa-dev libglib2.0-0 wget make
      - name: Download CUDA
        run: |
          wget -q https://developer.download.nvidia.com/compute/cuda/12.4.0/local_installers/cuda_12.4.0_550.54.14_linux.run
          sudo sh cuda_12.4.0_550.54.14_linux.run --toolkit --silent
      - name: Runner info
        continue-on-error: true
        run: |
          export PATH=/usr/local/cuda-12.4/bin${PATH:+:${PATH}}
          export LD_LIBRARY_PATH=/usr/local/cuda-12.4/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
          nvidia-smi
          cat /proc/cpuinfo
          nvcc --version
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          lfs: true
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: ${{ inputs.python_version }}
          cache: pip
      - name: Override constraints
        if: ${{ inputs.override_requirements != '' }}
        run: python .github/scripts/override_constraints.py "${{ inputs.override_requirements }}"
        shell: bash
      - name: Install NNCF and test requirements
        run: pip install . -r tests/torch/requirements.txt
      - name: Print installed modules
        run: pip list
      - name: Check CUDA
        run: |
          python -c "import torch; print(torch.cuda.is_available())"
      - name: Run PyTorch precommit test scope
        run: |
          export PATH=/usr/local/cuda-12.4/bin${PATH:+:${PATH}}
          export LD_LIBRARY_PATH=/usr/local/cuda-12.4/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
          make test-torch-cuda

  tensorflow:
    timeout-minutes: 40
    runs-on: ubuntu-20.04-8-cores
    if: ${{ inputs.python_version != '3.12' }}
    defaults:
      run:
        shell: bash
    env:
      DEBIAN_FRONTEND: noninteractive
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          lfs: true
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: ${{ inputs.python_version }}
          cache: pip
      - name: Override constraints
        if: ${{ inputs.override_requirements != '' }}
        run: python .github/scripts/override_constraints.py "${{ inputs.override_requirements }}"
        shell: bash
      - name: Install NNCF and test requirements
        run: pip install . -r tests/tensorflow/requirements.txt
      - name: Print installed modules
        run: pip list
      - name: Run TensorFlow precommit test scope
        run: make test-tensorflow
        env:
          NUM_WORKERS: 6

  tools:
    timeout-minutes: 40
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          lfs: true
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: ${{ inputs.python_version }}
          cache: pip
      - name: Install test requirements
        run: pip install -r tests/tools/requirements.txt
      - name: Print installed modules
        run: pip list
      - name: Run tools precommit test scope
        run: pytest -ra tests/tools

  pytorch2-cpu:
    timeout-minutes: 40
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          lfs: true
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: ${{ inputs.python_version }}
          cache: pip
      - name: Override constraints
        if: ${{ inputs.override_requirements != '' }}
        run: python .github/scripts/override_constraints.py "${{ inputs.override_requirements }}"
        shell: bash
      - name: Install NNCF and test requirements
        run: |
          pip install . -r tests/torch2/requirements.txt
      - name: Print installed modules
        run: pip list
      - name: Run torch2 precommit test scope
        run: pytest -ra tests/torch2 -m "not cuda"
