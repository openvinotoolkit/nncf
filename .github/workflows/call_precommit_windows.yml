name: call-precommit
permissions: read-all

on:
  workflow_call:
    inputs:
      python_version:
        description: 'Python version'
        type: string
        required: true
      override_requirements:
        description: 'Override requirements'
        default: ''
        type: string
        required: false

jobs:
  common:
    timeout-minutes: 40
    runs-on: windows-2019
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          lfs: true
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: ${{ inputs.python_version }}
      - name: Override constraints
        if: ${{ inputs.override_requirements != '' }}
        run: python .github/scripts/override_constraints.py "${{ inputs.override_requirements }}"
        shell: bash
      - name: Install NNCF and test requirements
        run: pip install . -r tests/common/requirements.txt
      - name: Print installed modules
        run: pip list
      - name: Run common precommit test scope
        run: make test-common
        env:
          NUM_WORKERS: 2

  onnx:
    timeout-minutes: 40
    runs-on: windows-2019-8-core
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          lfs: true
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: ${{ inputs.python_version }}
      - name: Override constraints
        if: ${{ inputs.override_requirements != '' }}
        run: python .github/scripts/override_constraints.py "${{ inputs.override_requirements }}"
        shell: bash
      - name: Install NNCF and test requirements
        run: pip install . -r tests/onnx/requirements.txt
      - name: Print installed modules
        run: pip list
      - name: Run ONNX precommit test scope
        run: make test-onnx
        env:
          NUM_WORKERS: 4

  openvino:
    timeout-minutes: 40
    runs-on: windows-2019-8-core
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          lfs: true
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: ${{ inputs.python_version }}
      - name: Override constraints
        if: ${{ inputs.override_requirements != '' }}
        run: python .github/scripts/override_constraints.py "${{ inputs.override_requirements }}"
        shell: bash
      - name: Install NNCF and test requirements
        run: pip install . -r tests/openvino/requirements.txt
      - name: Print installed modules
        run: pip list
      - name: Run OV precommit test scope
        run: make test-openvino
        env:
          NUM_WORKERS: 4

  pytorch-cpu:
    timeout-minutes: 100
    runs-on: windows-2019-8-core
    defaults:
      run:
        shell: bash
    env:
      DEBIAN_FRONTEND: noninteractive
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          lfs: true
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: ${{ inputs.python_version }}
      - uses: ilammy/msvc-dev-cmd@ed94116c4d30d2091601b81f339a2eaa1c2ba0a6 # v1.4.1
      - name: Override constraints
        if: ${{ inputs.override_requirements != '' }}
        run: python .github/scripts/override_constraints.py "${{ inputs.override_requirements }}"
        shell: bash
      - name: Install NNCF and test requirements
        run: pip install . -r tests/torch/requirements.txt
      - name: Print installed modules
        run: pip list
      - name: Run PyTorch precommit test scope
        run: |
          set +e
          export LIB="${LIB};$(python -c "import sysconfig; print(sysconfig.get_config_var('LIBDIR'))")"
          export LIB="${LIB};$(python -c "import sys; print(sys.prefix + '/libs')")"
          export INCLUDE="${INCLUDE};$(python -c "import sysconfig; print(sysconfig.get_path('include'))")"
          make test-torch-cpu
        env:
          NUM_WORKERS: 1  # Parallel tests are falls on build extenstion.

  tensorflow:
    timeout-minutes: 40
    runs-on: windows-2019-8-core
    if: ${{ inputs.python_version != '3.12' }}
    defaults:
      run:
        shell: bash
    env:
      DEBIAN_FRONTEND: noninteractive
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          lfs: true
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: ${{ inputs.python_version }}
      - name: Override constraints
        if: ${{ inputs.override_requirements != '' }}
        run: python .github/scripts/override_constraints.py "${{ inputs.override_requirements }}"
        shell: bash
      - name: Install NNCF and test requirements
        run: pip install . -r tests/tensorflow/requirements.txt
      - name: Print installed modules
        run: pip list
      - name: Run TensorFlow precommit test scope
        run: make test-tensorflow
        env:
          NUM_WORKERS: 6

  pytorch2-cpu:
    timeout-minutes: 40
    runs-on: windows-2019-8-core
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          lfs: true
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: ${{ inputs.python_version }}
      - uses: ilammy/msvc-dev-cmd@ed94116c4d30d2091601b81f339a2eaa1c2ba0a6 # v1.4.1
      - name: Override constraints
        if: ${{ inputs.override_requirements != '' }}
        run: python .github/scripts/override_constraints.py "${{ inputs.override_requirements }}"
        shell: bash
      - name: Install NNCF and test requirements
        run: |
          pip install . -r tests/torch2/requirements.txt
      - name: Print installed modules
        run: pip list
      - name: Run torch2 precommit test scope
        run: |
          set +e
          export LIB="${LIB};$(python -c "import sysconfig; print(sysconfig.get_config_var('LIBDIR'))")"
          export LIB="${LIB};$(python -c "import sys; print(sys.prefix + '/libs')")"
          export INCLUDE="${INCLUDE};$(python -c "import sysconfig; print(sysconfig.get_path('include'))")"
          pytest -ra tests/torch2 -m "not cuda"
