name: precommit

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    paths-ignore:
      - '**/*.md'
      - 'docs/**/*'

jobs:
  common:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
      - uses: actions/setup-python@v3
        with:
          python-version: 3.8.10
      - name: Install NNCF and test requirements
        run: make install-common-test
      - name: Run common precommit test scope
        run: make test-common
        env:
          NNCF_COVERAGE: 1
      - name: Upload coverage report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage_common
          path: ./coverage.xml
      - name: Upload coverage report to codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: coverage_common
          flags: COMMON
  onnx:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
      - uses: actions/setup-python@v3
        with:
          python-version: 3.8.10
      - name: Install NNCF and test requirements
        run: make install-onnx-test
      - name: Run ONNX precommit test scope
        run: make test-onnx
        env:
          NNCF_COVERAGE: 1
      - name: Upload coverage report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage_onnx
          path: ./coverage.xml
      - name: Upload coverage report to codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: coverage_onnx
          flags: ONNX
  openvino:
    runs-on: ubuntu-20.04-8-cores
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
      - uses: actions/setup-python@v3
        with:
          python-version: 3.8.10
      - name: Install NNCF and test requirements
        run: make install-openvino-test
      - name: Run OV precommit test scope
        run: make test-openvino
        env:
          NNCF_COVERAGE: 1
      - name: Upload coverage report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage_openvino
          path: ./coverage.xml
      - name: Upload coverage report to codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: coverage_openvino
          flags: OPENVINO
  pytorch-cpu:
    timeout-minutes: 40
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-20.04-8-cores
    env:
      DEBIAN_FRONTEND: noninteractive
    steps:
      - name: Install dependencies
        run : |
          sudo apt-get update
          sudo apt-get --assume-yes install gcc g++ build-essential ninja-build libgl1-mesa-dev libglib2.0-0
      - uses: actions/checkout@v3
        with:
          lfs: true
      - uses: actions/setup-python@v3
        with:
          python-version: 3.8.10
      - name: Runner info
        continue-on-error: true
        run: |
          cat /etc/*release
          cat /proc/cpuinfo
      - name: Install NNCF and test requirements
        run: make install-torch-test
      - name: Run PyTorch precommit test scope
        run: |
          make test-torch-cpu
  pytorch-cuda:
    timeout-minutes: 40
    defaults:
      run:
        shell: bash
    runs-on: aks-linux-4-cores-28gb-gpu-tesla-t4
    env:
      DEBIAN_FRONTEND: noninteractive
    steps:
      - name: Install dependencies
        run : |
          sudo apt-get update
          sudo apt-get --assume-yes install gcc ninja-build libgl1-mesa-dev libglib2.0-0
      - name: Download CUDA
        run: |
          wget -q https://developer.download.nvidia.com/compute/cuda/12.1.1/local_installers/cuda_12.1.1_530.30.02_linux.run
          sudo sh cuda_12.1.1_530.30.02_linux.run --toolkit --silent
      - name: Runner info
        continue-on-error: true
        run: |
          export PATH=/usr/local/cuda-12.1/bin${PATH:+:${PATH}}
          export LD_LIBRARY_PATH=/usr/local/cuda-12.1/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
          nvidia-smi
          cat /proc/cpuinfo
          nvcc --version
      - uses: actions/checkout@v3
        with:
          lfs: true
      - uses: actions/setup-python@v3
        with:
          python-version: 3.8.10
      - name: Install NNCF and test requirements
        run: make install-torch-test
      - name: Check CUDA
        run: |
          python -c "import torch; print(torch.cuda.is_available())"
      - name: Run PyTorch precommit test scope
        run: |
          export PATH=/usr/local/cuda-12.1/bin${PATH:+:${PATH}}
          export LD_LIBRARY_PATH=/usr/local/cuda-12.1/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
          make test-torch-cuda
