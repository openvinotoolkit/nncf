:py:mod:`nncf.torch.sparsity.const.algo`
========================================

.. py:module:: nncf.torch.sparsity.const.algo



Classes
~~~~~~~

.. autoapisummary::

   nncf.torch.sparsity.const.algo.ConstSparsityController




.. py:class:: ConstSparsityController(target_model, sparsified_module_info)

   Bases: :py:obj:`nncf.torch.sparsity.base_algo.BaseSparsityAlgoController`

   Controller for the auxiliary constant sparsity algorithm in PT.

   .. py:method:: freeze()

      Freezes all sparsity masks. Sparsity masks will not be trained after calling this method.


   .. py:method:: set_sparsity_level(sparsity_level)

      Sets the sparsity level that should be applied to the model's weights.

      :param sparsity_level: Sparsity level that should be applied to the model's weights.


   .. py:method:: statistics(quickly_collected_only = False)

      Returns a `NNCFStatistics` class instance that contains compression algorithm statistics.

      :param quickly_collected_only: Enables collection of the statistics that
          don't take too much time to compute. Can be helpful for the case when
          need to keep track of statistics on each training batch/step/iteration.



