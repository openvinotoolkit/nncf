:py:mod:`nncf.torch.sparsity.base_algo`
=======================================

.. py:module:: nncf.torch.sparsity.base_algo

.. autoapi-nested-parse::

   Base classes for NNCF PyTorch sparsity algorithm builder and controller objects.




Classes
~~~~~~~

.. autoapisummary::

   nncf.torch.sparsity.base_algo.BaseSparsityAlgoController




.. py:class:: BaseSparsityAlgoController(target_model, sparsified_module_info)

   Bases: :py:obj:`nncf.torch.compression_method_api.PTCompressionAlgorithmController`, :py:obj:`nncf.common.sparsity.controller.SparsityController`

   Base class for sparsity algorithm controllers in PT.

   .. py:property:: current_sparsity_level
      :type: float

      Returns the current sparsity level of the underlying model.


   .. py:property:: loss
      :type: nncf.api.compression.CompressionLoss

      The compression loss for this particular algorithm combination.


   .. py:property:: scheduler
      :type: nncf.common.sparsity.schedulers.SparsityScheduler

      The compression scheduler for this particular algorithm combination.


   .. py:method:: disable_scheduler()

      Disables current compression scheduler during training by changing it to a dummy one that does not change
      the compression rate.


   .. py:method:: compression_stage()

      Returns the compression stage. Should be used on saving best checkpoints
      to distinguish between uncompressed, partially compressed, and fully
      compressed models.

      :return: The compression stage of the target model.


   .. py:method:: strip_model(model, do_copy = False)

      Strips auxiliary layers that were used for the model compression, as it's
      only needed for training. The method is used before exporting the model
      in the target format.

      :param model: The compressed model.
      :param do_copy: Modify copy of the model, defaults to False.
      :return: The stripped model.



