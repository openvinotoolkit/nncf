:py:mod:`nncf.torch.sparsity.magnitude.algo`
============================================

.. py:module:: nncf.torch.sparsity.magnitude.algo



Classes
~~~~~~~

.. autoapisummary::

   nncf.torch.sparsity.magnitude.algo.MagnitudeSparsityController




.. py:class:: MagnitudeSparsityController(target_model, sparsified_module_info, config)

   Bases: :py:obj:`nncf.torch.sparsity.base_algo.BaseSparsityAlgoController`

   Controller for the magnitude sparsity algorithm in PT.

   .. py:property:: compression_rate

      Returns a float compression rate value ranging from 0 to 1 (e.g. the sparsity level,
      or the ratio of filters pruned).


   .. py:method:: statistics(quickly_collected_only = False)

      Returns a `NNCFStatistics` class instance that contains compression algorithm statistics.

      :param quickly_collected_only: Enables collection of the statistics that
          don't take too much time to compute. Can be helpful for the case when
          need to keep track of statistics on each training batch/step/iteration.


   .. py:method:: freeze(freeze = True)

      Freezes all sparsity masks. Sparsity masks will not be trained after calling this method.


   .. py:method:: set_sparsity_level(sparsity_level, target_sparsified_module_info = None, run_batchnorm_adaptation = False)

      Sets the sparsity level that should be applied to the model's weights.

      :param sparsity_level: Sparsity level that should be applied to the model's weights.


   .. py:method:: compression_stage()

      Returns the compression stage. Should be used on saving best checkpoints
      to distinguish between uncompressed, partially compressed, and fully
      compressed models.

      :return: The compression stage of the target model.



