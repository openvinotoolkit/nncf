strict digraph  {
"0 /nncf_model_input" [id=0, scope="", type=nncf_model_input];
"1 /nncf_model_input" [id=1, scope="", type=nncf_model_input];
"2 SmallModel/NNCFConv2d[conv_cubic1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=2, scope="SmallModel/NNCFConv2d[conv_cubic1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"3 SmallModel/NNCFConv2d[conv_cubic1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=3, scope="SmallModel/NNCFConv2d[conv_cubic1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"4 SmallModel/NNCFConv2d[conv_cubic1]/conv2d" [id=4, scope="SmallModel/NNCFConv2d[conv_cubic1]", type=conv2d];
"5 SmallModel/ReLU[relu]/RELU" [id=5, scope="SmallModel/ReLU[relu]", type=RELU];
"6 SmallModel/NNCFConv2d[conv_cubic2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=6, scope="SmallModel/NNCFConv2d[conv_cubic2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"7 SmallModel/NNCFConv2d[conv_cubic2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=7, scope="SmallModel/NNCFConv2d[conv_cubic2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"8 SmallModel/NNCFConv2d[conv_cubic2]/conv2d" [id=8, scope="SmallModel/NNCFConv2d[conv_cubic2]", type=conv2d];
"9 SmallModel/Sigmoid[sigmoid]/sigmoid" [id=9, scope="SmallModel/Sigmoid[sigmoid]", type=sigmoid];
"10 SmallModel/NNCFConv2d[conv_input]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=10, scope="SmallModel/NNCFConv2d[conv_input]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"11 SmallModel/NNCFConv2d[conv_input]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=11, scope="SmallModel/NNCFConv2d[conv_input]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"12 SmallModel/NNCFConv2d[conv_input]/conv2d" [id=12, scope="SmallModel/NNCFConv2d[conv_input]", type=conv2d];
"13 SmallModel/ReLU[relu]/RELU" [id=13, scope="SmallModel/ReLU[relu]", type=RELU];
"14 SmallModel/SmallBlock[residual1]/ReLU[relu]/RELU" [id=14, scope="SmallModel/SmallBlock[residual1]/ReLU[relu]", type=RELU];
"15 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=15, scope="SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"16 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=16, scope="SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"17 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/conv2d" [id=17, scope="SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]", type=conv2d];
"18 SmallModel/SmallBlock[residual1]/ReLU[relu]/RELU" [id=18, scope="SmallModel/SmallBlock[residual1]/ReLU[relu]", type=RELU];
"19 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=19, scope="SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"20 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=20, scope="SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"21 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/conv2d" [id=21, scope="SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]", type=conv2d];
"22 SmallModel/SmallBlock[residual1]/add" [id=22, scope="SmallModel/SmallBlock[residual1]", type=add];
"23 SmallModel/SmallBlock[residual2]/ReLU[relu]/RELU" [id=23, scope="SmallModel/SmallBlock[residual2]/ReLU[relu]", type=RELU];
"24 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=24, scope="SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"25 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=25, scope="SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"26 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/conv2d" [id=26, scope="SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]", type=conv2d];
"27 SmallModel/SmallBlock[residual2]/ReLU[relu]/RELU" [id=27, scope="SmallModel/SmallBlock[residual2]/ReLU[relu]", type=RELU];
"28 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=28, scope="SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"29 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=29, scope="SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"30 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/conv2d" [id=30, scope="SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]", type=conv2d];
"31 SmallModel/SmallBlock[residual2]/add" [id=31, scope="SmallModel/SmallBlock[residual2]", type=add];
"32 SmallModel/SmallBlock[residual3]/ReLU[relu]/RELU" [id=32, scope="SmallModel/SmallBlock[residual3]/ReLU[relu]", type=RELU];
"33 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=33, scope="SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"34 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=34, scope="SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"35 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/conv2d" [id=35, scope="SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]", type=conv2d];
"36 SmallModel/SmallBlock[residual3]/ReLU[relu]/RELU" [id=36, scope="SmallModel/SmallBlock[residual3]/ReLU[relu]", type=RELU];
"37 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=37, scope="SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"38 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=38, scope="SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"39 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/conv2d" [id=39, scope="SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]", type=conv2d];
"40 SmallModel/SmallBlock[residual3]/add" [id=40, scope="SmallModel/SmallBlock[residual3]", type=add];
"41 SmallModel/SmallBlock[residual4]/ReLU[relu]/RELU" [id=41, scope="SmallModel/SmallBlock[residual4]/ReLU[relu]", type=RELU];
"42 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=42, scope="SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"43 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=43, scope="SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"44 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/conv2d" [id=44, scope="SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]", type=conv2d];
"45 SmallModel/SmallBlock[residual4]/ReLU[relu]/RELU" [id=45, scope="SmallModel/SmallBlock[residual4]/ReLU[relu]", type=RELU];
"46 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=46, scope="SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"47 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=47, scope="SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"48 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/conv2d" [id=48, scope="SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]", type=conv2d];
"49 SmallModel/SmallBlock[residual4]/add" [id=49, scope="SmallModel/SmallBlock[residual4]", type=add];
"50 SmallModel/cat" [id=50, scope=SmallModel, type=cat];
"51 SmallModel/NNCFConv2d[conv_mid]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=51, scope="SmallModel/NNCFConv2d[conv_mid]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"52 SmallModel/NNCFConv2d[conv_mid]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=52, scope="SmallModel/NNCFConv2d[conv_mid]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"53 SmallModel/NNCFConv2d[conv_mid]/conv2d" [id=53, scope="SmallModel/NNCFConv2d[conv_mid]", type=conv2d];
"54 SmallModel/ReLU[relu]/RELU" [id=54, scope="SmallModel/ReLU[relu]", type=RELU];
"55 SmallModel/Sequential[upscale]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=55, scope="SmallModel/Sequential[upscale]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"56 SmallModel/Sequential[upscale]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=56, scope="SmallModel/Sequential[upscale]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"57 SmallModel/Sequential[upscale]/NNCFConv2d[0]/conv2d" [id=57, scope="SmallModel/Sequential[upscale]/NNCFConv2d[0]", type=conv2d];
"58 SmallModel/Sequential[upscale]/PixelShuffle[1]/pixel_shuffle" [id=58, scope="SmallModel/Sequential[upscale]/PixelShuffle[1]", type=pixel_shuffle];
"59 SmallModel/Sequential[upscale]/ReLU[2]/RELU" [id=59, scope="SmallModel/Sequential[upscale]/ReLU[2]", type=RELU];
"60 SmallModel/NNCFConv2d[conv_output]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=60, scope="SmallModel/NNCFConv2d[conv_output]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"61 SmallModel/NNCFConv2d[conv_output]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=61, scope="SmallModel/NNCFConv2d[conv_output]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"62 SmallModel/NNCFConv2d[conv_output]/conv2d" [id=62, scope="SmallModel/NNCFConv2d[conv_output]", type=conv2d];
"63 SmallModel/__mul__" [id=63, scope=SmallModel, type=__mul__];
"64 SmallModel/add" [id=64, scope=SmallModel, type=add];
"65 /nncf_model_output" [id=65, scope="", type=nncf_model_output];
"0 /nncf_model_input" -> "12 SmallModel/NNCFConv2d[conv_input]/conv2d";
"1 /nncf_model_input" -> "4 SmallModel/NNCFConv2d[conv_cubic1]/conv2d";
"2 SmallModel/NNCFConv2d[conv_cubic1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "3 SmallModel/NNCFConv2d[conv_cubic1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"3 SmallModel/NNCFConv2d[conv_cubic1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "4 SmallModel/NNCFConv2d[conv_cubic1]/conv2d";
"4 SmallModel/NNCFConv2d[conv_cubic1]/conv2d" -> "5 SmallModel/ReLU[relu]/RELU";
"5 SmallModel/ReLU[relu]/RELU" -> "8 SmallModel/NNCFConv2d[conv_cubic2]/conv2d";
"6 SmallModel/NNCFConv2d[conv_cubic2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "7 SmallModel/NNCFConv2d[conv_cubic2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"7 SmallModel/NNCFConv2d[conv_cubic2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "8 SmallModel/NNCFConv2d[conv_cubic2]/conv2d";
"8 SmallModel/NNCFConv2d[conv_cubic2]/conv2d" -> "9 SmallModel/Sigmoid[sigmoid]/sigmoid";
"1 /nncf_model_input" -> "64 SmallModel/add";
"9 SmallModel/Sigmoid[sigmoid]/sigmoid" -> "63 SmallModel/__mul__";
"10 SmallModel/NNCFConv2d[conv_input]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "11 SmallModel/NNCFConv2d[conv_input]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"11 SmallModel/NNCFConv2d[conv_input]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "12 SmallModel/NNCFConv2d[conv_input]/conv2d";
"12 SmallModel/NNCFConv2d[conv_input]/conv2d" -> "13 SmallModel/ReLU[relu]/RELU";
"13 SmallModel/ReLU[relu]/RELU" -> "14 SmallModel/SmallBlock[residual1]/ReLU[relu]/RELU";
"13 SmallModel/ReLU[relu]/RELU" -> "22 SmallModel/SmallBlock[residual1]/add";
"13 SmallModel/ReLU[relu]/RELU" -> "50 SmallModel/cat";
"14 SmallModel/SmallBlock[residual1]/ReLU[relu]/RELU" -> "17 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/conv2d";
"15 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "16 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"16 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "17 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/conv2d";
"17 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/conv2d" -> "18 SmallModel/SmallBlock[residual1]/ReLU[relu]/RELU";
"18 SmallModel/SmallBlock[residual1]/ReLU[relu]/RELU" -> "21 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/conv2d";
"19 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "20 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"20 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "21 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/conv2d";
"21 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/conv2d" -> "22 SmallModel/SmallBlock[residual1]/add";
"22 SmallModel/SmallBlock[residual1]/add" -> "23 SmallModel/SmallBlock[residual2]/ReLU[relu]/RELU";
"22 SmallModel/SmallBlock[residual1]/add" -> "31 SmallModel/SmallBlock[residual2]/add";
"22 SmallModel/SmallBlock[residual1]/add" -> "50 SmallModel/cat";
"23 SmallModel/SmallBlock[residual2]/ReLU[relu]/RELU" -> "26 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/conv2d";
"24 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "25 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"25 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "26 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/conv2d";
"26 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/conv2d" -> "27 SmallModel/SmallBlock[residual2]/ReLU[relu]/RELU";
"27 SmallModel/SmallBlock[residual2]/ReLU[relu]/RELU" -> "30 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/conv2d";
"28 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "29 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"29 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "30 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/conv2d";
"30 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/conv2d" -> "31 SmallModel/SmallBlock[residual2]/add";
"31 SmallModel/SmallBlock[residual2]/add" -> "32 SmallModel/SmallBlock[residual3]/ReLU[relu]/RELU";
"31 SmallModel/SmallBlock[residual2]/add" -> "40 SmallModel/SmallBlock[residual3]/add";
"31 SmallModel/SmallBlock[residual2]/add" -> "50 SmallModel/cat";
"32 SmallModel/SmallBlock[residual3]/ReLU[relu]/RELU" -> "35 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/conv2d";
"33 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "34 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"34 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "35 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/conv2d";
"35 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/conv2d" -> "36 SmallModel/SmallBlock[residual3]/ReLU[relu]/RELU";
"36 SmallModel/SmallBlock[residual3]/ReLU[relu]/RELU" -> "39 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/conv2d";
"37 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "38 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"38 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "39 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/conv2d";
"39 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/conv2d" -> "40 SmallModel/SmallBlock[residual3]/add";
"40 SmallModel/SmallBlock[residual3]/add" -> "41 SmallModel/SmallBlock[residual4]/ReLU[relu]/RELU";
"40 SmallModel/SmallBlock[residual3]/add" -> "49 SmallModel/SmallBlock[residual4]/add";
"40 SmallModel/SmallBlock[residual3]/add" -> "50 SmallModel/cat";
"41 SmallModel/SmallBlock[residual4]/ReLU[relu]/RELU" -> "44 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/conv2d";
"42 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "43 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"43 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "44 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/conv2d";
"44 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/conv2d" -> "45 SmallModel/SmallBlock[residual4]/ReLU[relu]/RELU";
"45 SmallModel/SmallBlock[residual4]/ReLU[relu]/RELU" -> "48 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/conv2d";
"46 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "47 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"47 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "48 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/conv2d";
"48 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/conv2d" -> "49 SmallModel/SmallBlock[residual4]/add";
"49 SmallModel/SmallBlock[residual4]/add" -> "50 SmallModel/cat";
"50 SmallModel/cat" -> "53 SmallModel/NNCFConv2d[conv_mid]/conv2d";
"51 SmallModel/NNCFConv2d[conv_mid]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "52 SmallModel/NNCFConv2d[conv_mid]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"52 SmallModel/NNCFConv2d[conv_mid]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "53 SmallModel/NNCFConv2d[conv_mid]/conv2d";
"53 SmallModel/NNCFConv2d[conv_mid]/conv2d" -> "54 SmallModel/ReLU[relu]/RELU";
"54 SmallModel/ReLU[relu]/RELU" -> "57 SmallModel/Sequential[upscale]/NNCFConv2d[0]/conv2d";
"55 SmallModel/Sequential[upscale]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "56 SmallModel/Sequential[upscale]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"56 SmallModel/Sequential[upscale]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "57 SmallModel/Sequential[upscale]/NNCFConv2d[0]/conv2d";
"57 SmallModel/Sequential[upscale]/NNCFConv2d[0]/conv2d" -> "58 SmallModel/Sequential[upscale]/PixelShuffle[1]/pixel_shuffle";
"58 SmallModel/Sequential[upscale]/PixelShuffle[1]/pixel_shuffle" -> "59 SmallModel/Sequential[upscale]/ReLU[2]/RELU";
"59 SmallModel/Sequential[upscale]/ReLU[2]/RELU" -> "62 SmallModel/NNCFConv2d[conv_output]/conv2d";
"60 SmallModel/NNCFConv2d[conv_output]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "61 SmallModel/NNCFConv2d[conv_output]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"61 SmallModel/NNCFConv2d[conv_output]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "62 SmallModel/NNCFConv2d[conv_output]/conv2d";
"62 SmallModel/NNCFConv2d[conv_output]/conv2d" -> "63 SmallModel/__mul__";
"63 SmallModel/__mul__" -> "64 SmallModel/add";
"64 SmallModel/add" -> "65 /nncf_model_output";
}
