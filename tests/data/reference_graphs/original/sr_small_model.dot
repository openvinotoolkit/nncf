strict digraph  {
"0 /nncf_model_input_0" [id=0, scope="", type=nncf_model_input];
"1 /nncf_model_input_1" [id=1, scope="", type=nncf_model_input];
"2 SmallModel/Conv2d[conv_cubic1]/conv2d_0" [id=2, scope="SmallModel/Conv2d[conv_cubic1]", type=conv2d];
"3 SmallModel/ReLU[relu]/RELU_0" [id=3, scope="SmallModel/ReLU[relu]", type=RELU];
"4 SmallModel/Conv2d[conv_cubic2]/conv2d_0" [id=4, scope="SmallModel/Conv2d[conv_cubic2]", type=conv2d];
"5 SmallModel/Sigmoid[sigmoid]/sigmoid_0" [id=5, scope="SmallModel/Sigmoid[sigmoid]", type=sigmoid];
"6 SmallModel/Conv2d[conv_input]/conv2d_0" [id=6, scope="SmallModel/Conv2d[conv_input]", type=conv2d];
"7 SmallModel/ReLU[relu]/RELU_1" [id=7, scope="SmallModel/ReLU[relu]", type=RELU];
"8 SmallModel/SmallBlock[residual1]/ReLU[relu]/RELU_0" [id=8, scope="SmallModel/SmallBlock[residual1]/ReLU[relu]", type=RELU];
"9 SmallModel/SmallBlock[residual1]/Conv2d[conv1]/conv2d_0" [id=9, scope="SmallModel/SmallBlock[residual1]/Conv2d[conv1]", type=conv2d];
"10 SmallModel/SmallBlock[residual1]/ReLU[relu]/RELU_1" [id=10, scope="SmallModel/SmallBlock[residual1]/ReLU[relu]", type=RELU];
"11 SmallModel/SmallBlock[residual1]/Conv2d[conv2]/conv2d_0" [id=11, scope="SmallModel/SmallBlock[residual1]/Conv2d[conv2]", type=conv2d];
"12 SmallModel/SmallBlock[residual1]/add_0" [id=12, scope="SmallModel/SmallBlock[residual1]", type=add];
"13 SmallModel/SmallBlock[residual2]/ReLU[relu]/RELU_0" [id=13, scope="SmallModel/SmallBlock[residual2]/ReLU[relu]", type=RELU];
"14 SmallModel/SmallBlock[residual2]/Conv2d[conv1]/conv2d_0" [id=14, scope="SmallModel/SmallBlock[residual2]/Conv2d[conv1]", type=conv2d];
"15 SmallModel/SmallBlock[residual2]/ReLU[relu]/RELU_1" [id=15, scope="SmallModel/SmallBlock[residual2]/ReLU[relu]", type=RELU];
"16 SmallModel/SmallBlock[residual2]/Conv2d[conv2]/conv2d_0" [id=16, scope="SmallModel/SmallBlock[residual2]/Conv2d[conv2]", type=conv2d];
"17 SmallModel/SmallBlock[residual2]/add_0" [id=17, scope="SmallModel/SmallBlock[residual2]", type=add];
"18 SmallModel/SmallBlock[residual3]/ReLU[relu]/RELU_0" [id=18, scope="SmallModel/SmallBlock[residual3]/ReLU[relu]", type=RELU];
"19 SmallModel/SmallBlock[residual3]/Conv2d[conv1]/conv2d_0" [id=19, scope="SmallModel/SmallBlock[residual3]/Conv2d[conv1]", type=conv2d];
"20 SmallModel/SmallBlock[residual3]/ReLU[relu]/RELU_1" [id=20, scope="SmallModel/SmallBlock[residual3]/ReLU[relu]", type=RELU];
"21 SmallModel/SmallBlock[residual3]/Conv2d[conv2]/conv2d_0" [id=21, scope="SmallModel/SmallBlock[residual3]/Conv2d[conv2]", type=conv2d];
"22 SmallModel/SmallBlock[residual3]/add_0" [id=22, scope="SmallModel/SmallBlock[residual3]", type=add];
"23 SmallModel/SmallBlock[residual4]/ReLU[relu]/RELU_0" [id=23, scope="SmallModel/SmallBlock[residual4]/ReLU[relu]", type=RELU];
"24 SmallModel/SmallBlock[residual4]/Conv2d[conv1]/conv2d_0" [id=24, scope="SmallModel/SmallBlock[residual4]/Conv2d[conv1]", type=conv2d];
"25 SmallModel/SmallBlock[residual4]/ReLU[relu]/RELU_1" [id=25, scope="SmallModel/SmallBlock[residual4]/ReLU[relu]", type=RELU];
"26 SmallModel/SmallBlock[residual4]/Conv2d[conv2]/conv2d_0" [id=26, scope="SmallModel/SmallBlock[residual4]/Conv2d[conv2]", type=conv2d];
"27 SmallModel/SmallBlock[residual4]/add_0" [id=27, scope="SmallModel/SmallBlock[residual4]", type=add];
"28 SmallModel/cat_0" [id=28, scope=SmallModel, type=cat];
"29 SmallModel/Conv2d[conv_mid]/conv2d_0" [id=29, scope="SmallModel/Conv2d[conv_mid]", type=conv2d];
"30 SmallModel/ReLU[relu]/RELU_2" [id=30, scope="SmallModel/ReLU[relu]", type=RELU];
"31 SmallModel/Sequential[upscale]/Conv2d[0]/conv2d_0" [id=31, scope="SmallModel/Sequential[upscale]/Conv2d[0]", type=conv2d];
"32 SmallModel/Sequential[upscale]/PixelShuffle[1]/pixel_shuffle_0" [id=32, scope="SmallModel/Sequential[upscale]/PixelShuffle[1]", type=pixel_shuffle];
"33 SmallModel/Sequential[upscale]/ReLU[2]/RELU_0" [id=33, scope="SmallModel/Sequential[upscale]/ReLU[2]", type=RELU];
"34 SmallModel/Conv2d[conv_output]/conv2d_0" [id=34, scope="SmallModel/Conv2d[conv_output]", type=conv2d];
"35 SmallModel/__mul___0" [id=35, scope=SmallModel, type=__mul__];
"36 SmallModel/add_0" [id=36, scope=SmallModel, type=add];
"0 /nncf_model_input_0" -> "6 SmallModel/Conv2d[conv_input]/conv2d_0";
"1 /nncf_model_input_1" -> "2 SmallModel/Conv2d[conv_cubic1]/conv2d_0";
"2 SmallModel/Conv2d[conv_cubic1]/conv2d_0" -> "3 SmallModel/ReLU[relu]/RELU_0";
"3 SmallModel/ReLU[relu]/RELU_0" -> "4 SmallModel/Conv2d[conv_cubic2]/conv2d_0";
"4 SmallModel/Conv2d[conv_cubic2]/conv2d_0" -> "5 SmallModel/Sigmoid[sigmoid]/sigmoid_0";
"6 SmallModel/Conv2d[conv_input]/conv2d_0" -> "7 SmallModel/ReLU[relu]/RELU_1";
"7 SmallModel/ReLU[relu]/RELU_1" -> "8 SmallModel/SmallBlock[residual1]/ReLU[relu]/RELU_0";
"8 SmallModel/SmallBlock[residual1]/ReLU[relu]/RELU_0" -> "9 SmallModel/SmallBlock[residual1]/Conv2d[conv1]/conv2d_0";
"1 /nncf_model_input_1" -> "36 SmallModel/add_0";
"5 SmallModel/Sigmoid[sigmoid]/sigmoid_0" -> "35 SmallModel/__mul___0";
"7 SmallModel/ReLU[relu]/RELU_1" -> "12 SmallModel/SmallBlock[residual1]/add_0";
"7 SmallModel/ReLU[relu]/RELU_1" -> "28 SmallModel/cat_0";
"9 SmallModel/SmallBlock[residual1]/Conv2d[conv1]/conv2d_0" -> "10 SmallModel/SmallBlock[residual1]/ReLU[relu]/RELU_1";
"10 SmallModel/SmallBlock[residual1]/ReLU[relu]/RELU_1" -> "11 SmallModel/SmallBlock[residual1]/Conv2d[conv2]/conv2d_0";
"11 SmallModel/SmallBlock[residual1]/Conv2d[conv2]/conv2d_0" -> "12 SmallModel/SmallBlock[residual1]/add_0";
"12 SmallModel/SmallBlock[residual1]/add_0" -> "13 SmallModel/SmallBlock[residual2]/ReLU[relu]/RELU_0";
"12 SmallModel/SmallBlock[residual1]/add_0" -> "17 SmallModel/SmallBlock[residual2]/add_0";
"12 SmallModel/SmallBlock[residual1]/add_0" -> "28 SmallModel/cat_0";
"13 SmallModel/SmallBlock[residual2]/ReLU[relu]/RELU_0" -> "14 SmallModel/SmallBlock[residual2]/Conv2d[conv1]/conv2d_0";
"14 SmallModel/SmallBlock[residual2]/Conv2d[conv1]/conv2d_0" -> "15 SmallModel/SmallBlock[residual2]/ReLU[relu]/RELU_1";
"15 SmallModel/SmallBlock[residual2]/ReLU[relu]/RELU_1" -> "16 SmallModel/SmallBlock[residual2]/Conv2d[conv2]/conv2d_0";
"16 SmallModel/SmallBlock[residual2]/Conv2d[conv2]/conv2d_0" -> "17 SmallModel/SmallBlock[residual2]/add_0";
"17 SmallModel/SmallBlock[residual2]/add_0" -> "18 SmallModel/SmallBlock[residual3]/ReLU[relu]/RELU_0";
"17 SmallModel/SmallBlock[residual2]/add_0" -> "22 SmallModel/SmallBlock[residual3]/add_0";
"17 SmallModel/SmallBlock[residual2]/add_0" -> "28 SmallModel/cat_0";
"18 SmallModel/SmallBlock[residual3]/ReLU[relu]/RELU_0" -> "19 SmallModel/SmallBlock[residual3]/Conv2d[conv1]/conv2d_0";
"19 SmallModel/SmallBlock[residual3]/Conv2d[conv1]/conv2d_0" -> "20 SmallModel/SmallBlock[residual3]/ReLU[relu]/RELU_1";
"20 SmallModel/SmallBlock[residual3]/ReLU[relu]/RELU_1" -> "21 SmallModel/SmallBlock[residual3]/Conv2d[conv2]/conv2d_0";
"21 SmallModel/SmallBlock[residual3]/Conv2d[conv2]/conv2d_0" -> "22 SmallModel/SmallBlock[residual3]/add_0";
"22 SmallModel/SmallBlock[residual3]/add_0" -> "23 SmallModel/SmallBlock[residual4]/ReLU[relu]/RELU_0";
"22 SmallModel/SmallBlock[residual3]/add_0" -> "27 SmallModel/SmallBlock[residual4]/add_0";
"22 SmallModel/SmallBlock[residual3]/add_0" -> "28 SmallModel/cat_0";
"23 SmallModel/SmallBlock[residual4]/ReLU[relu]/RELU_0" -> "24 SmallModel/SmallBlock[residual4]/Conv2d[conv1]/conv2d_0";
"24 SmallModel/SmallBlock[residual4]/Conv2d[conv1]/conv2d_0" -> "25 SmallModel/SmallBlock[residual4]/ReLU[relu]/RELU_1";
"25 SmallModel/SmallBlock[residual4]/ReLU[relu]/RELU_1" -> "26 SmallModel/SmallBlock[residual4]/Conv2d[conv2]/conv2d_0";
"26 SmallModel/SmallBlock[residual4]/Conv2d[conv2]/conv2d_0" -> "27 SmallModel/SmallBlock[residual4]/add_0";
"27 SmallModel/SmallBlock[residual4]/add_0" -> "28 SmallModel/cat_0";
"28 SmallModel/cat_0" -> "29 SmallModel/Conv2d[conv_mid]/conv2d_0";
"29 SmallModel/Conv2d[conv_mid]/conv2d_0" -> "30 SmallModel/ReLU[relu]/RELU_2";
"30 SmallModel/ReLU[relu]/RELU_2" -> "31 SmallModel/Sequential[upscale]/Conv2d[0]/conv2d_0";
"31 SmallModel/Sequential[upscale]/Conv2d[0]/conv2d_0" -> "32 SmallModel/Sequential[upscale]/PixelShuffle[1]/pixel_shuffle_0";
"32 SmallModel/Sequential[upscale]/PixelShuffle[1]/pixel_shuffle_0" -> "33 SmallModel/Sequential[upscale]/ReLU[2]/RELU_0";
"33 SmallModel/Sequential[upscale]/ReLU[2]/RELU_0" -> "34 SmallModel/Conv2d[conv_output]/conv2d_0";
"34 SmallModel/Conv2d[conv_output]/conv2d_0" -> "35 SmallModel/__mul___0";
"35 SmallModel/__mul___0" -> "36 SmallModel/add_0";
}
