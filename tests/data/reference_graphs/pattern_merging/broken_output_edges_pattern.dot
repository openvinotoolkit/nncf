strict digraph  {
conv2d [associated_ip_node_keys="{'PRE HOOK conv2d', 'POST HOOK conv2d'}", node_type="InsertionPointGraphNodeType.OPERATOR", op_meta=None, regular_node_ref="{'op_exec_context': <nncf.dynamic_graph.graph.OperationExecutionContext object at 0x7f8ca4e9ae50>}"];
batch_norm [associated_ip_node_keys="{'PRE HOOK batch_norm', 'POST HOOK batch_norm'}", node_type="InsertionPointGraphNodeType.OPERATOR", op_meta=None, regular_node_ref="{'op_exec_context': <nncf.dynamic_graph.graph.OperationExecutionContext object at 0x7f8ca4e9ab50>}"];
RELU [associated_ip_node_keys="{'POST HOOK RELU', 'PRE HOOK RELU'}", node_type="InsertionPointGraphNodeType.OPERATOR", op_meta=None, regular_node_ref="{'op_exec_context': <nncf.dynamic_graph.graph.OperationExecutionContext object at 0x7f8ca4e9a850>}"];
A [associated_ip_node_keys="{'POST HOOK A', 'PRE HOOK A'}", node_type="InsertionPointGraphNodeType.OPERATOR", op_meta=None, regular_node_ref="{'op_exec_context': <nncf.dynamic_graph.graph.OperationExecutionContext object at 0x7f8ca4e9a590>}"];
B [associated_ip_node_keys="{'PRE HOOK B', 'POST HOOK B'}", node_type="InsertionPointGraphNodeType.OPERATOR", op_meta=None, regular_node_ref="{'op_exec_context': <nncf.dynamic_graph.graph.OperationExecutionContext object at 0x7f8ca4e9a2d0>}"];
C [associated_ip_node_keys="{'PRE HOOK C', 'POST HOOK C'}", node_type="InsertionPointGraphNodeType.OPERATOR", op_meta=None, regular_node_ref="{'op_exec_context': <nncf.dynamic_graph.graph.OperationExecutionContext object at 0x7f8ca4e967d0>}"];
"PRE HOOK conv2d" [insertion_point_data="InsertionType.OPERATOR_PRE_HOOK /conv2d_0", node_type="InsertionPointGraphNodeType.INSERTION_POINT"];
"POST HOOK conv2d" [insertion_point_data="InsertionType.OPERATOR_POST_HOOK /conv2d_0", node_type="InsertionPointGraphNodeType.INSERTION_POINT"];
"PRE HOOK batch_norm" [insertion_point_data="InsertionType.OPERATOR_PRE_HOOK /batch_norm_0", node_type="InsertionPointGraphNodeType.INSERTION_POINT"];
"POST HOOK batch_norm" [insertion_point_data="InsertionType.OPERATOR_POST_HOOK /batch_norm_0", node_type="InsertionPointGraphNodeType.INSERTION_POINT"];
"PRE HOOK RELU" [insertion_point_data="InsertionType.OPERATOR_PRE_HOOK /RELU_0", node_type="InsertionPointGraphNodeType.INSERTION_POINT"];
"POST HOOK RELU" [insertion_point_data="InsertionType.OPERATOR_POST_HOOK /RELU_0", node_type="InsertionPointGraphNodeType.INSERTION_POINT"];
"PRE HOOK A" [insertion_point_data="InsertionType.OPERATOR_PRE_HOOK /A_0", node_type="InsertionPointGraphNodeType.INSERTION_POINT"];
"POST HOOK A" [insertion_point_data="InsertionType.OPERATOR_POST_HOOK /A_0", node_type="InsertionPointGraphNodeType.INSERTION_POINT"];
"PRE HOOK B" [insertion_point_data="InsertionType.OPERATOR_PRE_HOOK /B_0", node_type="InsertionPointGraphNodeType.INSERTION_POINT"];
"POST HOOK B" [insertion_point_data="InsertionType.OPERATOR_POST_HOOK /B_0", node_type="InsertionPointGraphNodeType.INSERTION_POINT"];
"PRE HOOK C" [insertion_point_data="InsertionType.OPERATOR_PRE_HOOK /C_0", node_type="InsertionPointGraphNodeType.INSERTION_POINT"];
"POST HOOK C" [insertion_point_data="InsertionType.OPERATOR_POST_HOOK /C_0", node_type="InsertionPointGraphNodeType.INSERTION_POINT"];
conv2d -> "POST HOOK conv2d";
batch_norm -> "POST HOOK batch_norm";
RELU -> "POST HOOK RELU";
A -> "POST HOOK A";
B -> "POST HOOK B";
C -> "POST HOOK C";
"PRE HOOK conv2d" -> conv2d;
"POST HOOK conv2d" -> "PRE HOOK batch_norm";
"POST HOOK conv2d" -> "PRE HOOK C";
"PRE HOOK batch_norm" -> batch_norm;
"POST HOOK batch_norm" -> "PRE HOOK RELU";
"PRE HOOK RELU" -> RELU;
"POST HOOK RELU" -> "PRE HOOK C";
"PRE HOOK A" -> A;
"POST HOOK A" -> "PRE HOOK conv2d";
"PRE HOOK B" -> B;
"PRE HOOK C" -> C;
"POST HOOK C" -> "PRE HOOK B";
}
