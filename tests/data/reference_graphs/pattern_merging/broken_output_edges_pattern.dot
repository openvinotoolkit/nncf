strict digraph  {
conv2d [associated_ip_node_keys="{'POST HOOK conv2d', 'PRE HOOK 0 conv2d'}", node_type="InsertionPointGraphNodeType.OPERATOR", op_meta=None, regular_node_ref="{'op_exec_context': <nncf.dynamic_graph.graph.OperationExecutionContext object at 0x7f9e5bb12810>}"];
batch_norm [associated_ip_node_keys="{'POST HOOK batch_norm', 'PRE HOOK 0 batch_norm'}", node_type="InsertionPointGraphNodeType.OPERATOR", op_meta=None, regular_node_ref="{'op_exec_context': <nncf.dynamic_graph.graph.OperationExecutionContext object at 0x7f9e5bb12b10>}"];
RELU [associated_ip_node_keys="{'PRE HOOK 0 RELU', 'POST HOOK RELU'}", node_type="InsertionPointGraphNodeType.OPERATOR", op_meta=None, regular_node_ref="{'op_exec_context': <nncf.dynamic_graph.graph.OperationExecutionContext object at 0x7f9e5bb12dd0>}"];
A [associated_ip_node_keys="{'POST HOOK A'}", node_type="InsertionPointGraphNodeType.OPERATOR", op_meta=None, regular_node_ref="{'op_exec_context': <nncf.dynamic_graph.graph.OperationExecutionContext object at 0x7f9e5ba9e0d0>}"];
B [associated_ip_node_keys="{'PRE HOOK 0 B', 'POST HOOK B'}", node_type="InsertionPointGraphNodeType.OPERATOR", op_meta=None, regular_node_ref="{'op_exec_context': <nncf.dynamic_graph.graph.OperationExecutionContext object at 0x7f9e5ba9e390>}"];
C [associated_ip_node_keys="{'POST HOOK C', 'PRE HOOK 1 C', 'PRE HOOK 0 C'}", node_type="InsertionPointGraphNodeType.OPERATOR", op_meta=None, regular_node_ref="{'op_exec_context': <nncf.dynamic_graph.graph.OperationExecutionContext object at 0x7f9e5ba9e650>}"];
"PRE HOOK 0 conv2d" [insertion_point_data="TargetType.OPERATOR_PRE_HOOK 0 /conv2d_0", node_type="InsertionPointGraphNodeType.INSERTION_POINT"];
"POST HOOK conv2d" [insertion_point_data="TargetType.OPERATOR_POST_HOOK /conv2d_0", node_type="InsertionPointGraphNodeType.INSERTION_POINT"];
"PRE HOOK 0 batch_norm" [insertion_point_data="TargetType.OPERATOR_PRE_HOOK 0 /batch_norm_0", node_type="InsertionPointGraphNodeType.INSERTION_POINT"];
"POST HOOK batch_norm" [insertion_point_data="TargetType.OPERATOR_POST_HOOK /batch_norm_0", node_type="InsertionPointGraphNodeType.INSERTION_POINT"];
"PRE HOOK 0 RELU" [insertion_point_data="TargetType.OPERATOR_PRE_HOOK 0 /RELU_0", node_type="InsertionPointGraphNodeType.INSERTION_POINT"];
"POST HOOK RELU" [insertion_point_data="TargetType.OPERATOR_POST_HOOK /RELU_0", node_type="InsertionPointGraphNodeType.INSERTION_POINT"];
"POST HOOK A" [insertion_point_data="TargetType.OPERATOR_POST_HOOK /A_0", node_type="InsertionPointGraphNodeType.INSERTION_POINT"];
"PRE HOOK 0 B" [insertion_point_data="TargetType.OPERATOR_PRE_HOOK 0 /B_0", node_type="InsertionPointGraphNodeType.INSERTION_POINT"];
"POST HOOK B" [insertion_point_data="TargetType.OPERATOR_POST_HOOK /B_0", node_type="InsertionPointGraphNodeType.INSERTION_POINT"];
"PRE HOOK 1 C" [insertion_point_data="TargetType.OPERATOR_PRE_HOOK 1 /C_0", node_type="InsertionPointGraphNodeType.INSERTION_POINT"];
"PRE HOOK 0 C" [insertion_point_data="TargetType.OPERATOR_PRE_HOOK 0 /C_0", node_type="InsertionPointGraphNodeType.INSERTION_POINT"];
"POST HOOK C" [insertion_point_data="TargetType.OPERATOR_POST_HOOK /C_0", node_type="InsertionPointGraphNodeType.INSERTION_POINT"];
conv2d -> "POST HOOK conv2d";
batch_norm -> "POST HOOK batch_norm";
RELU -> "POST HOOK RELU";
A -> "POST HOOK A";
B -> "POST HOOK B";
C -> "POST HOOK C";
"PRE HOOK 0 conv2d" -> conv2d;
"POST HOOK conv2d" -> "PRE HOOK 0 batch_norm";
"POST HOOK conv2d" -> "PRE HOOK 1 C";
"PRE HOOK 0 batch_norm" -> batch_norm;
"POST HOOK batch_norm" -> "PRE HOOK 0 RELU";
"PRE HOOK 0 RELU" -> RELU;
"POST HOOK RELU" -> "PRE HOOK 0 C";
"POST HOOK A" -> "PRE HOOK 0 conv2d";
"PRE HOOK 0 B" -> B;
"PRE HOOK 1 C" -> C;
"PRE HOOK 0 C" -> C;
"POST HOOK C" -> "PRE HOOK 0 B";
}
