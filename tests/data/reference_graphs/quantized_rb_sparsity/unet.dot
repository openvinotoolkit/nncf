strict digraph  {
"0 /nncf_model_input_0" [id=0, scope="", type=nncf_model_input];
"1 SymmetricQuantizer/symmetric_quantize_0" [id=1, scope=SymmetricQuantizer, type=symmetric_quantize];
"2 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=2, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"3 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=3, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"4 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=4, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"5 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/conv2d_0" [id=5, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"6 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" [id=6, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"7 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[2]/RELU_0" [id=7, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[2]", type=RELU];
"8 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" [id=8, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[2]/SymmetricQuantizer", type=symmetric_quantize];
"9 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=9, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"10 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=10, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"11 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=11, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"12 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/conv2d_0" [id=12, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"13 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" [id=13, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"14 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[5]/RELU_0" [id=14, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[5]", type=RELU];
"15 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" [id=15, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[5]/SymmetricQuantizer", type=symmetric_quantize];
"16 UNet/max_pool2d_0" [id=16, scope=UNet, type=max_pool2d];
"17 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=17, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"18 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=18, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"19 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=19, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"20 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/conv2d_0" [id=20, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"21 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" [id=21, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"22 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[2]/RELU_0" [id=22, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[2]", type=RELU];
"23 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" [id=23, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[2]/SymmetricQuantizer", type=symmetric_quantize];
"24 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=24, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"25 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=25, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"26 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=26, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"27 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/conv2d_0" [id=27, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"28 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" [id=28, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"29 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[5]/RELU_0" [id=29, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[5]", type=RELU];
"30 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" [id=30, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[5]/SymmetricQuantizer", type=symmetric_quantize];
"31 UNet/max_pool2d_1" [id=31, scope=UNet, type=max_pool2d];
"32 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=32, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"33 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=33, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"34 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=34, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"35 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/conv2d_0" [id=35, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"36 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" [id=36, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"37 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[2]/RELU_0" [id=37, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[2]", type=RELU];
"38 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" [id=38, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[2]/SymmetricQuantizer", type=symmetric_quantize];
"39 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=39, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"40 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=40, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"41 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=41, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"42 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/conv2d_0" [id=42, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"43 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" [id=43, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"44 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[5]/RELU_0" [id=44, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[5]", type=RELU];
"45 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" [id=45, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[5]/SymmetricQuantizer", type=symmetric_quantize];
"46 UNet/max_pool2d_2" [id=46, scope=UNet, type=max_pool2d];
"47 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=47, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"48 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=48, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"49 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=49, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"50 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/conv2d_0" [id=50, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"51 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" [id=51, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"52 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[2]/RELU_0" [id=52, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[2]", type=RELU];
"53 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" [id=53, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[2]/SymmetricQuantizer", type=symmetric_quantize];
"54 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=54, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"55 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=55, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"56 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=56, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"57 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/conv2d_0" [id=57, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"58 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" [id=58, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"59 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[5]/RELU_0" [id=59, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[5]", type=RELU];
"60 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" [id=60, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[5]/SymmetricQuantizer", type=symmetric_quantize];
"61 UNet/max_pool2d_3" [id=61, scope=UNet, type=max_pool2d];
"62 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=62, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"63 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=63, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"64 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=64, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"65 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/conv2d_0" [id=65, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"66 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" [id=66, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"67 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[2]/RELU_0" [id=67, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[2]", type=RELU];
"68 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" [id=68, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[2]/SymmetricQuantizer", type=symmetric_quantize];
"69 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=69, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"70 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=70, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"71 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=71, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"72 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/conv2d_0" [id=72, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"73 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" [id=73, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"74 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[5]/RELU_0" [id=74, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[5]", type=RELU];
"75 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" [id=75, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[5]/SymmetricQuantizer", type=symmetric_quantize];
"76 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=76, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"77 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=77, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"78 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=78, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"79 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/conv_transpose2d_0" [id=79, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]", type=conv_transpose2d];
"80 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/SymmetricQuantizer/symmetric_quantize_0" [id=80, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/SymmetricQuantizer", type=symmetric_quantize];
"81 UNet/ModuleList[up_path]/UNetUpBlock[0]/__getitem___0" [id=81, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]", type=__getitem__];
"82 UNet/ModuleList[up_path]/UNetUpBlock[0]/cat_0" [id=82, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]", type=cat];
"83 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=83, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"84 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=84, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"85 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=85, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"86 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0" [id=86, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"87 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" [id=87, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"88 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU_0" [id=88, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]", type=RELU];
"89 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" [id=89, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer", type=symmetric_quantize];
"90 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=90, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"91 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=91, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"92 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=92, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"93 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0" [id=93, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"94 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" [id=94, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"95 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU_0" [id=95, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]", type=RELU];
"96 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" [id=96, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer", type=symmetric_quantize];
"97 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=97, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"98 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=98, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"99 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=99, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"100 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/conv_transpose2d_0" [id=100, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]", type=conv_transpose2d];
"101 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/SymmetricQuantizer/symmetric_quantize_0" [id=101, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/SymmetricQuantizer", type=symmetric_quantize];
"102 UNet/ModuleList[up_path]/UNetUpBlock[1]/__getitem___0" [id=102, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]", type=__getitem__];
"103 UNet/ModuleList[up_path]/UNetUpBlock[1]/cat_0" [id=103, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]", type=cat];
"104 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=104, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"105 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=105, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"106 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=106, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"107 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0" [id=107, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"108 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" [id=108, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"109 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU_0" [id=109, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]", type=RELU];
"110 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" [id=110, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer", type=symmetric_quantize];
"111 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=111, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"112 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=112, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"113 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=113, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"114 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0" [id=114, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"115 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" [id=115, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"116 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU_0" [id=116, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]", type=RELU];
"117 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" [id=117, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer", type=symmetric_quantize];
"118 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=118, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"119 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=119, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"120 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=120, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"121 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/conv_transpose2d_0" [id=121, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]", type=conv_transpose2d];
"122 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/SymmetricQuantizer/symmetric_quantize_0" [id=122, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/SymmetricQuantizer", type=symmetric_quantize];
"123 UNet/ModuleList[up_path]/UNetUpBlock[2]/__getitem___0" [id=123, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]", type=__getitem__];
"124 UNet/ModuleList[up_path]/UNetUpBlock[2]/cat_0" [id=124, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]", type=cat];
"125 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=125, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"126 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=126, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"127 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=127, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"128 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0" [id=128, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"129 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" [id=129, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"130 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU_0" [id=130, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]", type=RELU];
"131 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" [id=131, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer", type=symmetric_quantize];
"132 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=132, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"133 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=133, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"134 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=134, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"135 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0" [id=135, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"136 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" [id=136, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"137 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU_0" [id=137, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]", type=RELU];
"138 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" [id=138, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer", type=symmetric_quantize];
"139 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=139, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"140 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=140, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"141 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=141, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"142 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/conv_transpose2d_0" [id=142, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]", type=conv_transpose2d];
"143 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/SymmetricQuantizer/symmetric_quantize_0" [id=143, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/SymmetricQuantizer", type=symmetric_quantize];
"144 UNet/ModuleList[up_path]/UNetUpBlock[3]/__getitem___0" [id=144, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]", type=__getitem__];
"145 UNet/ModuleList[up_path]/UNetUpBlock[3]/cat_0" [id=145, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]", type=cat];
"146 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=146, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"147 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=147, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"148 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=148, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"149 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0" [id=149, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"150 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" [id=150, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"151 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU_0" [id=151, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]", type=RELU];
"152 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" [id=152, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer", type=symmetric_quantize];
"153 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=153, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"154 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=154, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"155 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=155, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"156 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0" [id=156, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"157 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" [id=157, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"158 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU_0" [id=158, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]", type=RELU];
"159 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" [id=159, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer", type=symmetric_quantize];
"160 UNet/NNCFConv2d[last]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=160, scope="UNet/NNCFConv2d[last]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"161 UNet/NNCFConv2d[last]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=161, scope="UNet/NNCFConv2d[last]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"162 UNet/NNCFConv2d[last]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=162, scope="UNet/NNCFConv2d[last]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"163 UNet/NNCFConv2d[last]/conv2d_0" [id=163, scope="UNet/NNCFConv2d[last]", type=conv2d];
"164 /nncf_model_output_0" [id=164, scope="", type=nncf_model_output];
"0 /nncf_model_input_0" -> "1 SymmetricQuantizer/symmetric_quantize_0";
"1 SymmetricQuantizer/symmetric_quantize_0" -> "5 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"2 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "3 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"3 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "4 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"4 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "5 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"5 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/conv2d_0" -> "6 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/BatchNorm2d[1]/batch_norm_0";
"6 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" -> "7 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[2]/RELU_0";
"7 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[2]/RELU_0" -> "8 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0";
"8 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" -> "12 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"9 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "10 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"10 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "11 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"11 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "12 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"12 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/conv2d_0" -> "13 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/BatchNorm2d[4]/batch_norm_0";
"13 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" -> "14 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[5]/RELU_0";
"14 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[5]/RELU_0" -> "15 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0";
"15 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "16 UNet/max_pool2d_0";
"16 UNet/max_pool2d_0" -> "20 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"17 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "18 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"18 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "19 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"19 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "20 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"20 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/conv2d_0" -> "21 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/BatchNorm2d[1]/batch_norm_0";
"21 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" -> "22 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[2]/RELU_0";
"22 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[2]/RELU_0" -> "23 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0";
"23 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" -> "27 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"24 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "25 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"25 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "26 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"26 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "27 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"27 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/conv2d_0" -> "28 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/BatchNorm2d[4]/batch_norm_0";
"28 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" -> "29 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[5]/RELU_0";
"29 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[5]/RELU_0" -> "30 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0";
"30 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "31 UNet/max_pool2d_1";
"31 UNet/max_pool2d_1" -> "35 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"32 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "33 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"33 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "34 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"34 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "35 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"35 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/conv2d_0" -> "36 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/BatchNorm2d[1]/batch_norm_0";
"36 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" -> "37 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[2]/RELU_0";
"37 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[2]/RELU_0" -> "38 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0";
"38 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" -> "42 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"39 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "40 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"40 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "41 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"41 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "42 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"42 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/conv2d_0" -> "43 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/BatchNorm2d[4]/batch_norm_0";
"43 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" -> "44 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[5]/RELU_0";
"44 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[5]/RELU_0" -> "45 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0";
"45 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "46 UNet/max_pool2d_2";
"46 UNet/max_pool2d_2" -> "50 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"47 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "48 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"48 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "49 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"49 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "50 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"50 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/conv2d_0" -> "51 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/BatchNorm2d[1]/batch_norm_0";
"51 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" -> "52 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[2]/RELU_0";
"52 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[2]/RELU_0" -> "53 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0";
"53 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" -> "57 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"54 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "55 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"55 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "56 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"56 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "57 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"57 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/conv2d_0" -> "58 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/BatchNorm2d[4]/batch_norm_0";
"58 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" -> "59 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[5]/RELU_0";
"59 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[5]/RELU_0" -> "60 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0";
"60 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "61 UNet/max_pool2d_3";
"60 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "81 UNet/ModuleList[up_path]/UNetUpBlock[0]/__getitem___0";
"61 UNet/max_pool2d_3" -> "65 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"62 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "63 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"63 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "64 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"64 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "65 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"65 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/conv2d_0" -> "66 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/BatchNorm2d[1]/batch_norm_0";
"66 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" -> "67 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[2]/RELU_0";
"67 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[2]/RELU_0" -> "68 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0";
"68 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" -> "72 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"69 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "70 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"70 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "71 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"71 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "72 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"72 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/conv2d_0" -> "73 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/BatchNorm2d[4]/batch_norm_0";
"73 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" -> "74 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[5]/RELU_0";
"74 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[5]/RELU_0" -> "75 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0";
"75 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "79 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/conv_transpose2d_0";
"76 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "77 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"77 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "78 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"78 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "79 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/conv_transpose2d_0";
"79 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/conv_transpose2d_0" -> "80 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/SymmetricQuantizer/symmetric_quantize_0";
"80 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/SymmetricQuantizer/symmetric_quantize_0" -> "82 UNet/ModuleList[up_path]/UNetUpBlock[0]/cat_0";
"81 UNet/ModuleList[up_path]/UNetUpBlock[0]/__getitem___0" -> "82 UNet/ModuleList[up_path]/UNetUpBlock[0]/cat_0";
"82 UNet/ModuleList[up_path]/UNetUpBlock[0]/cat_0" -> "86 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"83 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "84 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"84 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "85 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"85 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "86 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"86 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0" -> "87 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm_0";
"87 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" -> "88 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU_0";
"88 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU_0" -> "89 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0";
"89 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" -> "93 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"90 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "91 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"91 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "92 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"92 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "93 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"93 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0" -> "94 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm_0";
"94 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" -> "95 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU_0";
"95 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU_0" -> "96 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0";
"97 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "98 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"98 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "99 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"15 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "144 UNet/ModuleList[up_path]/UNetUpBlock[3]/__getitem___0";
"30 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "123 UNet/ModuleList[up_path]/UNetUpBlock[2]/__getitem___0";
"45 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "102 UNet/ModuleList[up_path]/UNetUpBlock[1]/__getitem___0";
"96 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "100 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/conv_transpose2d_0";
"99 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "100 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/conv_transpose2d_0";
"100 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/conv_transpose2d_0" -> "101 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/SymmetricQuantizer/symmetric_quantize_0";
"101 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/SymmetricQuantizer/symmetric_quantize_0" -> "103 UNet/ModuleList[up_path]/UNetUpBlock[1]/cat_0";
"102 UNet/ModuleList[up_path]/UNetUpBlock[1]/__getitem___0" -> "103 UNet/ModuleList[up_path]/UNetUpBlock[1]/cat_0";
"103 UNet/ModuleList[up_path]/UNetUpBlock[1]/cat_0" -> "107 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"104 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "105 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"105 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "106 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"106 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "107 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"107 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0" -> "108 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm_0";
"108 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" -> "109 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU_0";
"109 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU_0" -> "110 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0";
"110 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" -> "114 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"111 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "112 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"112 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "113 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"113 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "114 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"114 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0" -> "115 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm_0";
"115 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" -> "116 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU_0";
"116 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU_0" -> "117 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0";
"117 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "121 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/conv_transpose2d_0";
"118 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "119 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"119 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "120 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"120 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "121 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/conv_transpose2d_0";
"121 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/conv_transpose2d_0" -> "122 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/SymmetricQuantizer/symmetric_quantize_0";
"122 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/SymmetricQuantizer/symmetric_quantize_0" -> "124 UNet/ModuleList[up_path]/UNetUpBlock[2]/cat_0";
"123 UNet/ModuleList[up_path]/UNetUpBlock[2]/__getitem___0" -> "124 UNet/ModuleList[up_path]/UNetUpBlock[2]/cat_0";
"124 UNet/ModuleList[up_path]/UNetUpBlock[2]/cat_0" -> "128 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"125 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "126 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"126 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "127 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"127 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "128 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"128 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0" -> "129 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm_0";
"129 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" -> "130 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU_0";
"130 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU_0" -> "131 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0";
"131 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" -> "135 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"132 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "133 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"133 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "134 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"134 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "135 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"135 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0" -> "136 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm_0";
"136 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" -> "137 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU_0";
"137 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU_0" -> "138 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0";
"138 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "142 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/conv_transpose2d_0";
"139 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "140 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"140 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "141 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"141 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "142 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/conv_transpose2d_0";
"142 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/conv_transpose2d_0" -> "143 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/SymmetricQuantizer/symmetric_quantize_0";
"143 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/SymmetricQuantizer/symmetric_quantize_0" -> "145 UNet/ModuleList[up_path]/UNetUpBlock[3]/cat_0";
"144 UNet/ModuleList[up_path]/UNetUpBlock[3]/__getitem___0" -> "145 UNet/ModuleList[up_path]/UNetUpBlock[3]/cat_0";
"145 UNet/ModuleList[up_path]/UNetUpBlock[3]/cat_0" -> "149 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"146 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "147 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"147 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "148 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"148 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "149 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"149 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0" -> "150 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm_0";
"150 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" -> "151 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU_0";
"151 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU_0" -> "152 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0";
"152 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" -> "156 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"153 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "154 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"154 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "155 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"155 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "156 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"156 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0" -> "157 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm_0";
"157 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" -> "158 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU_0";
"158 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU_0" -> "159 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0";
"159 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "163 UNet/NNCFConv2d[last]/conv2d_0";
"160 UNet/NNCFConv2d[last]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "161 UNet/NNCFConv2d[last]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"161 UNet/NNCFConv2d[last]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "162 UNet/NNCFConv2d[last]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"162 UNet/NNCFConv2d[last]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "163 UNet/NNCFConv2d[last]/conv2d_0";
"163 UNet/NNCFConv2d[last]/conv2d_0" -> "164 /nncf_model_output_0";
}
