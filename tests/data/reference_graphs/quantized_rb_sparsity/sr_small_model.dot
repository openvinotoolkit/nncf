strict digraph  {
"0 /nncf_model_input_0" [id=0, scope="", type=nncf_model_input];
"1 SymmetricQuantizer/symmetric_quantize_0" [id=1, scope=SymmetricQuantizer, type=symmetric_quantize];
"2 /nncf_model_input_1" [id=2, scope="", type=nncf_model_input];
"3 SymmetricQuantizer/symmetric_quantize_1" [id=3, scope=SymmetricQuantizer, type=symmetric_quantize];
"4 SmallModel/NNCFConv2d[conv_cubic1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=4, scope="SmallModel/NNCFConv2d[conv_cubic1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"5 SmallModel/NNCFConv2d[conv_cubic1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=5, scope="SmallModel/NNCFConv2d[conv_cubic1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"6 SmallModel/NNCFConv2d[conv_cubic1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=6, scope="SmallModel/NNCFConv2d[conv_cubic1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"7 SmallModel/NNCFConv2d[conv_cubic1]/conv2d_0" [id=7, scope="SmallModel/NNCFConv2d[conv_cubic1]", type=conv2d];
"8 SmallModel/ReLU[relu]/RELU_0" [id=8, scope="SmallModel/ReLU[relu]", type=RELU];
"9 SmallModel/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" [id=9, scope="SmallModel/ReLU[relu]/SymmetricQuantizer", type=symmetric_quantize];
"10 SmallModel/NNCFConv2d[conv_cubic2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=10, scope="SmallModel/NNCFConv2d[conv_cubic2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"11 SmallModel/NNCFConv2d[conv_cubic2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=11, scope="SmallModel/NNCFConv2d[conv_cubic2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"12 SmallModel/NNCFConv2d[conv_cubic2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=12, scope="SmallModel/NNCFConv2d[conv_cubic2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"13 SmallModel/NNCFConv2d[conv_cubic2]/conv2d_0" [id=13, scope="SmallModel/NNCFConv2d[conv_cubic2]", type=conv2d];
"14 SmallModel/Sigmoid[sigmoid]/sigmoid_0" [id=14, scope="SmallModel/Sigmoid[sigmoid]", type=sigmoid];
"15 SmallModel/Sigmoid[sigmoid]/SymmetricQuantizer/symmetric_quantize_0" [id=15, scope="SmallModel/Sigmoid[sigmoid]/SymmetricQuantizer", type=symmetric_quantize];
"16 SmallModel/NNCFConv2d[conv_input]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=16, scope="SmallModel/NNCFConv2d[conv_input]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"17 SmallModel/NNCFConv2d[conv_input]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=17, scope="SmallModel/NNCFConv2d[conv_input]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"18 SmallModel/NNCFConv2d[conv_input]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=18, scope="SmallModel/NNCFConv2d[conv_input]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"19 SmallModel/NNCFConv2d[conv_input]/conv2d_0" [id=19, scope="SmallModel/NNCFConv2d[conv_input]", type=conv2d];
"20 SmallModel/ReLU[relu]/RELU_1" [id=20, scope="SmallModel/ReLU[relu]", type=RELU];
"21 SmallModel/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" [id=21, scope="SmallModel/ReLU[relu]/SymmetricQuantizer", type=symmetric_quantize];
"22 SmallModel/SmallBlock[residual1]/ReLU[relu]/RELU_0" [id=22, scope="SmallModel/SmallBlock[residual1]/ReLU[relu]", type=RELU];
"23 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=23, scope="SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"24 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=24, scope="SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"25 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=25, scope="SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"26 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/conv2d_0" [id=26, scope="SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]", type=conv2d];
"27 SmallModel/SmallBlock[residual1]/ReLU[relu]/RELU_1" [id=27, scope="SmallModel/SmallBlock[residual1]/ReLU[relu]", type=RELU];
"28 SmallModel/SmallBlock[residual1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" [id=28, scope="SmallModel/SmallBlock[residual1]/ReLU[relu]/SymmetricQuantizer", type=symmetric_quantize];
"29 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=29, scope="SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"30 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=30, scope="SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"31 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=31, scope="SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"32 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/conv2d_0" [id=32, scope="SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]", type=conv2d];
"33 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/SymmetricQuantizer/symmetric_quantize_0" [id=33, scope="SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/SymmetricQuantizer", type=symmetric_quantize];
"34 SmallModel/SmallBlock[residual1]/add_0" [id=34, scope="SmallModel/SmallBlock[residual1]", type=add];
"35 SmallModel/SmallBlock[residual1]/SymmetricQuantizer/symmetric_quantize_0" [id=35, scope="SmallModel/SmallBlock[residual1]/SymmetricQuantizer", type=symmetric_quantize];
"36 SmallModel/SmallBlock[residual2]/ReLU[relu]/RELU_0" [id=36, scope="SmallModel/SmallBlock[residual2]/ReLU[relu]", type=RELU];
"37 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=37, scope="SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"38 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=38, scope="SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"39 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=39, scope="SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"40 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/conv2d_0" [id=40, scope="SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]", type=conv2d];
"41 SmallModel/SmallBlock[residual2]/ReLU[relu]/RELU_1" [id=41, scope="SmallModel/SmallBlock[residual2]/ReLU[relu]", type=RELU];
"42 SmallModel/SmallBlock[residual2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" [id=42, scope="SmallModel/SmallBlock[residual2]/ReLU[relu]/SymmetricQuantizer", type=symmetric_quantize];
"43 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=43, scope="SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"44 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=44, scope="SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"45 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=45, scope="SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"46 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/conv2d_0" [id=46, scope="SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]", type=conv2d];
"47 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/SymmetricQuantizer/symmetric_quantize_0" [id=47, scope="SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/SymmetricQuantizer", type=symmetric_quantize];
"48 SmallModel/SmallBlock[residual2]/add_0" [id=48, scope="SmallModel/SmallBlock[residual2]", type=add];
"49 SmallModel/SmallBlock[residual2]/SymmetricQuantizer/symmetric_quantize_0" [id=49, scope="SmallModel/SmallBlock[residual2]/SymmetricQuantizer", type=symmetric_quantize];
"50 SmallModel/SmallBlock[residual3]/ReLU[relu]/RELU_0" [id=50, scope="SmallModel/SmallBlock[residual3]/ReLU[relu]", type=RELU];
"51 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=51, scope="SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"52 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=52, scope="SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"53 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=53, scope="SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"54 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/conv2d_0" [id=54, scope="SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]", type=conv2d];
"55 SmallModel/SmallBlock[residual3]/ReLU[relu]/RELU_1" [id=55, scope="SmallModel/SmallBlock[residual3]/ReLU[relu]", type=RELU];
"56 SmallModel/SmallBlock[residual3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" [id=56, scope="SmallModel/SmallBlock[residual3]/ReLU[relu]/SymmetricQuantizer", type=symmetric_quantize];
"57 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=57, scope="SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"58 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=58, scope="SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"59 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=59, scope="SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"60 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/conv2d_0" [id=60, scope="SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]", type=conv2d];
"61 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/SymmetricQuantizer/symmetric_quantize_0" [id=61, scope="SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/SymmetricQuantizer", type=symmetric_quantize];
"62 SmallModel/SmallBlock[residual3]/add_0" [id=62, scope="SmallModel/SmallBlock[residual3]", type=add];
"63 SmallModel/SmallBlock[residual3]/SymmetricQuantizer/symmetric_quantize_0" [id=63, scope="SmallModel/SmallBlock[residual3]/SymmetricQuantizer", type=symmetric_quantize];
"64 SmallModel/SmallBlock[residual4]/ReLU[relu]/RELU_0" [id=64, scope="SmallModel/SmallBlock[residual4]/ReLU[relu]", type=RELU];
"65 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=65, scope="SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"66 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=66, scope="SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"67 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=67, scope="SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"68 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/conv2d_0" [id=68, scope="SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]", type=conv2d];
"69 SmallModel/SmallBlock[residual4]/ReLU[relu]/RELU_1" [id=69, scope="SmallModel/SmallBlock[residual4]/ReLU[relu]", type=RELU];
"70 SmallModel/SmallBlock[residual4]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" [id=70, scope="SmallModel/SmallBlock[residual4]/ReLU[relu]/SymmetricQuantizer", type=symmetric_quantize];
"71 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=71, scope="SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"72 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=72, scope="SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"73 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=73, scope="SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"74 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/conv2d_0" [id=74, scope="SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]", type=conv2d];
"75 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/SymmetricQuantizer/symmetric_quantize_0" [id=75, scope="SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/SymmetricQuantizer", type=symmetric_quantize];
"76 SmallModel/SmallBlock[residual4]/add_0" [id=76, scope="SmallModel/SmallBlock[residual4]", type=add];
"77 SmallModel/SmallBlock[residual4]/SymmetricQuantizer/symmetric_quantize_0" [id=77, scope="SmallModel/SmallBlock[residual4]/SymmetricQuantizer", type=symmetric_quantize];
"78 SmallModel/cat_0" [id=78, scope=SmallModel, type=cat];
"79 SmallModel/NNCFConv2d[conv_mid]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=79, scope="SmallModel/NNCFConv2d[conv_mid]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"80 SmallModel/NNCFConv2d[conv_mid]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=80, scope="SmallModel/NNCFConv2d[conv_mid]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"81 SmallModel/NNCFConv2d[conv_mid]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=81, scope="SmallModel/NNCFConv2d[conv_mid]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"82 SmallModel/NNCFConv2d[conv_mid]/conv2d_0" [id=82, scope="SmallModel/NNCFConv2d[conv_mid]", type=conv2d];
"83 SmallModel/ReLU[relu]/RELU_2" [id=83, scope="SmallModel/ReLU[relu]", type=RELU];
"84 SmallModel/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" [id=84, scope="SmallModel/ReLU[relu]/SymmetricQuantizer", type=symmetric_quantize];
"85 SmallModel/Sequential[upscale]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=85, scope="SmallModel/Sequential[upscale]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"86 SmallModel/Sequential[upscale]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=86, scope="SmallModel/Sequential[upscale]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"87 SmallModel/Sequential[upscale]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=87, scope="SmallModel/Sequential[upscale]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"88 SmallModel/Sequential[upscale]/NNCFConv2d[0]/conv2d_0" [id=88, scope="SmallModel/Sequential[upscale]/NNCFConv2d[0]", type=conv2d];
"89 SmallModel/Sequential[upscale]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize_0" [id=89, scope="SmallModel/Sequential[upscale]/NNCFConv2d[0]/SymmetricQuantizer", type=symmetric_quantize];
"90 SmallModel/Sequential[upscale]/PixelShuffle[1]/pixel_shuffle_0" [id=90, scope="SmallModel/Sequential[upscale]/PixelShuffle[1]", type=pixel_shuffle];
"91 SmallModel/Sequential[upscale]/PixelShuffle[1]/SymmetricQuantizer/symmetric_quantize_0" [id=91, scope="SmallModel/Sequential[upscale]/PixelShuffle[1]/SymmetricQuantizer", type=symmetric_quantize];
"92 SmallModel/Sequential[upscale]/ReLU[2]/RELU_0" [id=92, scope="SmallModel/Sequential[upscale]/ReLU[2]", type=RELU];
"93 SmallModel/NNCFConv2d[conv_output]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=93, scope="SmallModel/NNCFConv2d[conv_output]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"94 SmallModel/NNCFConv2d[conv_output]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=94, scope="SmallModel/NNCFConv2d[conv_output]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"95 SmallModel/NNCFConv2d[conv_output]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=95, scope="SmallModel/NNCFConv2d[conv_output]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"96 SmallModel/NNCFConv2d[conv_output]/conv2d_0" [id=96, scope="SmallModel/NNCFConv2d[conv_output]", type=conv2d];
"97 SmallModel/NNCFConv2d[conv_output]/SymmetricQuantizer/symmetric_quantize_0" [id=97, scope="SmallModel/NNCFConv2d[conv_output]/SymmetricQuantizer", type=symmetric_quantize];
"98 SmallModel/__mul___0" [id=98, scope=SmallModel, type=__mul__];
"99 SmallModel/SymmetricQuantizer/symmetric_quantize_0" [id=99, scope="SmallModel/SymmetricQuantizer", type=symmetric_quantize];
"100 SmallModel/add_0" [id=100, scope=SmallModel, type=add];
"101 /nncf_model_output_0" [id=101, scope="", type=nncf_model_output];
"0 /nncf_model_input_0" -> "1 SymmetricQuantizer/symmetric_quantize_0";
"2 /nncf_model_input_1" -> "3 SymmetricQuantizer/symmetric_quantize_1";
"3 SymmetricQuantizer/symmetric_quantize_1" -> "7 SmallModel/NNCFConv2d[conv_cubic1]/conv2d_0";
"4 SmallModel/NNCFConv2d[conv_cubic1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "5 SmallModel/NNCFConv2d[conv_cubic1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"5 SmallModel/NNCFConv2d[conv_cubic1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "6 SmallModel/NNCFConv2d[conv_cubic1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"6 SmallModel/NNCFConv2d[conv_cubic1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "7 SmallModel/NNCFConv2d[conv_cubic1]/conv2d_0";
"7 SmallModel/NNCFConv2d[conv_cubic1]/conv2d_0" -> "8 SmallModel/ReLU[relu]/RELU_0";
"8 SmallModel/ReLU[relu]/RELU_0" -> "9 SmallModel/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"1 SymmetricQuantizer/symmetric_quantize_0" -> "19 SmallModel/NNCFConv2d[conv_input]/conv2d_0";
"9 SmallModel/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "13 SmallModel/NNCFConv2d[conv_cubic2]/conv2d_0";
"10 SmallModel/NNCFConv2d[conv_cubic2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "11 SmallModel/NNCFConv2d[conv_cubic2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"11 SmallModel/NNCFConv2d[conv_cubic2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "12 SmallModel/NNCFConv2d[conv_cubic2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"12 SmallModel/NNCFConv2d[conv_cubic2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "13 SmallModel/NNCFConv2d[conv_cubic2]/conv2d_0";
"13 SmallModel/NNCFConv2d[conv_cubic2]/conv2d_0" -> "14 SmallModel/Sigmoid[sigmoid]/sigmoid_0";
"14 SmallModel/Sigmoid[sigmoid]/sigmoid_0" -> "15 SmallModel/Sigmoid[sigmoid]/SymmetricQuantizer/symmetric_quantize_0";
"15 SmallModel/Sigmoid[sigmoid]/SymmetricQuantizer/symmetric_quantize_0" -> "98 SmallModel/__mul___0";
"16 SmallModel/NNCFConv2d[conv_input]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "17 SmallModel/NNCFConv2d[conv_input]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"17 SmallModel/NNCFConv2d[conv_input]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "18 SmallModel/NNCFConv2d[conv_input]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"18 SmallModel/NNCFConv2d[conv_input]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "19 SmallModel/NNCFConv2d[conv_input]/conv2d_0";
"19 SmallModel/NNCFConv2d[conv_input]/conv2d_0" -> "20 SmallModel/ReLU[relu]/RELU_1";
"20 SmallModel/ReLU[relu]/RELU_1" -> "21 SmallModel/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"21 SmallModel/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "22 SmallModel/SmallBlock[residual1]/ReLU[relu]/RELU_0";
"21 SmallModel/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "34 SmallModel/SmallBlock[residual1]/add_0";
"21 SmallModel/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "78 SmallModel/cat_0";
"22 SmallModel/SmallBlock[residual1]/ReLU[relu]/RELU_0" -> "26 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/conv2d_0";
"23 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "24 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"24 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "25 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"25 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "26 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/conv2d_0";
"26 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/conv2d_0" -> "27 SmallModel/SmallBlock[residual1]/ReLU[relu]/RELU_1";
"27 SmallModel/SmallBlock[residual1]/ReLU[relu]/RELU_1" -> "28 SmallModel/SmallBlock[residual1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"28 SmallModel/SmallBlock[residual1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "32 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/conv2d_0";
"29 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "30 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"30 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "31 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"3 SymmetricQuantizer/symmetric_quantize_1" -> "100 SmallModel/add_0";
"31 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "32 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/conv2d_0";
"32 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/conv2d_0" -> "33 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/SymmetricQuantizer/symmetric_quantize_0";
"33 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/SymmetricQuantizer/symmetric_quantize_0" -> "34 SmallModel/SmallBlock[residual1]/add_0";
"34 SmallModel/SmallBlock[residual1]/add_0" -> "35 SmallModel/SmallBlock[residual1]/SymmetricQuantizer/symmetric_quantize_0";
"35 SmallModel/SmallBlock[residual1]/SymmetricQuantizer/symmetric_quantize_0" -> "36 SmallModel/SmallBlock[residual2]/ReLU[relu]/RELU_0";
"35 SmallModel/SmallBlock[residual1]/SymmetricQuantizer/symmetric_quantize_0" -> "48 SmallModel/SmallBlock[residual2]/add_0";
"35 SmallModel/SmallBlock[residual1]/SymmetricQuantizer/symmetric_quantize_0" -> "78 SmallModel/cat_0";
"36 SmallModel/SmallBlock[residual2]/ReLU[relu]/RELU_0" -> "40 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/conv2d_0";
"37 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "38 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"38 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "39 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"39 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "40 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/conv2d_0";
"40 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/conv2d_0" -> "41 SmallModel/SmallBlock[residual2]/ReLU[relu]/RELU_1";
"41 SmallModel/SmallBlock[residual2]/ReLU[relu]/RELU_1" -> "42 SmallModel/SmallBlock[residual2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"42 SmallModel/SmallBlock[residual2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "46 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/conv2d_0";
"43 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "44 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"44 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "45 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"45 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "46 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/conv2d_0";
"46 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/conv2d_0" -> "47 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/SymmetricQuantizer/symmetric_quantize_0";
"47 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/SymmetricQuantizer/symmetric_quantize_0" -> "48 SmallModel/SmallBlock[residual2]/add_0";
"48 SmallModel/SmallBlock[residual2]/add_0" -> "49 SmallModel/SmallBlock[residual2]/SymmetricQuantizer/symmetric_quantize_0";
"49 SmallModel/SmallBlock[residual2]/SymmetricQuantizer/symmetric_quantize_0" -> "50 SmallModel/SmallBlock[residual3]/ReLU[relu]/RELU_0";
"49 SmallModel/SmallBlock[residual2]/SymmetricQuantizer/symmetric_quantize_0" -> "62 SmallModel/SmallBlock[residual3]/add_0";
"49 SmallModel/SmallBlock[residual2]/SymmetricQuantizer/symmetric_quantize_0" -> "78 SmallModel/cat_0";
"50 SmallModel/SmallBlock[residual3]/ReLU[relu]/RELU_0" -> "54 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/conv2d_0";
"51 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "52 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"52 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "53 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"53 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "54 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/conv2d_0";
"54 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/conv2d_0" -> "55 SmallModel/SmallBlock[residual3]/ReLU[relu]/RELU_1";
"55 SmallModel/SmallBlock[residual3]/ReLU[relu]/RELU_1" -> "56 SmallModel/SmallBlock[residual3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"56 SmallModel/SmallBlock[residual3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "60 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/conv2d_0";
"57 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "58 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"58 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "59 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"59 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "60 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/conv2d_0";
"60 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/conv2d_0" -> "61 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/SymmetricQuantizer/symmetric_quantize_0";
"61 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/SymmetricQuantizer/symmetric_quantize_0" -> "62 SmallModel/SmallBlock[residual3]/add_0";
"62 SmallModel/SmallBlock[residual3]/add_0" -> "63 SmallModel/SmallBlock[residual3]/SymmetricQuantizer/symmetric_quantize_0";
"63 SmallModel/SmallBlock[residual3]/SymmetricQuantizer/symmetric_quantize_0" -> "64 SmallModel/SmallBlock[residual4]/ReLU[relu]/RELU_0";
"63 SmallModel/SmallBlock[residual3]/SymmetricQuantizer/symmetric_quantize_0" -> "76 SmallModel/SmallBlock[residual4]/add_0";
"63 SmallModel/SmallBlock[residual3]/SymmetricQuantizer/symmetric_quantize_0" -> "78 SmallModel/cat_0";
"64 SmallModel/SmallBlock[residual4]/ReLU[relu]/RELU_0" -> "68 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/conv2d_0";
"65 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "66 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"66 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "67 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"67 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "68 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/conv2d_0";
"68 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/conv2d_0" -> "69 SmallModel/SmallBlock[residual4]/ReLU[relu]/RELU_1";
"69 SmallModel/SmallBlock[residual4]/ReLU[relu]/RELU_1" -> "70 SmallModel/SmallBlock[residual4]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"70 SmallModel/SmallBlock[residual4]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "74 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/conv2d_0";
"71 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "72 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"72 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "73 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"73 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "74 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/conv2d_0";
"74 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/conv2d_0" -> "75 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/SymmetricQuantizer/symmetric_quantize_0";
"75 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/SymmetricQuantizer/symmetric_quantize_0" -> "76 SmallModel/SmallBlock[residual4]/add_0";
"76 SmallModel/SmallBlock[residual4]/add_0" -> "77 SmallModel/SmallBlock[residual4]/SymmetricQuantizer/symmetric_quantize_0";
"77 SmallModel/SmallBlock[residual4]/SymmetricQuantizer/symmetric_quantize_0" -> "78 SmallModel/cat_0";
"78 SmallModel/cat_0" -> "82 SmallModel/NNCFConv2d[conv_mid]/conv2d_0";
"79 SmallModel/NNCFConv2d[conv_mid]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "80 SmallModel/NNCFConv2d[conv_mid]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"80 SmallModel/NNCFConv2d[conv_mid]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "81 SmallModel/NNCFConv2d[conv_mid]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"81 SmallModel/NNCFConv2d[conv_mid]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "82 SmallModel/NNCFConv2d[conv_mid]/conv2d_0";
"82 SmallModel/NNCFConv2d[conv_mid]/conv2d_0" -> "83 SmallModel/ReLU[relu]/RELU_2";
"83 SmallModel/ReLU[relu]/RELU_2" -> "84 SmallModel/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2";
"84 SmallModel/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "88 SmallModel/Sequential[upscale]/NNCFConv2d[0]/conv2d_0";
"85 SmallModel/Sequential[upscale]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "86 SmallModel/Sequential[upscale]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"86 SmallModel/Sequential[upscale]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "87 SmallModel/Sequential[upscale]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"87 SmallModel/Sequential[upscale]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "88 SmallModel/Sequential[upscale]/NNCFConv2d[0]/conv2d_0";
"88 SmallModel/Sequential[upscale]/NNCFConv2d[0]/conv2d_0" -> "89 SmallModel/Sequential[upscale]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize_0";
"89 SmallModel/Sequential[upscale]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize_0" -> "90 SmallModel/Sequential[upscale]/PixelShuffle[1]/pixel_shuffle_0";
"90 SmallModel/Sequential[upscale]/PixelShuffle[1]/pixel_shuffle_0" -> "91 SmallModel/Sequential[upscale]/PixelShuffle[1]/SymmetricQuantizer/symmetric_quantize_0";
"91 SmallModel/Sequential[upscale]/PixelShuffle[1]/SymmetricQuantizer/symmetric_quantize_0" -> "92 SmallModel/Sequential[upscale]/ReLU[2]/RELU_0";
"92 SmallModel/Sequential[upscale]/ReLU[2]/RELU_0" -> "96 SmallModel/NNCFConv2d[conv_output]/conv2d_0";
"93 SmallModel/NNCFConv2d[conv_output]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "94 SmallModel/NNCFConv2d[conv_output]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"94 SmallModel/NNCFConv2d[conv_output]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "95 SmallModel/NNCFConv2d[conv_output]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"95 SmallModel/NNCFConv2d[conv_output]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "96 SmallModel/NNCFConv2d[conv_output]/conv2d_0";
"96 SmallModel/NNCFConv2d[conv_output]/conv2d_0" -> "97 SmallModel/NNCFConv2d[conv_output]/SymmetricQuantizer/symmetric_quantize_0";
"97 SmallModel/NNCFConv2d[conv_output]/SymmetricQuantizer/symmetric_quantize_0" -> "98 SmallModel/__mul___0";
"98 SmallModel/__mul___0" -> "99 SmallModel/SymmetricQuantizer/symmetric_quantize_0";
"99 SmallModel/SymmetricQuantizer/symmetric_quantize_0" -> "100 SmallModel/add_0";
"100 SmallModel/add_0" -> "101 /nncf_model_output_0";
}
