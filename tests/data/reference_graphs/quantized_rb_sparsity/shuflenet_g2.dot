strict digraph  {
"0 /nncf_model_input" [id=0, scope="", type=nncf_model_input];
"1 SymmetricQuantizer/symmetric_quantize" [id=1, scope=SymmetricQuantizer, type=symmetric_quantize];
"2 ShuffleNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=2, scope="ShuffleNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"3 ShuffleNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=3, scope="ShuffleNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"4 ShuffleNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=4, scope="ShuffleNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"5 ShuffleNet/NNCFConv2d[conv1]/conv2d" [id=5, scope="ShuffleNet/NNCFConv2d[conv1]", type=conv2d];
"6 ShuffleNet/BatchNorm2d[bn1]/batch_norm" [id=6, scope="ShuffleNet/BatchNorm2d[bn1]", type=batch_norm];
"7 ShuffleNet/RELU" [id=7, scope=ShuffleNet, type=RELU];
"8 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=8, scope="ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"9 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=9, scope="ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"10 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=10, scope="ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"11 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" [id=11, scope="ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/SymmetricQuantizer", type=symmetric_quantize];
"12 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d" [id=12, scope="ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv1]", type=conv2d];
"13 ShuffleNet/Sequential[layer1]/Bottleneck[0]/BatchNorm2d[bn1]/batch_norm" [id=13, scope="ShuffleNet/Sequential[layer1]/Bottleneck[0]/BatchNorm2d[bn1]", type=batch_norm];
"14 ShuffleNet/Sequential[layer1]/Bottleneck[0]/RELU" [id=14, scope="ShuffleNet/Sequential[layer1]/Bottleneck[0]", type=RELU];
"15 ShuffleNet/Sequential[layer1]/Bottleneck[0]/SymmetricQuantizer/symmetric_quantize" [id=15, scope="ShuffleNet/Sequential[layer1]/Bottleneck[0]/SymmetricQuantizer", type=symmetric_quantize];
"16 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=16, scope="ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"17 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=17, scope="ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"18 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=18, scope="ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"19 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d" [id=19, scope="ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv2]", type=conv2d];
"20 ShuffleNet/Sequential[layer1]/Bottleneck[0]/BatchNorm2d[bn2]/batch_norm" [id=20, scope="ShuffleNet/Sequential[layer1]/Bottleneck[0]/BatchNorm2d[bn2]", type=batch_norm];
"21 ShuffleNet/Sequential[layer1]/Bottleneck[0]/RELU" [id=21, scope="ShuffleNet/Sequential[layer1]/Bottleneck[0]", type=RELU];
"22 ShuffleNet/Sequential[layer1]/Bottleneck[0]/SymmetricQuantizer/symmetric_quantize" [id=22, scope="ShuffleNet/Sequential[layer1]/Bottleneck[0]/SymmetricQuantizer", type=symmetric_quantize];
"23 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=23, scope="ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"24 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=24, scope="ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"25 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=25, scope="ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"26 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d" [id=26, scope="ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv3]", type=conv2d];
"27 ShuffleNet/Sequential[layer1]/Bottleneck[0]/BatchNorm2d[bn3]/batch_norm" [id=27, scope="ShuffleNet/Sequential[layer1]/Bottleneck[0]/BatchNorm2d[bn3]", type=batch_norm];
"28 ShuffleNet/Sequential[layer1]/Bottleneck[0]/Sequential[shortcut]/AvgPool2d[0]/SymmetricQuantizer/symmetric_quantize" [id=28, scope="ShuffleNet/Sequential[layer1]/Bottleneck[0]/Sequential[shortcut]/AvgPool2d[0]/SymmetricQuantizer", type=symmetric_quantize];
"29 ShuffleNet/Sequential[layer1]/Bottleneck[0]/Sequential[shortcut]/AvgPool2d[0]/avg_pool2d" [id=29, scope="ShuffleNet/Sequential[layer1]/Bottleneck[0]/Sequential[shortcut]/AvgPool2d[0]", type=avg_pool2d];
"30 ShuffleNet/Sequential[layer1]/Bottleneck[0]/cat" [id=30, scope="ShuffleNet/Sequential[layer1]/Bottleneck[0]", type=cat];
"31 ShuffleNet/Sequential[layer1]/Bottleneck[0]/RELU" [id=31, scope="ShuffleNet/Sequential[layer1]/Bottleneck[0]", type=RELU];
"32 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=32, scope="ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"33 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=33, scope="ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"34 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=34, scope="ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"35 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" [id=35, scope="ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/SymmetricQuantizer", type=symmetric_quantize];
"36 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d" [id=36, scope="ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv1]", type=conv2d];
"37 ShuffleNet/Sequential[layer1]/Bottleneck[1]/BatchNorm2d[bn1]/batch_norm" [id=37, scope="ShuffleNet/Sequential[layer1]/Bottleneck[1]/BatchNorm2d[bn1]", type=batch_norm];
"38 ShuffleNet/Sequential[layer1]/Bottleneck[1]/RELU" [id=38, scope="ShuffleNet/Sequential[layer1]/Bottleneck[1]", type=RELU];
"39 ShuffleNet/Sequential[layer1]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize" [id=39, scope="ShuffleNet/Sequential[layer1]/Bottleneck[1]/SymmetricQuantizer", type=symmetric_quantize];
"40 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=40, scope="ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"41 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=41, scope="ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"42 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=42, scope="ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"43 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d" [id=43, scope="ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv2]", type=conv2d];
"44 ShuffleNet/Sequential[layer1]/Bottleneck[1]/BatchNorm2d[bn2]/batch_norm" [id=44, scope="ShuffleNet/Sequential[layer1]/Bottleneck[1]/BatchNorm2d[bn2]", type=batch_norm];
"45 ShuffleNet/Sequential[layer1]/Bottleneck[1]/RELU" [id=45, scope="ShuffleNet/Sequential[layer1]/Bottleneck[1]", type=RELU];
"46 ShuffleNet/Sequential[layer1]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize" [id=46, scope="ShuffleNet/Sequential[layer1]/Bottleneck[1]/SymmetricQuantizer", type=symmetric_quantize];
"47 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=47, scope="ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"48 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=48, scope="ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"49 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=49, scope="ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"50 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d" [id=50, scope="ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv3]", type=conv2d];
"51 ShuffleNet/Sequential[layer1]/Bottleneck[1]/BatchNorm2d[bn3]/batch_norm" [id=51, scope="ShuffleNet/Sequential[layer1]/Bottleneck[1]/BatchNorm2d[bn3]", type=batch_norm];
"52 ShuffleNet/Sequential[layer1]/Bottleneck[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=52, scope="ShuffleNet/Sequential[layer1]/Bottleneck[1]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"53 ShuffleNet/Sequential[layer1]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize" [id=53, scope="ShuffleNet/Sequential[layer1]/Bottleneck[1]/SymmetricQuantizer", type=symmetric_quantize];
"54 ShuffleNet/Sequential[layer1]/Bottleneck[1]/__add__" [id=54, scope="ShuffleNet/Sequential[layer1]/Bottleneck[1]", type=__add__];
"55 ShuffleNet/Sequential[layer1]/Bottleneck[1]/RELU" [id=55, scope="ShuffleNet/Sequential[layer1]/Bottleneck[1]", type=RELU];
"56 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=56, scope="ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"57 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=57, scope="ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"58 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=58, scope="ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"59 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" [id=59, scope="ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/SymmetricQuantizer", type=symmetric_quantize];
"60 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d" [id=60, scope="ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv1]", type=conv2d];
"61 ShuffleNet/Sequential[layer1]/Bottleneck[2]/BatchNorm2d[bn1]/batch_norm" [id=61, scope="ShuffleNet/Sequential[layer1]/Bottleneck[2]/BatchNorm2d[bn1]", type=batch_norm];
"62 ShuffleNet/Sequential[layer1]/Bottleneck[2]/RELU" [id=62, scope="ShuffleNet/Sequential[layer1]/Bottleneck[2]", type=RELU];
"63 ShuffleNet/Sequential[layer1]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize" [id=63, scope="ShuffleNet/Sequential[layer1]/Bottleneck[2]/SymmetricQuantizer", type=symmetric_quantize];
"64 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=64, scope="ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"65 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=65, scope="ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"66 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=66, scope="ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"67 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d" [id=67, scope="ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv2]", type=conv2d];
"68 ShuffleNet/Sequential[layer1]/Bottleneck[2]/BatchNorm2d[bn2]/batch_norm" [id=68, scope="ShuffleNet/Sequential[layer1]/Bottleneck[2]/BatchNorm2d[bn2]", type=batch_norm];
"69 ShuffleNet/Sequential[layer1]/Bottleneck[2]/RELU" [id=69, scope="ShuffleNet/Sequential[layer1]/Bottleneck[2]", type=RELU];
"70 ShuffleNet/Sequential[layer1]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize" [id=70, scope="ShuffleNet/Sequential[layer1]/Bottleneck[2]/SymmetricQuantizer", type=symmetric_quantize];
"71 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=71, scope="ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"72 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=72, scope="ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"73 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=73, scope="ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"74 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d" [id=74, scope="ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv3]", type=conv2d];
"75 ShuffleNet/Sequential[layer1]/Bottleneck[2]/BatchNorm2d[bn3]/batch_norm" [id=75, scope="ShuffleNet/Sequential[layer1]/Bottleneck[2]/BatchNorm2d[bn3]", type=batch_norm];
"76 ShuffleNet/Sequential[layer1]/Bottleneck[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=76, scope="ShuffleNet/Sequential[layer1]/Bottleneck[2]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"77 ShuffleNet/Sequential[layer1]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize" [id=77, scope="ShuffleNet/Sequential[layer1]/Bottleneck[2]/SymmetricQuantizer", type=symmetric_quantize];
"78 ShuffleNet/Sequential[layer1]/Bottleneck[2]/__add__" [id=78, scope="ShuffleNet/Sequential[layer1]/Bottleneck[2]", type=__add__];
"79 ShuffleNet/Sequential[layer1]/Bottleneck[2]/RELU" [id=79, scope="ShuffleNet/Sequential[layer1]/Bottleneck[2]", type=RELU];
"80 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=80, scope="ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"81 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=81, scope="ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"82 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=82, scope="ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"83 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" [id=83, scope="ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv1]/SymmetricQuantizer", type=symmetric_quantize];
"84 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv1]/conv2d" [id=84, scope="ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv1]", type=conv2d];
"85 ShuffleNet/Sequential[layer1]/Bottleneck[3]/BatchNorm2d[bn1]/batch_norm" [id=85, scope="ShuffleNet/Sequential[layer1]/Bottleneck[3]/BatchNorm2d[bn1]", type=batch_norm];
"86 ShuffleNet/Sequential[layer1]/Bottleneck[3]/RELU" [id=86, scope="ShuffleNet/Sequential[layer1]/Bottleneck[3]", type=RELU];
"87 ShuffleNet/Sequential[layer1]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize" [id=87, scope="ShuffleNet/Sequential[layer1]/Bottleneck[3]/SymmetricQuantizer", type=symmetric_quantize];
"88 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=88, scope="ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"89 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=89, scope="ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"90 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=90, scope="ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"91 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv2]/conv2d" [id=91, scope="ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv2]", type=conv2d];
"92 ShuffleNet/Sequential[layer1]/Bottleneck[3]/BatchNorm2d[bn2]/batch_norm" [id=92, scope="ShuffleNet/Sequential[layer1]/Bottleneck[3]/BatchNorm2d[bn2]", type=batch_norm];
"93 ShuffleNet/Sequential[layer1]/Bottleneck[3]/RELU" [id=93, scope="ShuffleNet/Sequential[layer1]/Bottleneck[3]", type=RELU];
"94 ShuffleNet/Sequential[layer1]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize" [id=94, scope="ShuffleNet/Sequential[layer1]/Bottleneck[3]/SymmetricQuantizer", type=symmetric_quantize];
"95 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=95, scope="ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"96 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=96, scope="ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"97 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=97, scope="ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"98 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv3]/conv2d" [id=98, scope="ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv3]", type=conv2d];
"99 ShuffleNet/Sequential[layer1]/Bottleneck[3]/BatchNorm2d[bn3]/batch_norm" [id=99, scope="ShuffleNet/Sequential[layer1]/Bottleneck[3]/BatchNorm2d[bn3]", type=batch_norm];
"100 ShuffleNet/Sequential[layer1]/Bottleneck[3]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=100, scope="ShuffleNet/Sequential[layer1]/Bottleneck[3]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"101 ShuffleNet/Sequential[layer1]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize" [id=101, scope="ShuffleNet/Sequential[layer1]/Bottleneck[3]/SymmetricQuantizer", type=symmetric_quantize];
"102 ShuffleNet/Sequential[layer1]/Bottleneck[3]/__add__" [id=102, scope="ShuffleNet/Sequential[layer1]/Bottleneck[3]", type=__add__];
"103 ShuffleNet/Sequential[layer1]/Bottleneck[3]/RELU" [id=103, scope="ShuffleNet/Sequential[layer1]/Bottleneck[3]", type=RELU];
"104 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=104, scope="ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"105 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=105, scope="ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"106 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=106, scope="ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"107 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" [id=107, scope="ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/SymmetricQuantizer", type=symmetric_quantize];
"108 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d" [id=108, scope="ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv1]", type=conv2d];
"109 ShuffleNet/Sequential[layer2]/Bottleneck[0]/BatchNorm2d[bn1]/batch_norm" [id=109, scope="ShuffleNet/Sequential[layer2]/Bottleneck[0]/BatchNorm2d[bn1]", type=batch_norm];
"110 ShuffleNet/Sequential[layer2]/Bottleneck[0]/RELU" [id=110, scope="ShuffleNet/Sequential[layer2]/Bottleneck[0]", type=RELU];
"111 ShuffleNet/Sequential[layer2]/Bottleneck[0]/SymmetricQuantizer/symmetric_quantize" [id=111, scope="ShuffleNet/Sequential[layer2]/Bottleneck[0]/SymmetricQuantizer", type=symmetric_quantize];
"112 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=112, scope="ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"113 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=113, scope="ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"114 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=114, scope="ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"115 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d" [id=115, scope="ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv2]", type=conv2d];
"116 ShuffleNet/Sequential[layer2]/Bottleneck[0]/BatchNorm2d[bn2]/batch_norm" [id=116, scope="ShuffleNet/Sequential[layer2]/Bottleneck[0]/BatchNorm2d[bn2]", type=batch_norm];
"117 ShuffleNet/Sequential[layer2]/Bottleneck[0]/RELU" [id=117, scope="ShuffleNet/Sequential[layer2]/Bottleneck[0]", type=RELU];
"118 ShuffleNet/Sequential[layer2]/Bottleneck[0]/SymmetricQuantizer/symmetric_quantize" [id=118, scope="ShuffleNet/Sequential[layer2]/Bottleneck[0]/SymmetricQuantizer", type=symmetric_quantize];
"119 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=119, scope="ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"120 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=120, scope="ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"121 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=121, scope="ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"122 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d" [id=122, scope="ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv3]", type=conv2d];
"123 ShuffleNet/Sequential[layer2]/Bottleneck[0]/BatchNorm2d[bn3]/batch_norm" [id=123, scope="ShuffleNet/Sequential[layer2]/Bottleneck[0]/BatchNorm2d[bn3]", type=batch_norm];
"124 ShuffleNet/Sequential[layer2]/Bottleneck[0]/Sequential[shortcut]/AvgPool2d[0]/SymmetricQuantizer/symmetric_quantize" [id=124, scope="ShuffleNet/Sequential[layer2]/Bottleneck[0]/Sequential[shortcut]/AvgPool2d[0]/SymmetricQuantizer", type=symmetric_quantize];
"125 ShuffleNet/Sequential[layer2]/Bottleneck[0]/Sequential[shortcut]/AvgPool2d[0]/avg_pool2d" [id=125, scope="ShuffleNet/Sequential[layer2]/Bottleneck[0]/Sequential[shortcut]/AvgPool2d[0]", type=avg_pool2d];
"126 ShuffleNet/Sequential[layer2]/Bottleneck[0]/cat" [id=126, scope="ShuffleNet/Sequential[layer2]/Bottleneck[0]", type=cat];
"127 ShuffleNet/Sequential[layer2]/Bottleneck[0]/RELU" [id=127, scope="ShuffleNet/Sequential[layer2]/Bottleneck[0]", type=RELU];
"128 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=128, scope="ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"129 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=129, scope="ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"130 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=130, scope="ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"131 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" [id=131, scope="ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv1]/SymmetricQuantizer", type=symmetric_quantize];
"132 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d" [id=132, scope="ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv1]", type=conv2d];
"133 ShuffleNet/Sequential[layer2]/Bottleneck[1]/BatchNorm2d[bn1]/batch_norm" [id=133, scope="ShuffleNet/Sequential[layer2]/Bottleneck[1]/BatchNorm2d[bn1]", type=batch_norm];
"134 ShuffleNet/Sequential[layer2]/Bottleneck[1]/RELU" [id=134, scope="ShuffleNet/Sequential[layer2]/Bottleneck[1]", type=RELU];
"135 ShuffleNet/Sequential[layer2]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize" [id=135, scope="ShuffleNet/Sequential[layer2]/Bottleneck[1]/SymmetricQuantizer", type=symmetric_quantize];
"136 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=136, scope="ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"137 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=137, scope="ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"138 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=138, scope="ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"139 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d" [id=139, scope="ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv2]", type=conv2d];
"140 ShuffleNet/Sequential[layer2]/Bottleneck[1]/BatchNorm2d[bn2]/batch_norm" [id=140, scope="ShuffleNet/Sequential[layer2]/Bottleneck[1]/BatchNorm2d[bn2]", type=batch_norm];
"141 ShuffleNet/Sequential[layer2]/Bottleneck[1]/RELU" [id=141, scope="ShuffleNet/Sequential[layer2]/Bottleneck[1]", type=RELU];
"142 ShuffleNet/Sequential[layer2]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize" [id=142, scope="ShuffleNet/Sequential[layer2]/Bottleneck[1]/SymmetricQuantizer", type=symmetric_quantize];
"143 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=143, scope="ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"144 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=144, scope="ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"145 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=145, scope="ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"146 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d" [id=146, scope="ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv3]", type=conv2d];
"147 ShuffleNet/Sequential[layer2]/Bottleneck[1]/BatchNorm2d[bn3]/batch_norm" [id=147, scope="ShuffleNet/Sequential[layer2]/Bottleneck[1]/BatchNorm2d[bn3]", type=batch_norm];
"148 ShuffleNet/Sequential[layer2]/Bottleneck[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=148, scope="ShuffleNet/Sequential[layer2]/Bottleneck[1]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"149 ShuffleNet/Sequential[layer2]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize" [id=149, scope="ShuffleNet/Sequential[layer2]/Bottleneck[1]/SymmetricQuantizer", type=symmetric_quantize];
"150 ShuffleNet/Sequential[layer2]/Bottleneck[1]/__add__" [id=150, scope="ShuffleNet/Sequential[layer2]/Bottleneck[1]", type=__add__];
"151 ShuffleNet/Sequential[layer2]/Bottleneck[1]/RELU" [id=151, scope="ShuffleNet/Sequential[layer2]/Bottleneck[1]", type=RELU];
"152 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=152, scope="ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"153 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=153, scope="ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"154 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=154, scope="ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"155 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" [id=155, scope="ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/SymmetricQuantizer", type=symmetric_quantize];
"156 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d" [id=156, scope="ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv1]", type=conv2d];
"157 ShuffleNet/Sequential[layer2]/Bottleneck[2]/BatchNorm2d[bn1]/batch_norm" [id=157, scope="ShuffleNet/Sequential[layer2]/Bottleneck[2]/BatchNorm2d[bn1]", type=batch_norm];
"158 ShuffleNet/Sequential[layer2]/Bottleneck[2]/RELU" [id=158, scope="ShuffleNet/Sequential[layer2]/Bottleneck[2]", type=RELU];
"159 ShuffleNet/Sequential[layer2]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize" [id=159, scope="ShuffleNet/Sequential[layer2]/Bottleneck[2]/SymmetricQuantizer", type=symmetric_quantize];
"160 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=160, scope="ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"161 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=161, scope="ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"162 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=162, scope="ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"163 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d" [id=163, scope="ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv2]", type=conv2d];
"164 ShuffleNet/Sequential[layer2]/Bottleneck[2]/BatchNorm2d[bn2]/batch_norm" [id=164, scope="ShuffleNet/Sequential[layer2]/Bottleneck[2]/BatchNorm2d[bn2]", type=batch_norm];
"165 ShuffleNet/Sequential[layer2]/Bottleneck[2]/RELU" [id=165, scope="ShuffleNet/Sequential[layer2]/Bottleneck[2]", type=RELU];
"166 ShuffleNet/Sequential[layer2]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize" [id=166, scope="ShuffleNet/Sequential[layer2]/Bottleneck[2]/SymmetricQuantizer", type=symmetric_quantize];
"167 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=167, scope="ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"168 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=168, scope="ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"169 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=169, scope="ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"170 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d" [id=170, scope="ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv3]", type=conv2d];
"171 ShuffleNet/Sequential[layer2]/Bottleneck[2]/BatchNorm2d[bn3]/batch_norm" [id=171, scope="ShuffleNet/Sequential[layer2]/Bottleneck[2]/BatchNorm2d[bn3]", type=batch_norm];
"172 ShuffleNet/Sequential[layer2]/Bottleneck[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=172, scope="ShuffleNet/Sequential[layer2]/Bottleneck[2]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"173 ShuffleNet/Sequential[layer2]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize" [id=173, scope="ShuffleNet/Sequential[layer2]/Bottleneck[2]/SymmetricQuantizer", type=symmetric_quantize];
"174 ShuffleNet/Sequential[layer2]/Bottleneck[2]/__add__" [id=174, scope="ShuffleNet/Sequential[layer2]/Bottleneck[2]", type=__add__];
"175 ShuffleNet/Sequential[layer2]/Bottleneck[2]/RELU" [id=175, scope="ShuffleNet/Sequential[layer2]/Bottleneck[2]", type=RELU];
"176 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=176, scope="ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"177 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=177, scope="ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"178 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=178, scope="ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"179 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" [id=179, scope="ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/SymmetricQuantizer", type=symmetric_quantize];
"180 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/conv2d" [id=180, scope="ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv1]", type=conv2d];
"181 ShuffleNet/Sequential[layer2]/Bottleneck[3]/BatchNorm2d[bn1]/batch_norm" [id=181, scope="ShuffleNet/Sequential[layer2]/Bottleneck[3]/BatchNorm2d[bn1]", type=batch_norm];
"182 ShuffleNet/Sequential[layer2]/Bottleneck[3]/RELU" [id=182, scope="ShuffleNet/Sequential[layer2]/Bottleneck[3]", type=RELU];
"183 ShuffleNet/Sequential[layer2]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize" [id=183, scope="ShuffleNet/Sequential[layer2]/Bottleneck[3]/SymmetricQuantizer", type=symmetric_quantize];
"184 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=184, scope="ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"185 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=185, scope="ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"186 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=186, scope="ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"187 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv2]/conv2d" [id=187, scope="ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv2]", type=conv2d];
"188 ShuffleNet/Sequential[layer2]/Bottleneck[3]/BatchNorm2d[bn2]/batch_norm" [id=188, scope="ShuffleNet/Sequential[layer2]/Bottleneck[3]/BatchNorm2d[bn2]", type=batch_norm];
"189 ShuffleNet/Sequential[layer2]/Bottleneck[3]/RELU" [id=189, scope="ShuffleNet/Sequential[layer2]/Bottleneck[3]", type=RELU];
"190 ShuffleNet/Sequential[layer2]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize" [id=190, scope="ShuffleNet/Sequential[layer2]/Bottleneck[3]/SymmetricQuantizer", type=symmetric_quantize];
"191 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=191, scope="ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"192 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=192, scope="ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"193 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=193, scope="ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"194 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv3]/conv2d" [id=194, scope="ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv3]", type=conv2d];
"195 ShuffleNet/Sequential[layer2]/Bottleneck[3]/BatchNorm2d[bn3]/batch_norm" [id=195, scope="ShuffleNet/Sequential[layer2]/Bottleneck[3]/BatchNorm2d[bn3]", type=batch_norm];
"196 ShuffleNet/Sequential[layer2]/Bottleneck[3]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=196, scope="ShuffleNet/Sequential[layer2]/Bottleneck[3]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"197 ShuffleNet/Sequential[layer2]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize" [id=197, scope="ShuffleNet/Sequential[layer2]/Bottleneck[3]/SymmetricQuantizer", type=symmetric_quantize];
"198 ShuffleNet/Sequential[layer2]/Bottleneck[3]/__add__" [id=198, scope="ShuffleNet/Sequential[layer2]/Bottleneck[3]", type=__add__];
"199 ShuffleNet/Sequential[layer2]/Bottleneck[3]/RELU" [id=199, scope="ShuffleNet/Sequential[layer2]/Bottleneck[3]", type=RELU];
"200 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=200, scope="ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"201 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=201, scope="ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"202 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=202, scope="ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"203 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" [id=203, scope="ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv1]/SymmetricQuantizer", type=symmetric_quantize];
"204 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv1]/conv2d" [id=204, scope="ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv1]", type=conv2d];
"205 ShuffleNet/Sequential[layer2]/Bottleneck[4]/BatchNorm2d[bn1]/batch_norm" [id=205, scope="ShuffleNet/Sequential[layer2]/Bottleneck[4]/BatchNorm2d[bn1]", type=batch_norm];
"206 ShuffleNet/Sequential[layer2]/Bottleneck[4]/RELU" [id=206, scope="ShuffleNet/Sequential[layer2]/Bottleneck[4]", type=RELU];
"207 ShuffleNet/Sequential[layer2]/Bottleneck[4]/SymmetricQuantizer/symmetric_quantize" [id=207, scope="ShuffleNet/Sequential[layer2]/Bottleneck[4]/SymmetricQuantizer", type=symmetric_quantize];
"208 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=208, scope="ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"209 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=209, scope="ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"210 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=210, scope="ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"211 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv2]/conv2d" [id=211, scope="ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv2]", type=conv2d];
"212 ShuffleNet/Sequential[layer2]/Bottleneck[4]/BatchNorm2d[bn2]/batch_norm" [id=212, scope="ShuffleNet/Sequential[layer2]/Bottleneck[4]/BatchNorm2d[bn2]", type=batch_norm];
"213 ShuffleNet/Sequential[layer2]/Bottleneck[4]/RELU" [id=213, scope="ShuffleNet/Sequential[layer2]/Bottleneck[4]", type=RELU];
"214 ShuffleNet/Sequential[layer2]/Bottleneck[4]/SymmetricQuantizer/symmetric_quantize" [id=214, scope="ShuffleNet/Sequential[layer2]/Bottleneck[4]/SymmetricQuantizer", type=symmetric_quantize];
"215 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=215, scope="ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"216 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=216, scope="ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"217 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=217, scope="ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"218 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv3]/conv2d" [id=218, scope="ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv3]", type=conv2d];
"219 ShuffleNet/Sequential[layer2]/Bottleneck[4]/BatchNorm2d[bn3]/batch_norm" [id=219, scope="ShuffleNet/Sequential[layer2]/Bottleneck[4]/BatchNorm2d[bn3]", type=batch_norm];
"220 ShuffleNet/Sequential[layer2]/Bottleneck[4]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=220, scope="ShuffleNet/Sequential[layer2]/Bottleneck[4]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"221 ShuffleNet/Sequential[layer2]/Bottleneck[4]/SymmetricQuantizer/symmetric_quantize" [id=221, scope="ShuffleNet/Sequential[layer2]/Bottleneck[4]/SymmetricQuantizer", type=symmetric_quantize];
"222 ShuffleNet/Sequential[layer2]/Bottleneck[4]/__add__" [id=222, scope="ShuffleNet/Sequential[layer2]/Bottleneck[4]", type=__add__];
"223 ShuffleNet/Sequential[layer2]/Bottleneck[4]/RELU" [id=223, scope="ShuffleNet/Sequential[layer2]/Bottleneck[4]", type=RELU];
"224 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=224, scope="ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"225 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=225, scope="ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"226 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=226, scope="ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"227 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" [id=227, scope="ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv1]/SymmetricQuantizer", type=symmetric_quantize];
"228 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv1]/conv2d" [id=228, scope="ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv1]", type=conv2d];
"229 ShuffleNet/Sequential[layer2]/Bottleneck[5]/BatchNorm2d[bn1]/batch_norm" [id=229, scope="ShuffleNet/Sequential[layer2]/Bottleneck[5]/BatchNorm2d[bn1]", type=batch_norm];
"230 ShuffleNet/Sequential[layer2]/Bottleneck[5]/RELU" [id=230, scope="ShuffleNet/Sequential[layer2]/Bottleneck[5]", type=RELU];
"231 ShuffleNet/Sequential[layer2]/Bottleneck[5]/SymmetricQuantizer/symmetric_quantize" [id=231, scope="ShuffleNet/Sequential[layer2]/Bottleneck[5]/SymmetricQuantizer", type=symmetric_quantize];
"232 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=232, scope="ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"233 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=233, scope="ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"234 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=234, scope="ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"235 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv2]/conv2d" [id=235, scope="ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv2]", type=conv2d];
"236 ShuffleNet/Sequential[layer2]/Bottleneck[5]/BatchNorm2d[bn2]/batch_norm" [id=236, scope="ShuffleNet/Sequential[layer2]/Bottleneck[5]/BatchNorm2d[bn2]", type=batch_norm];
"237 ShuffleNet/Sequential[layer2]/Bottleneck[5]/RELU" [id=237, scope="ShuffleNet/Sequential[layer2]/Bottleneck[5]", type=RELU];
"238 ShuffleNet/Sequential[layer2]/Bottleneck[5]/SymmetricQuantizer/symmetric_quantize" [id=238, scope="ShuffleNet/Sequential[layer2]/Bottleneck[5]/SymmetricQuantizer", type=symmetric_quantize];
"239 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=239, scope="ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"240 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=240, scope="ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"241 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=241, scope="ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"242 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv3]/conv2d" [id=242, scope="ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv3]", type=conv2d];
"243 ShuffleNet/Sequential[layer2]/Bottleneck[5]/BatchNorm2d[bn3]/batch_norm" [id=243, scope="ShuffleNet/Sequential[layer2]/Bottleneck[5]/BatchNorm2d[bn3]", type=batch_norm];
"244 ShuffleNet/Sequential[layer2]/Bottleneck[5]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=244, scope="ShuffleNet/Sequential[layer2]/Bottleneck[5]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"245 ShuffleNet/Sequential[layer2]/Bottleneck[5]/SymmetricQuantizer/symmetric_quantize" [id=245, scope="ShuffleNet/Sequential[layer2]/Bottleneck[5]/SymmetricQuantizer", type=symmetric_quantize];
"246 ShuffleNet/Sequential[layer2]/Bottleneck[5]/__add__" [id=246, scope="ShuffleNet/Sequential[layer2]/Bottleneck[5]", type=__add__];
"247 ShuffleNet/Sequential[layer2]/Bottleneck[5]/RELU" [id=247, scope="ShuffleNet/Sequential[layer2]/Bottleneck[5]", type=RELU];
"248 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=248, scope="ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"249 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=249, scope="ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"250 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=250, scope="ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"251 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" [id=251, scope="ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv1]/SymmetricQuantizer", type=symmetric_quantize];
"252 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv1]/conv2d" [id=252, scope="ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv1]", type=conv2d];
"253 ShuffleNet/Sequential[layer2]/Bottleneck[6]/BatchNorm2d[bn1]/batch_norm" [id=253, scope="ShuffleNet/Sequential[layer2]/Bottleneck[6]/BatchNorm2d[bn1]", type=batch_norm];
"254 ShuffleNet/Sequential[layer2]/Bottleneck[6]/RELU" [id=254, scope="ShuffleNet/Sequential[layer2]/Bottleneck[6]", type=RELU];
"255 ShuffleNet/Sequential[layer2]/Bottleneck[6]/SymmetricQuantizer/symmetric_quantize" [id=255, scope="ShuffleNet/Sequential[layer2]/Bottleneck[6]/SymmetricQuantizer", type=symmetric_quantize];
"256 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=256, scope="ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"257 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=257, scope="ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"258 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=258, scope="ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"259 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv2]/conv2d" [id=259, scope="ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv2]", type=conv2d];
"260 ShuffleNet/Sequential[layer2]/Bottleneck[6]/BatchNorm2d[bn2]/batch_norm" [id=260, scope="ShuffleNet/Sequential[layer2]/Bottleneck[6]/BatchNorm2d[bn2]", type=batch_norm];
"261 ShuffleNet/Sequential[layer2]/Bottleneck[6]/RELU" [id=261, scope="ShuffleNet/Sequential[layer2]/Bottleneck[6]", type=RELU];
"262 ShuffleNet/Sequential[layer2]/Bottleneck[6]/SymmetricQuantizer/symmetric_quantize" [id=262, scope="ShuffleNet/Sequential[layer2]/Bottleneck[6]/SymmetricQuantizer", type=symmetric_quantize];
"263 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=263, scope="ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"264 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=264, scope="ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"265 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=265, scope="ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"266 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv3]/conv2d" [id=266, scope="ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv3]", type=conv2d];
"267 ShuffleNet/Sequential[layer2]/Bottleneck[6]/BatchNorm2d[bn3]/batch_norm" [id=267, scope="ShuffleNet/Sequential[layer2]/Bottleneck[6]/BatchNorm2d[bn3]", type=batch_norm];
"268 ShuffleNet/Sequential[layer2]/Bottleneck[6]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=268, scope="ShuffleNet/Sequential[layer2]/Bottleneck[6]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"269 ShuffleNet/Sequential[layer2]/Bottleneck[6]/SymmetricQuantizer/symmetric_quantize" [id=269, scope="ShuffleNet/Sequential[layer2]/Bottleneck[6]/SymmetricQuantizer", type=symmetric_quantize];
"270 ShuffleNet/Sequential[layer2]/Bottleneck[6]/__add__" [id=270, scope="ShuffleNet/Sequential[layer2]/Bottleneck[6]", type=__add__];
"271 ShuffleNet/Sequential[layer2]/Bottleneck[6]/RELU" [id=271, scope="ShuffleNet/Sequential[layer2]/Bottleneck[6]", type=RELU];
"272 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=272, scope="ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"273 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=273, scope="ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"274 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=274, scope="ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"275 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" [id=275, scope="ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv1]/SymmetricQuantizer", type=symmetric_quantize];
"276 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv1]/conv2d" [id=276, scope="ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv1]", type=conv2d];
"277 ShuffleNet/Sequential[layer2]/Bottleneck[7]/BatchNorm2d[bn1]/batch_norm" [id=277, scope="ShuffleNet/Sequential[layer2]/Bottleneck[7]/BatchNorm2d[bn1]", type=batch_norm];
"278 ShuffleNet/Sequential[layer2]/Bottleneck[7]/RELU" [id=278, scope="ShuffleNet/Sequential[layer2]/Bottleneck[7]", type=RELU];
"279 ShuffleNet/Sequential[layer2]/Bottleneck[7]/SymmetricQuantizer/symmetric_quantize" [id=279, scope="ShuffleNet/Sequential[layer2]/Bottleneck[7]/SymmetricQuantizer", type=symmetric_quantize];
"280 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=280, scope="ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"281 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=281, scope="ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"282 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=282, scope="ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"283 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv2]/conv2d" [id=283, scope="ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv2]", type=conv2d];
"284 ShuffleNet/Sequential[layer2]/Bottleneck[7]/BatchNorm2d[bn2]/batch_norm" [id=284, scope="ShuffleNet/Sequential[layer2]/Bottleneck[7]/BatchNorm2d[bn2]", type=batch_norm];
"285 ShuffleNet/Sequential[layer2]/Bottleneck[7]/RELU" [id=285, scope="ShuffleNet/Sequential[layer2]/Bottleneck[7]", type=RELU];
"286 ShuffleNet/Sequential[layer2]/Bottleneck[7]/SymmetricQuantizer/symmetric_quantize" [id=286, scope="ShuffleNet/Sequential[layer2]/Bottleneck[7]/SymmetricQuantizer", type=symmetric_quantize];
"287 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=287, scope="ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"288 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=288, scope="ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"289 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=289, scope="ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"290 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv3]/conv2d" [id=290, scope="ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv3]", type=conv2d];
"291 ShuffleNet/Sequential[layer2]/Bottleneck[7]/BatchNorm2d[bn3]/batch_norm" [id=291, scope="ShuffleNet/Sequential[layer2]/Bottleneck[7]/BatchNorm2d[bn3]", type=batch_norm];
"292 ShuffleNet/Sequential[layer2]/Bottleneck[7]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=292, scope="ShuffleNet/Sequential[layer2]/Bottleneck[7]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"293 ShuffleNet/Sequential[layer2]/Bottleneck[7]/SymmetricQuantizer/symmetric_quantize" [id=293, scope="ShuffleNet/Sequential[layer2]/Bottleneck[7]/SymmetricQuantizer", type=symmetric_quantize];
"294 ShuffleNet/Sequential[layer2]/Bottleneck[7]/__add__" [id=294, scope="ShuffleNet/Sequential[layer2]/Bottleneck[7]", type=__add__];
"295 ShuffleNet/Sequential[layer2]/Bottleneck[7]/RELU" [id=295, scope="ShuffleNet/Sequential[layer2]/Bottleneck[7]", type=RELU];
"296 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=296, scope="ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"297 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=297, scope="ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"298 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=298, scope="ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"299 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" [id=299, scope="ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/SymmetricQuantizer", type=symmetric_quantize];
"300 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d" [id=300, scope="ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv1]", type=conv2d];
"301 ShuffleNet/Sequential[layer3]/Bottleneck[0]/BatchNorm2d[bn1]/batch_norm" [id=301, scope="ShuffleNet/Sequential[layer3]/Bottleneck[0]/BatchNorm2d[bn1]", type=batch_norm];
"302 ShuffleNet/Sequential[layer3]/Bottleneck[0]/RELU" [id=302, scope="ShuffleNet/Sequential[layer3]/Bottleneck[0]", type=RELU];
"303 ShuffleNet/Sequential[layer3]/Bottleneck[0]/SymmetricQuantizer/symmetric_quantize" [id=303, scope="ShuffleNet/Sequential[layer3]/Bottleneck[0]/SymmetricQuantizer", type=symmetric_quantize];
"304 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=304, scope="ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"305 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=305, scope="ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"306 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=306, scope="ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"307 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d" [id=307, scope="ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv2]", type=conv2d];
"308 ShuffleNet/Sequential[layer3]/Bottleneck[0]/BatchNorm2d[bn2]/batch_norm" [id=308, scope="ShuffleNet/Sequential[layer3]/Bottleneck[0]/BatchNorm2d[bn2]", type=batch_norm];
"309 ShuffleNet/Sequential[layer3]/Bottleneck[0]/RELU" [id=309, scope="ShuffleNet/Sequential[layer3]/Bottleneck[0]", type=RELU];
"310 ShuffleNet/Sequential[layer3]/Bottleneck[0]/SymmetricQuantizer/symmetric_quantize" [id=310, scope="ShuffleNet/Sequential[layer3]/Bottleneck[0]/SymmetricQuantizer", type=symmetric_quantize];
"311 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=311, scope="ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"312 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=312, scope="ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"313 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=313, scope="ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"314 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d" [id=314, scope="ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv3]", type=conv2d];
"315 ShuffleNet/Sequential[layer3]/Bottleneck[0]/BatchNorm2d[bn3]/batch_norm" [id=315, scope="ShuffleNet/Sequential[layer3]/Bottleneck[0]/BatchNorm2d[bn3]", type=batch_norm];
"316 ShuffleNet/Sequential[layer3]/Bottleneck[0]/Sequential[shortcut]/AvgPool2d[0]/SymmetricQuantizer/symmetric_quantize" [id=316, scope="ShuffleNet/Sequential[layer3]/Bottleneck[0]/Sequential[shortcut]/AvgPool2d[0]/SymmetricQuantizer", type=symmetric_quantize];
"317 ShuffleNet/Sequential[layer3]/Bottleneck[0]/Sequential[shortcut]/AvgPool2d[0]/avg_pool2d" [id=317, scope="ShuffleNet/Sequential[layer3]/Bottleneck[0]/Sequential[shortcut]/AvgPool2d[0]", type=avg_pool2d];
"318 ShuffleNet/Sequential[layer3]/Bottleneck[0]/cat" [id=318, scope="ShuffleNet/Sequential[layer3]/Bottleneck[0]", type=cat];
"319 ShuffleNet/Sequential[layer3]/Bottleneck[0]/RELU" [id=319, scope="ShuffleNet/Sequential[layer3]/Bottleneck[0]", type=RELU];
"320 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=320, scope="ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"321 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=321, scope="ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"322 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=322, scope="ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"323 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" [id=323, scope="ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv1]/SymmetricQuantizer", type=symmetric_quantize];
"324 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d" [id=324, scope="ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv1]", type=conv2d];
"325 ShuffleNet/Sequential[layer3]/Bottleneck[1]/BatchNorm2d[bn1]/batch_norm" [id=325, scope="ShuffleNet/Sequential[layer3]/Bottleneck[1]/BatchNorm2d[bn1]", type=batch_norm];
"326 ShuffleNet/Sequential[layer3]/Bottleneck[1]/RELU" [id=326, scope="ShuffleNet/Sequential[layer3]/Bottleneck[1]", type=RELU];
"327 ShuffleNet/Sequential[layer3]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize" [id=327, scope="ShuffleNet/Sequential[layer3]/Bottleneck[1]/SymmetricQuantizer", type=symmetric_quantize];
"328 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=328, scope="ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"329 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=329, scope="ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"330 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=330, scope="ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"331 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d" [id=331, scope="ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv2]", type=conv2d];
"332 ShuffleNet/Sequential[layer3]/Bottleneck[1]/BatchNorm2d[bn2]/batch_norm" [id=332, scope="ShuffleNet/Sequential[layer3]/Bottleneck[1]/BatchNorm2d[bn2]", type=batch_norm];
"333 ShuffleNet/Sequential[layer3]/Bottleneck[1]/RELU" [id=333, scope="ShuffleNet/Sequential[layer3]/Bottleneck[1]", type=RELU];
"334 ShuffleNet/Sequential[layer3]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize" [id=334, scope="ShuffleNet/Sequential[layer3]/Bottleneck[1]/SymmetricQuantizer", type=symmetric_quantize];
"335 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=335, scope="ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"336 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=336, scope="ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"337 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=337, scope="ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"338 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d" [id=338, scope="ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv3]", type=conv2d];
"339 ShuffleNet/Sequential[layer3]/Bottleneck[1]/BatchNorm2d[bn3]/batch_norm" [id=339, scope="ShuffleNet/Sequential[layer3]/Bottleneck[1]/BatchNorm2d[bn3]", type=batch_norm];
"340 ShuffleNet/Sequential[layer3]/Bottleneck[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=340, scope="ShuffleNet/Sequential[layer3]/Bottleneck[1]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"341 ShuffleNet/Sequential[layer3]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize" [id=341, scope="ShuffleNet/Sequential[layer3]/Bottleneck[1]/SymmetricQuantizer", type=symmetric_quantize];
"342 ShuffleNet/Sequential[layer3]/Bottleneck[1]/__add__" [id=342, scope="ShuffleNet/Sequential[layer3]/Bottleneck[1]", type=__add__];
"343 ShuffleNet/Sequential[layer3]/Bottleneck[1]/RELU" [id=343, scope="ShuffleNet/Sequential[layer3]/Bottleneck[1]", type=RELU];
"344 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=344, scope="ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"345 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=345, scope="ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"346 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=346, scope="ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"347 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" [id=347, scope="ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv1]/SymmetricQuantizer", type=symmetric_quantize];
"348 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d" [id=348, scope="ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv1]", type=conv2d];
"349 ShuffleNet/Sequential[layer3]/Bottleneck[2]/BatchNorm2d[bn1]/batch_norm" [id=349, scope="ShuffleNet/Sequential[layer3]/Bottleneck[2]/BatchNorm2d[bn1]", type=batch_norm];
"350 ShuffleNet/Sequential[layer3]/Bottleneck[2]/RELU" [id=350, scope="ShuffleNet/Sequential[layer3]/Bottleneck[2]", type=RELU];
"351 ShuffleNet/Sequential[layer3]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize" [id=351, scope="ShuffleNet/Sequential[layer3]/Bottleneck[2]/SymmetricQuantizer", type=symmetric_quantize];
"352 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=352, scope="ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"353 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=353, scope="ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"354 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=354, scope="ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"355 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d" [id=355, scope="ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv2]", type=conv2d];
"356 ShuffleNet/Sequential[layer3]/Bottleneck[2]/BatchNorm2d[bn2]/batch_norm" [id=356, scope="ShuffleNet/Sequential[layer3]/Bottleneck[2]/BatchNorm2d[bn2]", type=batch_norm];
"357 ShuffleNet/Sequential[layer3]/Bottleneck[2]/RELU" [id=357, scope="ShuffleNet/Sequential[layer3]/Bottleneck[2]", type=RELU];
"358 ShuffleNet/Sequential[layer3]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize" [id=358, scope="ShuffleNet/Sequential[layer3]/Bottleneck[2]/SymmetricQuantizer", type=symmetric_quantize];
"359 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=359, scope="ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"360 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=360, scope="ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"361 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=361, scope="ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"362 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d" [id=362, scope="ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv3]", type=conv2d];
"363 ShuffleNet/Sequential[layer3]/Bottleneck[2]/BatchNorm2d[bn3]/batch_norm" [id=363, scope="ShuffleNet/Sequential[layer3]/Bottleneck[2]/BatchNorm2d[bn3]", type=batch_norm];
"364 ShuffleNet/Sequential[layer3]/Bottleneck[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=364, scope="ShuffleNet/Sequential[layer3]/Bottleneck[2]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"365 ShuffleNet/Sequential[layer3]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize" [id=365, scope="ShuffleNet/Sequential[layer3]/Bottleneck[2]/SymmetricQuantizer", type=symmetric_quantize];
"366 ShuffleNet/Sequential[layer3]/Bottleneck[2]/__add__" [id=366, scope="ShuffleNet/Sequential[layer3]/Bottleneck[2]", type=__add__];
"367 ShuffleNet/Sequential[layer3]/Bottleneck[2]/RELU" [id=367, scope="ShuffleNet/Sequential[layer3]/Bottleneck[2]", type=RELU];
"368 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=368, scope="ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"369 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=369, scope="ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"370 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=370, scope="ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"371 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" [id=371, scope="ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv1]/SymmetricQuantizer", type=symmetric_quantize];
"372 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv1]/conv2d" [id=372, scope="ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv1]", type=conv2d];
"373 ShuffleNet/Sequential[layer3]/Bottleneck[3]/BatchNorm2d[bn1]/batch_norm" [id=373, scope="ShuffleNet/Sequential[layer3]/Bottleneck[3]/BatchNorm2d[bn1]", type=batch_norm];
"374 ShuffleNet/Sequential[layer3]/Bottleneck[3]/RELU" [id=374, scope="ShuffleNet/Sequential[layer3]/Bottleneck[3]", type=RELU];
"375 ShuffleNet/Sequential[layer3]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize" [id=375, scope="ShuffleNet/Sequential[layer3]/Bottleneck[3]/SymmetricQuantizer", type=symmetric_quantize];
"376 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=376, scope="ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"377 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=377, scope="ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"378 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=378, scope="ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"379 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv2]/conv2d" [id=379, scope="ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv2]", type=conv2d];
"380 ShuffleNet/Sequential[layer3]/Bottleneck[3]/BatchNorm2d[bn2]/batch_norm" [id=380, scope="ShuffleNet/Sequential[layer3]/Bottleneck[3]/BatchNorm2d[bn2]", type=batch_norm];
"381 ShuffleNet/Sequential[layer3]/Bottleneck[3]/RELU" [id=381, scope="ShuffleNet/Sequential[layer3]/Bottleneck[3]", type=RELU];
"382 ShuffleNet/Sequential[layer3]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize" [id=382, scope="ShuffleNet/Sequential[layer3]/Bottleneck[3]/SymmetricQuantizer", type=symmetric_quantize];
"383 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=383, scope="ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"384 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=384, scope="ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"385 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=385, scope="ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"386 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv3]/conv2d" [id=386, scope="ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv3]", type=conv2d];
"387 ShuffleNet/Sequential[layer3]/Bottleneck[3]/BatchNorm2d[bn3]/batch_norm" [id=387, scope="ShuffleNet/Sequential[layer3]/Bottleneck[3]/BatchNorm2d[bn3]", type=batch_norm];
"388 ShuffleNet/Sequential[layer3]/Bottleneck[3]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=388, scope="ShuffleNet/Sequential[layer3]/Bottleneck[3]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"389 ShuffleNet/Sequential[layer3]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize" [id=389, scope="ShuffleNet/Sequential[layer3]/Bottleneck[3]/SymmetricQuantizer", type=symmetric_quantize];
"390 ShuffleNet/Sequential[layer3]/Bottleneck[3]/__add__" [id=390, scope="ShuffleNet/Sequential[layer3]/Bottleneck[3]", type=__add__];
"391 ShuffleNet/Sequential[layer3]/Bottleneck[3]/RELU" [id=391, scope="ShuffleNet/Sequential[layer3]/Bottleneck[3]", type=RELU];
"392 ShuffleNet/Sequential[layer3]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize" [id=392, scope="ShuffleNet/Sequential[layer3]/Bottleneck[3]/SymmetricQuantizer", type=symmetric_quantize];
"393 ShuffleNet/avg_pool2d" [id=393, scope=ShuffleNet, type=avg_pool2d];
"394 ShuffleNet/SymmetricQuantizer/symmetric_quantize" [id=394, scope="ShuffleNet/SymmetricQuantizer", type=symmetric_quantize];
"395 ShuffleNet/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=395, scope="ShuffleNet/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"396 ShuffleNet/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=396, scope="ShuffleNet/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"397 ShuffleNet/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=397, scope="ShuffleNet/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"398 ShuffleNet/NNCFLinear[linear]/linear" [id=398, scope="ShuffleNet/NNCFLinear[linear]", type=linear];
"0 /nncf_model_input" -> "1 SymmetricQuantizer/symmetric_quantize";
"1 SymmetricQuantizer/symmetric_quantize" -> "5 ShuffleNet/NNCFConv2d[conv1]/conv2d";
"2 ShuffleNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "3 ShuffleNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"3 ShuffleNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "4 ShuffleNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"4 ShuffleNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "5 ShuffleNet/NNCFConv2d[conv1]/conv2d";
"5 ShuffleNet/NNCFConv2d[conv1]/conv2d" -> "6 ShuffleNet/BatchNorm2d[bn1]/batch_norm";
"6 ShuffleNet/BatchNorm2d[bn1]/batch_norm" -> "7 ShuffleNet/RELU";
"8 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "9 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"7 ShuffleNet/RELU" -> "11 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize";
"7 ShuffleNet/RELU" -> "28 ShuffleNet/Sequential[layer1]/Bottleneck[0]/Sequential[shortcut]/AvgPool2d[0]/SymmetricQuantizer/symmetric_quantize";
"9 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "10 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"10 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "12 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d";
"11 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" -> "12 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d";
"12 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d" -> "13 ShuffleNet/Sequential[layer1]/Bottleneck[0]/BatchNorm2d[bn1]/batch_norm";
"13 ShuffleNet/Sequential[layer1]/Bottleneck[0]/BatchNorm2d[bn1]/batch_norm" -> "14 ShuffleNet/Sequential[layer1]/Bottleneck[0]/RELU";
"14 ShuffleNet/Sequential[layer1]/Bottleneck[0]/RELU" -> "15 ShuffleNet/Sequential[layer1]/Bottleneck[0]/SymmetricQuantizer/symmetric_quantize";
"15 ShuffleNet/Sequential[layer1]/Bottleneck[0]/SymmetricQuantizer/symmetric_quantize" -> "19 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d";
"16 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "17 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"17 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "18 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"18 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "19 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d";
"19 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d" -> "20 ShuffleNet/Sequential[layer1]/Bottleneck[0]/BatchNorm2d[bn2]/batch_norm";
"20 ShuffleNet/Sequential[layer1]/Bottleneck[0]/BatchNorm2d[bn2]/batch_norm" -> "21 ShuffleNet/Sequential[layer1]/Bottleneck[0]/RELU";
"21 ShuffleNet/Sequential[layer1]/Bottleneck[0]/RELU" -> "22 ShuffleNet/Sequential[layer1]/Bottleneck[0]/SymmetricQuantizer/symmetric_quantize";
"22 ShuffleNet/Sequential[layer1]/Bottleneck[0]/SymmetricQuantizer/symmetric_quantize" -> "26 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d";
"23 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "24 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"24 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "25 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"25 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "26 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d";
"26 ShuffleNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d" -> "27 ShuffleNet/Sequential[layer1]/Bottleneck[0]/BatchNorm2d[bn3]/batch_norm";
"27 ShuffleNet/Sequential[layer1]/Bottleneck[0]/BatchNorm2d[bn3]/batch_norm" -> "30 ShuffleNet/Sequential[layer1]/Bottleneck[0]/cat";
"28 ShuffleNet/Sequential[layer1]/Bottleneck[0]/Sequential[shortcut]/AvgPool2d[0]/SymmetricQuantizer/symmetric_quantize" -> "29 ShuffleNet/Sequential[layer1]/Bottleneck[0]/Sequential[shortcut]/AvgPool2d[0]/avg_pool2d";
"29 ShuffleNet/Sequential[layer1]/Bottleneck[0]/Sequential[shortcut]/AvgPool2d[0]/avg_pool2d" -> "30 ShuffleNet/Sequential[layer1]/Bottleneck[0]/cat";
"30 ShuffleNet/Sequential[layer1]/Bottleneck[0]/cat" -> "31 ShuffleNet/Sequential[layer1]/Bottleneck[0]/RELU";
"31 ShuffleNet/Sequential[layer1]/Bottleneck[0]/RELU" -> "35 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize";
"31 ShuffleNet/Sequential[layer1]/Bottleneck[0]/RELU" -> "53 ShuffleNet/Sequential[layer1]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize";
"32 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "33 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"33 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "34 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"34 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "36 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d";
"35 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" -> "36 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d";
"36 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d" -> "37 ShuffleNet/Sequential[layer1]/Bottleneck[1]/BatchNorm2d[bn1]/batch_norm";
"37 ShuffleNet/Sequential[layer1]/Bottleneck[1]/BatchNorm2d[bn1]/batch_norm" -> "38 ShuffleNet/Sequential[layer1]/Bottleneck[1]/RELU";
"38 ShuffleNet/Sequential[layer1]/Bottleneck[1]/RELU" -> "39 ShuffleNet/Sequential[layer1]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize";
"39 ShuffleNet/Sequential[layer1]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize" -> "43 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d";
"40 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "41 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"41 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "42 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"42 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "43 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d";
"43 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d" -> "44 ShuffleNet/Sequential[layer1]/Bottleneck[1]/BatchNorm2d[bn2]/batch_norm";
"44 ShuffleNet/Sequential[layer1]/Bottleneck[1]/BatchNorm2d[bn2]/batch_norm" -> "45 ShuffleNet/Sequential[layer1]/Bottleneck[1]/RELU";
"45 ShuffleNet/Sequential[layer1]/Bottleneck[1]/RELU" -> "46 ShuffleNet/Sequential[layer1]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize";
"46 ShuffleNet/Sequential[layer1]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize" -> "50 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d";
"47 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "48 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"48 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "49 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"49 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "50 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d";
"50 ShuffleNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d" -> "51 ShuffleNet/Sequential[layer1]/Bottleneck[1]/BatchNorm2d[bn3]/batch_norm";
"51 ShuffleNet/Sequential[layer1]/Bottleneck[1]/BatchNorm2d[bn3]/batch_norm" -> "52 ShuffleNet/Sequential[layer1]/Bottleneck[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"52 ShuffleNet/Sequential[layer1]/Bottleneck[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "54 ShuffleNet/Sequential[layer1]/Bottleneck[1]/__add__";
"53 ShuffleNet/Sequential[layer1]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize" -> "54 ShuffleNet/Sequential[layer1]/Bottleneck[1]/__add__";
"54 ShuffleNet/Sequential[layer1]/Bottleneck[1]/__add__" -> "55 ShuffleNet/Sequential[layer1]/Bottleneck[1]/RELU";
"55 ShuffleNet/Sequential[layer1]/Bottleneck[1]/RELU" -> "59 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize";
"55 ShuffleNet/Sequential[layer1]/Bottleneck[1]/RELU" -> "77 ShuffleNet/Sequential[layer1]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize";
"56 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "57 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"57 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "58 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"58 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "60 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d";
"59 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" -> "60 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d";
"60 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d" -> "61 ShuffleNet/Sequential[layer1]/Bottleneck[2]/BatchNorm2d[bn1]/batch_norm";
"61 ShuffleNet/Sequential[layer1]/Bottleneck[2]/BatchNorm2d[bn1]/batch_norm" -> "62 ShuffleNet/Sequential[layer1]/Bottleneck[2]/RELU";
"62 ShuffleNet/Sequential[layer1]/Bottleneck[2]/RELU" -> "63 ShuffleNet/Sequential[layer1]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize";
"63 ShuffleNet/Sequential[layer1]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize" -> "67 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d";
"64 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "65 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"65 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "66 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"66 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "67 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d";
"67 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d" -> "68 ShuffleNet/Sequential[layer1]/Bottleneck[2]/BatchNorm2d[bn2]/batch_norm";
"68 ShuffleNet/Sequential[layer1]/Bottleneck[2]/BatchNorm2d[bn2]/batch_norm" -> "69 ShuffleNet/Sequential[layer1]/Bottleneck[2]/RELU";
"69 ShuffleNet/Sequential[layer1]/Bottleneck[2]/RELU" -> "70 ShuffleNet/Sequential[layer1]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize";
"70 ShuffleNet/Sequential[layer1]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize" -> "74 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d";
"71 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "72 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"72 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "73 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"73 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "74 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d";
"74 ShuffleNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d" -> "75 ShuffleNet/Sequential[layer1]/Bottleneck[2]/BatchNorm2d[bn3]/batch_norm";
"75 ShuffleNet/Sequential[layer1]/Bottleneck[2]/BatchNorm2d[bn3]/batch_norm" -> "76 ShuffleNet/Sequential[layer1]/Bottleneck[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"76 ShuffleNet/Sequential[layer1]/Bottleneck[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "78 ShuffleNet/Sequential[layer1]/Bottleneck[2]/__add__";
"77 ShuffleNet/Sequential[layer1]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize" -> "78 ShuffleNet/Sequential[layer1]/Bottleneck[2]/__add__";
"78 ShuffleNet/Sequential[layer1]/Bottleneck[2]/__add__" -> "79 ShuffleNet/Sequential[layer1]/Bottleneck[2]/RELU";
"79 ShuffleNet/Sequential[layer1]/Bottleneck[2]/RELU" -> "83 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize";
"80 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "81 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"81 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "82 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"82 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "84 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv1]/conv2d";
"83 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" -> "84 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv1]/conv2d";
"84 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv1]/conv2d" -> "85 ShuffleNet/Sequential[layer1]/Bottleneck[3]/BatchNorm2d[bn1]/batch_norm";
"85 ShuffleNet/Sequential[layer1]/Bottleneck[3]/BatchNorm2d[bn1]/batch_norm" -> "86 ShuffleNet/Sequential[layer1]/Bottleneck[3]/RELU";
"86 ShuffleNet/Sequential[layer1]/Bottleneck[3]/RELU" -> "87 ShuffleNet/Sequential[layer1]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize";
"87 ShuffleNet/Sequential[layer1]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize" -> "91 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv2]/conv2d";
"88 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "89 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"89 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "90 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"90 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "91 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv2]/conv2d";
"91 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv2]/conv2d" -> "92 ShuffleNet/Sequential[layer1]/Bottleneck[3]/BatchNorm2d[bn2]/batch_norm";
"92 ShuffleNet/Sequential[layer1]/Bottleneck[3]/BatchNorm2d[bn2]/batch_norm" -> "93 ShuffleNet/Sequential[layer1]/Bottleneck[3]/RELU";
"93 ShuffleNet/Sequential[layer1]/Bottleneck[3]/RELU" -> "94 ShuffleNet/Sequential[layer1]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize";
"94 ShuffleNet/Sequential[layer1]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize" -> "98 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv3]/conv2d";
"95 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "96 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"96 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "97 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"97 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "98 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv3]/conv2d";
"98 ShuffleNet/Sequential[layer1]/Bottleneck[3]/NNCFConv2d[conv3]/conv2d" -> "99 ShuffleNet/Sequential[layer1]/Bottleneck[3]/BatchNorm2d[bn3]/batch_norm";
"79 ShuffleNet/Sequential[layer1]/Bottleneck[2]/RELU" -> "101 ShuffleNet/Sequential[layer1]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize";
"99 ShuffleNet/Sequential[layer1]/Bottleneck[3]/BatchNorm2d[bn3]/batch_norm" -> "100 ShuffleNet/Sequential[layer1]/Bottleneck[3]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"100 ShuffleNet/Sequential[layer1]/Bottleneck[3]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "102 ShuffleNet/Sequential[layer1]/Bottleneck[3]/__add__";
"101 ShuffleNet/Sequential[layer1]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize" -> "102 ShuffleNet/Sequential[layer1]/Bottleneck[3]/__add__";
"102 ShuffleNet/Sequential[layer1]/Bottleneck[3]/__add__" -> "103 ShuffleNet/Sequential[layer1]/Bottleneck[3]/RELU";
"103 ShuffleNet/Sequential[layer1]/Bottleneck[3]/RELU" -> "107 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize";
"103 ShuffleNet/Sequential[layer1]/Bottleneck[3]/RELU" -> "124 ShuffleNet/Sequential[layer2]/Bottleneck[0]/Sequential[shortcut]/AvgPool2d[0]/SymmetricQuantizer/symmetric_quantize";
"104 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "105 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"105 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "106 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"106 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "108 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d";
"107 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" -> "108 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d";
"108 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d" -> "109 ShuffleNet/Sequential[layer2]/Bottleneck[0]/BatchNorm2d[bn1]/batch_norm";
"109 ShuffleNet/Sequential[layer2]/Bottleneck[0]/BatchNorm2d[bn1]/batch_norm" -> "110 ShuffleNet/Sequential[layer2]/Bottleneck[0]/RELU";
"110 ShuffleNet/Sequential[layer2]/Bottleneck[0]/RELU" -> "111 ShuffleNet/Sequential[layer2]/Bottleneck[0]/SymmetricQuantizer/symmetric_quantize";
"111 ShuffleNet/Sequential[layer2]/Bottleneck[0]/SymmetricQuantizer/symmetric_quantize" -> "115 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d";
"112 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "113 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"113 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "114 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"114 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "115 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d";
"115 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d" -> "116 ShuffleNet/Sequential[layer2]/Bottleneck[0]/BatchNorm2d[bn2]/batch_norm";
"116 ShuffleNet/Sequential[layer2]/Bottleneck[0]/BatchNorm2d[bn2]/batch_norm" -> "117 ShuffleNet/Sequential[layer2]/Bottleneck[0]/RELU";
"117 ShuffleNet/Sequential[layer2]/Bottleneck[0]/RELU" -> "118 ShuffleNet/Sequential[layer2]/Bottleneck[0]/SymmetricQuantizer/symmetric_quantize";
"118 ShuffleNet/Sequential[layer2]/Bottleneck[0]/SymmetricQuantizer/symmetric_quantize" -> "122 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d";
"119 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "120 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"120 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "121 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"121 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "122 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d";
"122 ShuffleNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d" -> "123 ShuffleNet/Sequential[layer2]/Bottleneck[0]/BatchNorm2d[bn3]/batch_norm";
"123 ShuffleNet/Sequential[layer2]/Bottleneck[0]/BatchNorm2d[bn3]/batch_norm" -> "126 ShuffleNet/Sequential[layer2]/Bottleneck[0]/cat";
"124 ShuffleNet/Sequential[layer2]/Bottleneck[0]/Sequential[shortcut]/AvgPool2d[0]/SymmetricQuantizer/symmetric_quantize" -> "125 ShuffleNet/Sequential[layer2]/Bottleneck[0]/Sequential[shortcut]/AvgPool2d[0]/avg_pool2d";
"125 ShuffleNet/Sequential[layer2]/Bottleneck[0]/Sequential[shortcut]/AvgPool2d[0]/avg_pool2d" -> "126 ShuffleNet/Sequential[layer2]/Bottleneck[0]/cat";
"126 ShuffleNet/Sequential[layer2]/Bottleneck[0]/cat" -> "127 ShuffleNet/Sequential[layer2]/Bottleneck[0]/RELU";
"127 ShuffleNet/Sequential[layer2]/Bottleneck[0]/RELU" -> "131 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize";
"127 ShuffleNet/Sequential[layer2]/Bottleneck[0]/RELU" -> "149 ShuffleNet/Sequential[layer2]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize";
"128 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "129 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"129 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "130 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"130 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "132 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d";
"131 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" -> "132 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d";
"132 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d" -> "133 ShuffleNet/Sequential[layer2]/Bottleneck[1]/BatchNorm2d[bn1]/batch_norm";
"133 ShuffleNet/Sequential[layer2]/Bottleneck[1]/BatchNorm2d[bn1]/batch_norm" -> "134 ShuffleNet/Sequential[layer2]/Bottleneck[1]/RELU";
"134 ShuffleNet/Sequential[layer2]/Bottleneck[1]/RELU" -> "135 ShuffleNet/Sequential[layer2]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize";
"135 ShuffleNet/Sequential[layer2]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize" -> "139 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d";
"136 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "137 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"137 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "138 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"138 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "139 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d";
"139 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d" -> "140 ShuffleNet/Sequential[layer2]/Bottleneck[1]/BatchNorm2d[bn2]/batch_norm";
"140 ShuffleNet/Sequential[layer2]/Bottleneck[1]/BatchNorm2d[bn2]/batch_norm" -> "141 ShuffleNet/Sequential[layer2]/Bottleneck[1]/RELU";
"141 ShuffleNet/Sequential[layer2]/Bottleneck[1]/RELU" -> "142 ShuffleNet/Sequential[layer2]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize";
"142 ShuffleNet/Sequential[layer2]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize" -> "146 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d";
"143 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "144 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"144 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "145 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"145 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "146 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d";
"146 ShuffleNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d" -> "147 ShuffleNet/Sequential[layer2]/Bottleneck[1]/BatchNorm2d[bn3]/batch_norm";
"147 ShuffleNet/Sequential[layer2]/Bottleneck[1]/BatchNorm2d[bn3]/batch_norm" -> "148 ShuffleNet/Sequential[layer2]/Bottleneck[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"148 ShuffleNet/Sequential[layer2]/Bottleneck[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "150 ShuffleNet/Sequential[layer2]/Bottleneck[1]/__add__";
"149 ShuffleNet/Sequential[layer2]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize" -> "150 ShuffleNet/Sequential[layer2]/Bottleneck[1]/__add__";
"150 ShuffleNet/Sequential[layer2]/Bottleneck[1]/__add__" -> "151 ShuffleNet/Sequential[layer2]/Bottleneck[1]/RELU";
"151 ShuffleNet/Sequential[layer2]/Bottleneck[1]/RELU" -> "155 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize";
"151 ShuffleNet/Sequential[layer2]/Bottleneck[1]/RELU" -> "173 ShuffleNet/Sequential[layer2]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize";
"152 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "153 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"153 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "154 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"154 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "156 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d";
"155 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" -> "156 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d";
"156 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d" -> "157 ShuffleNet/Sequential[layer2]/Bottleneck[2]/BatchNorm2d[bn1]/batch_norm";
"157 ShuffleNet/Sequential[layer2]/Bottleneck[2]/BatchNorm2d[bn1]/batch_norm" -> "158 ShuffleNet/Sequential[layer2]/Bottleneck[2]/RELU";
"158 ShuffleNet/Sequential[layer2]/Bottleneck[2]/RELU" -> "159 ShuffleNet/Sequential[layer2]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize";
"159 ShuffleNet/Sequential[layer2]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize" -> "163 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d";
"160 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "161 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"161 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "162 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"162 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "163 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d";
"163 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d" -> "164 ShuffleNet/Sequential[layer2]/Bottleneck[2]/BatchNorm2d[bn2]/batch_norm";
"164 ShuffleNet/Sequential[layer2]/Bottleneck[2]/BatchNorm2d[bn2]/batch_norm" -> "165 ShuffleNet/Sequential[layer2]/Bottleneck[2]/RELU";
"165 ShuffleNet/Sequential[layer2]/Bottleneck[2]/RELU" -> "166 ShuffleNet/Sequential[layer2]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize";
"166 ShuffleNet/Sequential[layer2]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize" -> "170 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d";
"167 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "168 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"168 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "169 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"169 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "170 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d";
"170 ShuffleNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d" -> "171 ShuffleNet/Sequential[layer2]/Bottleneck[2]/BatchNorm2d[bn3]/batch_norm";
"171 ShuffleNet/Sequential[layer2]/Bottleneck[2]/BatchNorm2d[bn3]/batch_norm" -> "172 ShuffleNet/Sequential[layer2]/Bottleneck[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"172 ShuffleNet/Sequential[layer2]/Bottleneck[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "174 ShuffleNet/Sequential[layer2]/Bottleneck[2]/__add__";
"173 ShuffleNet/Sequential[layer2]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize" -> "174 ShuffleNet/Sequential[layer2]/Bottleneck[2]/__add__";
"174 ShuffleNet/Sequential[layer2]/Bottleneck[2]/__add__" -> "175 ShuffleNet/Sequential[layer2]/Bottleneck[2]/RELU";
"175 ShuffleNet/Sequential[layer2]/Bottleneck[2]/RELU" -> "179 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize";
"175 ShuffleNet/Sequential[layer2]/Bottleneck[2]/RELU" -> "197 ShuffleNet/Sequential[layer2]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize";
"176 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "177 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"177 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "178 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"178 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "180 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/conv2d";
"179 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" -> "180 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/conv2d";
"180 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/conv2d" -> "181 ShuffleNet/Sequential[layer2]/Bottleneck[3]/BatchNorm2d[bn1]/batch_norm";
"181 ShuffleNet/Sequential[layer2]/Bottleneck[3]/BatchNorm2d[bn1]/batch_norm" -> "182 ShuffleNet/Sequential[layer2]/Bottleneck[3]/RELU";
"182 ShuffleNet/Sequential[layer2]/Bottleneck[3]/RELU" -> "183 ShuffleNet/Sequential[layer2]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize";
"183 ShuffleNet/Sequential[layer2]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize" -> "187 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv2]/conv2d";
"184 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "185 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"185 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "186 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"186 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "187 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv2]/conv2d";
"187 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv2]/conv2d" -> "188 ShuffleNet/Sequential[layer2]/Bottleneck[3]/BatchNorm2d[bn2]/batch_norm";
"188 ShuffleNet/Sequential[layer2]/Bottleneck[3]/BatchNorm2d[bn2]/batch_norm" -> "189 ShuffleNet/Sequential[layer2]/Bottleneck[3]/RELU";
"189 ShuffleNet/Sequential[layer2]/Bottleneck[3]/RELU" -> "190 ShuffleNet/Sequential[layer2]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize";
"190 ShuffleNet/Sequential[layer2]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize" -> "194 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv3]/conv2d";
"191 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "192 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"192 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "193 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"193 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "194 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv3]/conv2d";
"194 ShuffleNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv3]/conv2d" -> "195 ShuffleNet/Sequential[layer2]/Bottleneck[3]/BatchNorm2d[bn3]/batch_norm";
"195 ShuffleNet/Sequential[layer2]/Bottleneck[3]/BatchNorm2d[bn3]/batch_norm" -> "196 ShuffleNet/Sequential[layer2]/Bottleneck[3]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"196 ShuffleNet/Sequential[layer2]/Bottleneck[3]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "198 ShuffleNet/Sequential[layer2]/Bottleneck[3]/__add__";
"197 ShuffleNet/Sequential[layer2]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize" -> "198 ShuffleNet/Sequential[layer2]/Bottleneck[3]/__add__";
"198 ShuffleNet/Sequential[layer2]/Bottleneck[3]/__add__" -> "199 ShuffleNet/Sequential[layer2]/Bottleneck[3]/RELU";
"199 ShuffleNet/Sequential[layer2]/Bottleneck[3]/RELU" -> "203 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize";
"199 ShuffleNet/Sequential[layer2]/Bottleneck[3]/RELU" -> "221 ShuffleNet/Sequential[layer2]/Bottleneck[4]/SymmetricQuantizer/symmetric_quantize";
"200 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "201 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"201 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "202 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"202 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "204 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv1]/conv2d";
"203 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" -> "204 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv1]/conv2d";
"204 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv1]/conv2d" -> "205 ShuffleNet/Sequential[layer2]/Bottleneck[4]/BatchNorm2d[bn1]/batch_norm";
"205 ShuffleNet/Sequential[layer2]/Bottleneck[4]/BatchNorm2d[bn1]/batch_norm" -> "206 ShuffleNet/Sequential[layer2]/Bottleneck[4]/RELU";
"206 ShuffleNet/Sequential[layer2]/Bottleneck[4]/RELU" -> "207 ShuffleNet/Sequential[layer2]/Bottleneck[4]/SymmetricQuantizer/symmetric_quantize";
"207 ShuffleNet/Sequential[layer2]/Bottleneck[4]/SymmetricQuantizer/symmetric_quantize" -> "211 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv2]/conv2d";
"208 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "209 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"209 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "210 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"210 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "211 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv2]/conv2d";
"211 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv2]/conv2d" -> "212 ShuffleNet/Sequential[layer2]/Bottleneck[4]/BatchNorm2d[bn2]/batch_norm";
"212 ShuffleNet/Sequential[layer2]/Bottleneck[4]/BatchNorm2d[bn2]/batch_norm" -> "213 ShuffleNet/Sequential[layer2]/Bottleneck[4]/RELU";
"213 ShuffleNet/Sequential[layer2]/Bottleneck[4]/RELU" -> "214 ShuffleNet/Sequential[layer2]/Bottleneck[4]/SymmetricQuantizer/symmetric_quantize";
"214 ShuffleNet/Sequential[layer2]/Bottleneck[4]/SymmetricQuantizer/symmetric_quantize" -> "218 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv3]/conv2d";
"215 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "216 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"216 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "217 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"217 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "218 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv3]/conv2d";
"218 ShuffleNet/Sequential[layer2]/Bottleneck[4]/NNCFConv2d[conv3]/conv2d" -> "219 ShuffleNet/Sequential[layer2]/Bottleneck[4]/BatchNorm2d[bn3]/batch_norm";
"219 ShuffleNet/Sequential[layer2]/Bottleneck[4]/BatchNorm2d[bn3]/batch_norm" -> "220 ShuffleNet/Sequential[layer2]/Bottleneck[4]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"220 ShuffleNet/Sequential[layer2]/Bottleneck[4]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "222 ShuffleNet/Sequential[layer2]/Bottleneck[4]/__add__";
"221 ShuffleNet/Sequential[layer2]/Bottleneck[4]/SymmetricQuantizer/symmetric_quantize" -> "222 ShuffleNet/Sequential[layer2]/Bottleneck[4]/__add__";
"222 ShuffleNet/Sequential[layer2]/Bottleneck[4]/__add__" -> "223 ShuffleNet/Sequential[layer2]/Bottleneck[4]/RELU";
"223 ShuffleNet/Sequential[layer2]/Bottleneck[4]/RELU" -> "227 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize";
"223 ShuffleNet/Sequential[layer2]/Bottleneck[4]/RELU" -> "245 ShuffleNet/Sequential[layer2]/Bottleneck[5]/SymmetricQuantizer/symmetric_quantize";
"224 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "225 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"225 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "226 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"226 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "228 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv1]/conv2d";
"227 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" -> "228 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv1]/conv2d";
"228 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv1]/conv2d" -> "229 ShuffleNet/Sequential[layer2]/Bottleneck[5]/BatchNorm2d[bn1]/batch_norm";
"229 ShuffleNet/Sequential[layer2]/Bottleneck[5]/BatchNorm2d[bn1]/batch_norm" -> "230 ShuffleNet/Sequential[layer2]/Bottleneck[5]/RELU";
"230 ShuffleNet/Sequential[layer2]/Bottleneck[5]/RELU" -> "231 ShuffleNet/Sequential[layer2]/Bottleneck[5]/SymmetricQuantizer/symmetric_quantize";
"231 ShuffleNet/Sequential[layer2]/Bottleneck[5]/SymmetricQuantizer/symmetric_quantize" -> "235 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv2]/conv2d";
"232 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "233 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"233 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "234 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"234 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "235 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv2]/conv2d";
"235 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv2]/conv2d" -> "236 ShuffleNet/Sequential[layer2]/Bottleneck[5]/BatchNorm2d[bn2]/batch_norm";
"236 ShuffleNet/Sequential[layer2]/Bottleneck[5]/BatchNorm2d[bn2]/batch_norm" -> "237 ShuffleNet/Sequential[layer2]/Bottleneck[5]/RELU";
"237 ShuffleNet/Sequential[layer2]/Bottleneck[5]/RELU" -> "238 ShuffleNet/Sequential[layer2]/Bottleneck[5]/SymmetricQuantizer/symmetric_quantize";
"238 ShuffleNet/Sequential[layer2]/Bottleneck[5]/SymmetricQuantizer/symmetric_quantize" -> "242 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv3]/conv2d";
"239 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "240 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"240 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "241 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"241 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "242 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv3]/conv2d";
"242 ShuffleNet/Sequential[layer2]/Bottleneck[5]/NNCFConv2d[conv3]/conv2d" -> "243 ShuffleNet/Sequential[layer2]/Bottleneck[5]/BatchNorm2d[bn3]/batch_norm";
"243 ShuffleNet/Sequential[layer2]/Bottleneck[5]/BatchNorm2d[bn3]/batch_norm" -> "244 ShuffleNet/Sequential[layer2]/Bottleneck[5]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"244 ShuffleNet/Sequential[layer2]/Bottleneck[5]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "246 ShuffleNet/Sequential[layer2]/Bottleneck[5]/__add__";
"245 ShuffleNet/Sequential[layer2]/Bottleneck[5]/SymmetricQuantizer/symmetric_quantize" -> "246 ShuffleNet/Sequential[layer2]/Bottleneck[5]/__add__";
"246 ShuffleNet/Sequential[layer2]/Bottleneck[5]/__add__" -> "247 ShuffleNet/Sequential[layer2]/Bottleneck[5]/RELU";
"247 ShuffleNet/Sequential[layer2]/Bottleneck[5]/RELU" -> "251 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize";
"247 ShuffleNet/Sequential[layer2]/Bottleneck[5]/RELU" -> "269 ShuffleNet/Sequential[layer2]/Bottleneck[6]/SymmetricQuantizer/symmetric_quantize";
"248 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "249 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"249 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "250 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"250 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "252 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv1]/conv2d";
"251 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" -> "252 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv1]/conv2d";
"252 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv1]/conv2d" -> "253 ShuffleNet/Sequential[layer2]/Bottleneck[6]/BatchNorm2d[bn1]/batch_norm";
"253 ShuffleNet/Sequential[layer2]/Bottleneck[6]/BatchNorm2d[bn1]/batch_norm" -> "254 ShuffleNet/Sequential[layer2]/Bottleneck[6]/RELU";
"254 ShuffleNet/Sequential[layer2]/Bottleneck[6]/RELU" -> "255 ShuffleNet/Sequential[layer2]/Bottleneck[6]/SymmetricQuantizer/symmetric_quantize";
"255 ShuffleNet/Sequential[layer2]/Bottleneck[6]/SymmetricQuantizer/symmetric_quantize" -> "259 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv2]/conv2d";
"256 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "257 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"257 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "258 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"258 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "259 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv2]/conv2d";
"259 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv2]/conv2d" -> "260 ShuffleNet/Sequential[layer2]/Bottleneck[6]/BatchNorm2d[bn2]/batch_norm";
"260 ShuffleNet/Sequential[layer2]/Bottleneck[6]/BatchNorm2d[bn2]/batch_norm" -> "261 ShuffleNet/Sequential[layer2]/Bottleneck[6]/RELU";
"261 ShuffleNet/Sequential[layer2]/Bottleneck[6]/RELU" -> "262 ShuffleNet/Sequential[layer2]/Bottleneck[6]/SymmetricQuantizer/symmetric_quantize";
"262 ShuffleNet/Sequential[layer2]/Bottleneck[6]/SymmetricQuantizer/symmetric_quantize" -> "266 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv3]/conv2d";
"263 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "264 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"264 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "265 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"265 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "266 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv3]/conv2d";
"266 ShuffleNet/Sequential[layer2]/Bottleneck[6]/NNCFConv2d[conv3]/conv2d" -> "267 ShuffleNet/Sequential[layer2]/Bottleneck[6]/BatchNorm2d[bn3]/batch_norm";
"267 ShuffleNet/Sequential[layer2]/Bottleneck[6]/BatchNorm2d[bn3]/batch_norm" -> "268 ShuffleNet/Sequential[layer2]/Bottleneck[6]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"268 ShuffleNet/Sequential[layer2]/Bottleneck[6]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "270 ShuffleNet/Sequential[layer2]/Bottleneck[6]/__add__";
"269 ShuffleNet/Sequential[layer2]/Bottleneck[6]/SymmetricQuantizer/symmetric_quantize" -> "270 ShuffleNet/Sequential[layer2]/Bottleneck[6]/__add__";
"270 ShuffleNet/Sequential[layer2]/Bottleneck[6]/__add__" -> "271 ShuffleNet/Sequential[layer2]/Bottleneck[6]/RELU";
"271 ShuffleNet/Sequential[layer2]/Bottleneck[6]/RELU" -> "275 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize";
"271 ShuffleNet/Sequential[layer2]/Bottleneck[6]/RELU" -> "293 ShuffleNet/Sequential[layer2]/Bottleneck[7]/SymmetricQuantizer/symmetric_quantize";
"272 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "273 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"273 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "274 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"274 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "276 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv1]/conv2d";
"275 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" -> "276 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv1]/conv2d";
"276 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv1]/conv2d" -> "277 ShuffleNet/Sequential[layer2]/Bottleneck[7]/BatchNorm2d[bn1]/batch_norm";
"277 ShuffleNet/Sequential[layer2]/Bottleneck[7]/BatchNorm2d[bn1]/batch_norm" -> "278 ShuffleNet/Sequential[layer2]/Bottleneck[7]/RELU";
"278 ShuffleNet/Sequential[layer2]/Bottleneck[7]/RELU" -> "279 ShuffleNet/Sequential[layer2]/Bottleneck[7]/SymmetricQuantizer/symmetric_quantize";
"279 ShuffleNet/Sequential[layer2]/Bottleneck[7]/SymmetricQuantizer/symmetric_quantize" -> "283 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv2]/conv2d";
"280 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "281 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"281 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "282 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"282 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "283 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv2]/conv2d";
"283 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv2]/conv2d" -> "284 ShuffleNet/Sequential[layer2]/Bottleneck[7]/BatchNorm2d[bn2]/batch_norm";
"284 ShuffleNet/Sequential[layer2]/Bottleneck[7]/BatchNorm2d[bn2]/batch_norm" -> "285 ShuffleNet/Sequential[layer2]/Bottleneck[7]/RELU";
"285 ShuffleNet/Sequential[layer2]/Bottleneck[7]/RELU" -> "286 ShuffleNet/Sequential[layer2]/Bottleneck[7]/SymmetricQuantizer/symmetric_quantize";
"286 ShuffleNet/Sequential[layer2]/Bottleneck[7]/SymmetricQuantizer/symmetric_quantize" -> "290 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv3]/conv2d";
"287 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "288 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"288 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "289 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"289 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "290 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv3]/conv2d";
"290 ShuffleNet/Sequential[layer2]/Bottleneck[7]/NNCFConv2d[conv3]/conv2d" -> "291 ShuffleNet/Sequential[layer2]/Bottleneck[7]/BatchNorm2d[bn3]/batch_norm";
"291 ShuffleNet/Sequential[layer2]/Bottleneck[7]/BatchNorm2d[bn3]/batch_norm" -> "292 ShuffleNet/Sequential[layer2]/Bottleneck[7]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"292 ShuffleNet/Sequential[layer2]/Bottleneck[7]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "294 ShuffleNet/Sequential[layer2]/Bottleneck[7]/__add__";
"293 ShuffleNet/Sequential[layer2]/Bottleneck[7]/SymmetricQuantizer/symmetric_quantize" -> "294 ShuffleNet/Sequential[layer2]/Bottleneck[7]/__add__";
"294 ShuffleNet/Sequential[layer2]/Bottleneck[7]/__add__" -> "295 ShuffleNet/Sequential[layer2]/Bottleneck[7]/RELU";
"295 ShuffleNet/Sequential[layer2]/Bottleneck[7]/RELU" -> "299 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize";
"295 ShuffleNet/Sequential[layer2]/Bottleneck[7]/RELU" -> "316 ShuffleNet/Sequential[layer3]/Bottleneck[0]/Sequential[shortcut]/AvgPool2d[0]/SymmetricQuantizer/symmetric_quantize";
"296 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "297 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"297 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "298 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"298 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "300 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d";
"299 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" -> "300 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d";
"300 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/conv2d" -> "301 ShuffleNet/Sequential[layer3]/Bottleneck[0]/BatchNorm2d[bn1]/batch_norm";
"301 ShuffleNet/Sequential[layer3]/Bottleneck[0]/BatchNorm2d[bn1]/batch_norm" -> "302 ShuffleNet/Sequential[layer3]/Bottleneck[0]/RELU";
"302 ShuffleNet/Sequential[layer3]/Bottleneck[0]/RELU" -> "303 ShuffleNet/Sequential[layer3]/Bottleneck[0]/SymmetricQuantizer/symmetric_quantize";
"303 ShuffleNet/Sequential[layer3]/Bottleneck[0]/SymmetricQuantizer/symmetric_quantize" -> "307 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d";
"304 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "305 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"305 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "306 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"306 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "307 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d";
"307 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv2]/conv2d" -> "308 ShuffleNet/Sequential[layer3]/Bottleneck[0]/BatchNorm2d[bn2]/batch_norm";
"308 ShuffleNet/Sequential[layer3]/Bottleneck[0]/BatchNorm2d[bn2]/batch_norm" -> "309 ShuffleNet/Sequential[layer3]/Bottleneck[0]/RELU";
"309 ShuffleNet/Sequential[layer3]/Bottleneck[0]/RELU" -> "310 ShuffleNet/Sequential[layer3]/Bottleneck[0]/SymmetricQuantizer/symmetric_quantize";
"310 ShuffleNet/Sequential[layer3]/Bottleneck[0]/SymmetricQuantizer/symmetric_quantize" -> "314 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d";
"311 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "312 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"312 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "313 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"313 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "314 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d";
"314 ShuffleNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv3]/conv2d" -> "315 ShuffleNet/Sequential[layer3]/Bottleneck[0]/BatchNorm2d[bn3]/batch_norm";
"315 ShuffleNet/Sequential[layer3]/Bottleneck[0]/BatchNorm2d[bn3]/batch_norm" -> "318 ShuffleNet/Sequential[layer3]/Bottleneck[0]/cat";
"316 ShuffleNet/Sequential[layer3]/Bottleneck[0]/Sequential[shortcut]/AvgPool2d[0]/SymmetricQuantizer/symmetric_quantize" -> "317 ShuffleNet/Sequential[layer3]/Bottleneck[0]/Sequential[shortcut]/AvgPool2d[0]/avg_pool2d";
"317 ShuffleNet/Sequential[layer3]/Bottleneck[0]/Sequential[shortcut]/AvgPool2d[0]/avg_pool2d" -> "318 ShuffleNet/Sequential[layer3]/Bottleneck[0]/cat";
"318 ShuffleNet/Sequential[layer3]/Bottleneck[0]/cat" -> "319 ShuffleNet/Sequential[layer3]/Bottleneck[0]/RELU";
"319 ShuffleNet/Sequential[layer3]/Bottleneck[0]/RELU" -> "323 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize";
"319 ShuffleNet/Sequential[layer3]/Bottleneck[0]/RELU" -> "341 ShuffleNet/Sequential[layer3]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize";
"320 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "321 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"321 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "322 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"322 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "324 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d";
"323 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" -> "324 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d";
"324 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv1]/conv2d" -> "325 ShuffleNet/Sequential[layer3]/Bottleneck[1]/BatchNorm2d[bn1]/batch_norm";
"325 ShuffleNet/Sequential[layer3]/Bottleneck[1]/BatchNorm2d[bn1]/batch_norm" -> "326 ShuffleNet/Sequential[layer3]/Bottleneck[1]/RELU";
"326 ShuffleNet/Sequential[layer3]/Bottleneck[1]/RELU" -> "327 ShuffleNet/Sequential[layer3]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize";
"327 ShuffleNet/Sequential[layer3]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize" -> "331 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d";
"328 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "329 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"329 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "330 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"330 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "331 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d";
"331 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv2]/conv2d" -> "332 ShuffleNet/Sequential[layer3]/Bottleneck[1]/BatchNorm2d[bn2]/batch_norm";
"332 ShuffleNet/Sequential[layer3]/Bottleneck[1]/BatchNorm2d[bn2]/batch_norm" -> "333 ShuffleNet/Sequential[layer3]/Bottleneck[1]/RELU";
"333 ShuffleNet/Sequential[layer3]/Bottleneck[1]/RELU" -> "334 ShuffleNet/Sequential[layer3]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize";
"334 ShuffleNet/Sequential[layer3]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize" -> "338 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d";
"335 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "336 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"336 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "337 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"337 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "338 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d";
"338 ShuffleNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv3]/conv2d" -> "339 ShuffleNet/Sequential[layer3]/Bottleneck[1]/BatchNorm2d[bn3]/batch_norm";
"339 ShuffleNet/Sequential[layer3]/Bottleneck[1]/BatchNorm2d[bn3]/batch_norm" -> "340 ShuffleNet/Sequential[layer3]/Bottleneck[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"340 ShuffleNet/Sequential[layer3]/Bottleneck[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "342 ShuffleNet/Sequential[layer3]/Bottleneck[1]/__add__";
"341 ShuffleNet/Sequential[layer3]/Bottleneck[1]/SymmetricQuantizer/symmetric_quantize" -> "342 ShuffleNet/Sequential[layer3]/Bottleneck[1]/__add__";
"342 ShuffleNet/Sequential[layer3]/Bottleneck[1]/__add__" -> "343 ShuffleNet/Sequential[layer3]/Bottleneck[1]/RELU";
"343 ShuffleNet/Sequential[layer3]/Bottleneck[1]/RELU" -> "347 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize";
"343 ShuffleNet/Sequential[layer3]/Bottleneck[1]/RELU" -> "365 ShuffleNet/Sequential[layer3]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize";
"344 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "345 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"345 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "346 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"346 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "348 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d";
"347 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" -> "348 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d";
"348 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv1]/conv2d" -> "349 ShuffleNet/Sequential[layer3]/Bottleneck[2]/BatchNorm2d[bn1]/batch_norm";
"349 ShuffleNet/Sequential[layer3]/Bottleneck[2]/BatchNorm2d[bn1]/batch_norm" -> "350 ShuffleNet/Sequential[layer3]/Bottleneck[2]/RELU";
"350 ShuffleNet/Sequential[layer3]/Bottleneck[2]/RELU" -> "351 ShuffleNet/Sequential[layer3]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize";
"351 ShuffleNet/Sequential[layer3]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize" -> "355 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d";
"352 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "353 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"353 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "354 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"354 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "355 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d";
"355 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv2]/conv2d" -> "356 ShuffleNet/Sequential[layer3]/Bottleneck[2]/BatchNorm2d[bn2]/batch_norm";
"356 ShuffleNet/Sequential[layer3]/Bottleneck[2]/BatchNorm2d[bn2]/batch_norm" -> "357 ShuffleNet/Sequential[layer3]/Bottleneck[2]/RELU";
"357 ShuffleNet/Sequential[layer3]/Bottleneck[2]/RELU" -> "358 ShuffleNet/Sequential[layer3]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize";
"358 ShuffleNet/Sequential[layer3]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize" -> "362 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d";
"359 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "360 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"360 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "361 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"361 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "362 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d";
"362 ShuffleNet/Sequential[layer3]/Bottleneck[2]/NNCFConv2d[conv3]/conv2d" -> "363 ShuffleNet/Sequential[layer3]/Bottleneck[2]/BatchNorm2d[bn3]/batch_norm";
"363 ShuffleNet/Sequential[layer3]/Bottleneck[2]/BatchNorm2d[bn3]/batch_norm" -> "364 ShuffleNet/Sequential[layer3]/Bottleneck[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"364 ShuffleNet/Sequential[layer3]/Bottleneck[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "366 ShuffleNet/Sequential[layer3]/Bottleneck[2]/__add__";
"365 ShuffleNet/Sequential[layer3]/Bottleneck[2]/SymmetricQuantizer/symmetric_quantize" -> "366 ShuffleNet/Sequential[layer3]/Bottleneck[2]/__add__";
"366 ShuffleNet/Sequential[layer3]/Bottleneck[2]/__add__" -> "367 ShuffleNet/Sequential[layer3]/Bottleneck[2]/RELU";
"367 ShuffleNet/Sequential[layer3]/Bottleneck[2]/RELU" -> "371 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize";
"367 ShuffleNet/Sequential[layer3]/Bottleneck[2]/RELU" -> "389 ShuffleNet/Sequential[layer3]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize";
"368 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "369 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"369 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "370 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"370 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "372 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv1]/conv2d";
"371 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" -> "372 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv1]/conv2d";
"372 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv1]/conv2d" -> "373 ShuffleNet/Sequential[layer3]/Bottleneck[3]/BatchNorm2d[bn1]/batch_norm";
"373 ShuffleNet/Sequential[layer3]/Bottleneck[3]/BatchNorm2d[bn1]/batch_norm" -> "374 ShuffleNet/Sequential[layer3]/Bottleneck[3]/RELU";
"374 ShuffleNet/Sequential[layer3]/Bottleneck[3]/RELU" -> "375 ShuffleNet/Sequential[layer3]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize";
"375 ShuffleNet/Sequential[layer3]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize" -> "379 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv2]/conv2d";
"376 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "377 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"377 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "378 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"378 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "379 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv2]/conv2d";
"379 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv2]/conv2d" -> "380 ShuffleNet/Sequential[layer3]/Bottleneck[3]/BatchNorm2d[bn2]/batch_norm";
"380 ShuffleNet/Sequential[layer3]/Bottleneck[3]/BatchNorm2d[bn2]/batch_norm" -> "381 ShuffleNet/Sequential[layer3]/Bottleneck[3]/RELU";
"381 ShuffleNet/Sequential[layer3]/Bottleneck[3]/RELU" -> "382 ShuffleNet/Sequential[layer3]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize";
"382 ShuffleNet/Sequential[layer3]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize" -> "386 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv3]/conv2d";
"383 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "384 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"384 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "385 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"385 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "386 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv3]/conv2d";
"386 ShuffleNet/Sequential[layer3]/Bottleneck[3]/NNCFConv2d[conv3]/conv2d" -> "387 ShuffleNet/Sequential[layer3]/Bottleneck[3]/BatchNorm2d[bn3]/batch_norm";
"387 ShuffleNet/Sequential[layer3]/Bottleneck[3]/BatchNorm2d[bn3]/batch_norm" -> "388 ShuffleNet/Sequential[layer3]/Bottleneck[3]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"388 ShuffleNet/Sequential[layer3]/Bottleneck[3]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "390 ShuffleNet/Sequential[layer3]/Bottleneck[3]/__add__";
"389 ShuffleNet/Sequential[layer3]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize" -> "390 ShuffleNet/Sequential[layer3]/Bottleneck[3]/__add__";
"390 ShuffleNet/Sequential[layer3]/Bottleneck[3]/__add__" -> "391 ShuffleNet/Sequential[layer3]/Bottleneck[3]/RELU";
"391 ShuffleNet/Sequential[layer3]/Bottleneck[3]/RELU" -> "392 ShuffleNet/Sequential[layer3]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize";
"392 ShuffleNet/Sequential[layer3]/Bottleneck[3]/SymmetricQuantizer/symmetric_quantize" -> "393 ShuffleNet/avg_pool2d";
"393 ShuffleNet/avg_pool2d" -> "394 ShuffleNet/SymmetricQuantizer/symmetric_quantize";
"394 ShuffleNet/SymmetricQuantizer/symmetric_quantize" -> "398 ShuffleNet/NNCFLinear[linear]/linear";
"395 ShuffleNet/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "396 ShuffleNet/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"396 ShuffleNet/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "397 ShuffleNet/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"397 ShuffleNet/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "398 ShuffleNet/NNCFLinear[linear]/linear";
}
