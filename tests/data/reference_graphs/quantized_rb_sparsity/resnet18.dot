strict digraph  {
"0 /nncf_model_input" [id=0, scope="", type=nncf_model_input];
"1 SymmetricQuantizer/symmetric_quantize" [id=1, scope=SymmetricQuantizer, type=symmetric_quantize];
"2 ResNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=2, scope="ResNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"3 ResNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=3, scope="ResNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"4 ResNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=4, scope="ResNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"5 ResNet/NNCFConv2d[conv1]/conv2d" [id=5, scope="ResNet/NNCFConv2d[conv1]", type=conv2d];
"6 ResNet/BatchNorm2d[bn1]/batch_norm" [id=6, scope="ResNet/BatchNorm2d[bn1]", type=batch_norm];
"7 ResNet/RELU" [id=7, scope=ResNet, type=RELU];
"8 ResNet/MaxPool2d[maxpool]/max_pool2d" [id=8, scope="ResNet/MaxPool2d[maxpool]", type=max_pool2d];
"9 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=9, scope="ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"10 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=10, scope="ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"11 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=11, scope="ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"12 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" [id=12, scope="ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]/SymmetricQuantizer", type=symmetric_quantize];
"13 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d" [id=13, scope="ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]", type=conv2d];
"14 ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]/batch_norm" [id=14, scope="ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]", type=batch_norm];
"15 ResNet/Sequential[layer1]/BasicBlock[0]/RELU" [id=15, scope="ResNet/Sequential[layer1]/BasicBlock[0]", type=RELU];
"16 ResNet/Sequential[layer1]/BasicBlock[0]/SymmetricQuantizer/symmetric_quantize" [id=16, scope="ResNet/Sequential[layer1]/BasicBlock[0]/SymmetricQuantizer", type=symmetric_quantize];
"17 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=17, scope="ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"18 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=18, scope="ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"19 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=19, scope="ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"20 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d" [id=20, scope="ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv2]", type=conv2d];
"21 ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]/batch_norm" [id=21, scope="ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]", type=batch_norm];
"22 ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize" [id=22, scope="ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]/SymmetricQuantizer", type=symmetric_quantize];
"23 ResNet/Sequential[layer1]/BasicBlock[0]/SymmetricQuantizer/symmetric_quantize" [id=23, scope="ResNet/Sequential[layer1]/BasicBlock[0]/SymmetricQuantizer", type=symmetric_quantize];
"24 ResNet/Sequential[layer1]/BasicBlock[0]/__iadd__" [id=24, scope="ResNet/Sequential[layer1]/BasicBlock[0]", type=__iadd__];
"25 ResNet/Sequential[layer1]/BasicBlock[0]/RELU" [id=25, scope="ResNet/Sequential[layer1]/BasicBlock[0]", type=RELU];
"26 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=26, scope="ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"27 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=27, scope="ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"28 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=28, scope="ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"29 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" [id=29, scope="ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]/SymmetricQuantizer", type=symmetric_quantize];
"30 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d" [id=30, scope="ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]", type=conv2d];
"31 ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]/batch_norm" [id=31, scope="ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]", type=batch_norm];
"32 ResNet/Sequential[layer1]/BasicBlock[1]/RELU" [id=32, scope="ResNet/Sequential[layer1]/BasicBlock[1]", type=RELU];
"33 ResNet/Sequential[layer1]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize" [id=33, scope="ResNet/Sequential[layer1]/BasicBlock[1]/SymmetricQuantizer", type=symmetric_quantize];
"34 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=34, scope="ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"35 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=35, scope="ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"36 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=36, scope="ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"37 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d" [id=37, scope="ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv2]", type=conv2d];
"38 ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]/batch_norm" [id=38, scope="ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]", type=batch_norm];
"39 ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize" [id=39, scope="ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]/SymmetricQuantizer", type=symmetric_quantize];
"40 ResNet/Sequential[layer1]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize" [id=40, scope="ResNet/Sequential[layer1]/BasicBlock[1]/SymmetricQuantizer", type=symmetric_quantize];
"41 ResNet/Sequential[layer1]/BasicBlock[1]/__iadd__" [id=41, scope="ResNet/Sequential[layer1]/BasicBlock[1]", type=__iadd__];
"42 ResNet/Sequential[layer1]/BasicBlock[1]/RELU" [id=42, scope="ResNet/Sequential[layer1]/BasicBlock[1]", type=RELU];
"43 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=43, scope="ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"44 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=44, scope="ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"45 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=45, scope="ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"46 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" [id=46, scope="ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]/SymmetricQuantizer", type=symmetric_quantize];
"47 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d" [id=47, scope="ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]", type=conv2d];
"48 ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]/batch_norm" [id=48, scope="ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]", type=batch_norm];
"49 ResNet/Sequential[layer2]/BasicBlock[0]/RELU" [id=49, scope="ResNet/Sequential[layer2]/BasicBlock[0]", type=RELU];
"50 ResNet/Sequential[layer2]/BasicBlock[0]/SymmetricQuantizer/symmetric_quantize" [id=50, scope="ResNet/Sequential[layer2]/BasicBlock[0]/SymmetricQuantizer", type=symmetric_quantize];
"51 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=51, scope="ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"52 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=52, scope="ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"53 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=53, scope="ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"54 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d" [id=54, scope="ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv2]", type=conv2d];
"55 ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]/batch_norm" [id=55, scope="ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]", type=batch_norm];
"56 ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize" [id=56, scope="ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]/SymmetricQuantizer", type=symmetric_quantize];
"57 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=57, scope="ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"58 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=58, scope="ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"59 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=59, scope="ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"60 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" [id=60, scope="ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/SymmetricQuantizer", type=symmetric_quantize];
"61 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d" [id=61, scope="ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]", type=conv2d];
"62 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm" [id=62, scope="ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/BatchNorm2d[1]", type=batch_norm];
"63 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize" [id=63, scope="ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer", type=symmetric_quantize];
"64 ResNet/Sequential[layer2]/BasicBlock[0]/__iadd__" [id=64, scope="ResNet/Sequential[layer2]/BasicBlock[0]", type=__iadd__];
"65 ResNet/Sequential[layer2]/BasicBlock[0]/RELU" [id=65, scope="ResNet/Sequential[layer2]/BasicBlock[0]", type=RELU];
"66 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=66, scope="ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"67 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=67, scope="ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"68 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=68, scope="ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"69 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" [id=69, scope="ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]/SymmetricQuantizer", type=symmetric_quantize];
"70 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d" [id=70, scope="ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]", type=conv2d];
"71 ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]/batch_norm" [id=71, scope="ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]", type=batch_norm];
"72 ResNet/Sequential[layer2]/BasicBlock[1]/RELU" [id=72, scope="ResNet/Sequential[layer2]/BasicBlock[1]", type=RELU];
"73 ResNet/Sequential[layer2]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize" [id=73, scope="ResNet/Sequential[layer2]/BasicBlock[1]/SymmetricQuantizer", type=symmetric_quantize];
"74 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=74, scope="ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"75 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=75, scope="ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"76 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=76, scope="ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"77 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d" [id=77, scope="ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv2]", type=conv2d];
"78 ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]/batch_norm" [id=78, scope="ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]", type=batch_norm];
"79 ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize" [id=79, scope="ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]/SymmetricQuantizer", type=symmetric_quantize];
"80 ResNet/Sequential[layer2]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize" [id=80, scope="ResNet/Sequential[layer2]/BasicBlock[1]/SymmetricQuantizer", type=symmetric_quantize];
"81 ResNet/Sequential[layer2]/BasicBlock[1]/__iadd__" [id=81, scope="ResNet/Sequential[layer2]/BasicBlock[1]", type=__iadd__];
"82 ResNet/Sequential[layer2]/BasicBlock[1]/RELU" [id=82, scope="ResNet/Sequential[layer2]/BasicBlock[1]", type=RELU];
"83 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=83, scope="ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"84 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=84, scope="ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"85 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=85, scope="ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"86 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" [id=86, scope="ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]/SymmetricQuantizer", type=symmetric_quantize];
"87 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d" [id=87, scope="ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]", type=conv2d];
"88 ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]/batch_norm" [id=88, scope="ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]", type=batch_norm];
"89 ResNet/Sequential[layer3]/BasicBlock[0]/RELU" [id=89, scope="ResNet/Sequential[layer3]/BasicBlock[0]", type=RELU];
"90 ResNet/Sequential[layer3]/BasicBlock[0]/SymmetricQuantizer/symmetric_quantize" [id=90, scope="ResNet/Sequential[layer3]/BasicBlock[0]/SymmetricQuantizer", type=symmetric_quantize];
"91 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=91, scope="ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"92 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=92, scope="ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"93 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=93, scope="ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"94 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d" [id=94, scope="ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv2]", type=conv2d];
"95 ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]/batch_norm" [id=95, scope="ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]", type=batch_norm];
"96 ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize" [id=96, scope="ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]/SymmetricQuantizer", type=symmetric_quantize];
"97 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=97, scope="ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"98 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=98, scope="ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"99 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=99, scope="ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"100 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" [id=100, scope="ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/SymmetricQuantizer", type=symmetric_quantize];
"101 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d" [id=101, scope="ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]", type=conv2d];
"102 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm" [id=102, scope="ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/BatchNorm2d[1]", type=batch_norm];
"103 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize" [id=103, scope="ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer", type=symmetric_quantize];
"104 ResNet/Sequential[layer3]/BasicBlock[0]/__iadd__" [id=104, scope="ResNet/Sequential[layer3]/BasicBlock[0]", type=__iadd__];
"105 ResNet/Sequential[layer3]/BasicBlock[0]/RELU" [id=105, scope="ResNet/Sequential[layer3]/BasicBlock[0]", type=RELU];
"106 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=106, scope="ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"107 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=107, scope="ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"108 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=108, scope="ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"109 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" [id=109, scope="ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]/SymmetricQuantizer", type=symmetric_quantize];
"110 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d" [id=110, scope="ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]", type=conv2d];
"111 ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]/batch_norm" [id=111, scope="ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]", type=batch_norm];
"112 ResNet/Sequential[layer3]/BasicBlock[1]/RELU" [id=112, scope="ResNet/Sequential[layer3]/BasicBlock[1]", type=RELU];
"113 ResNet/Sequential[layer3]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize" [id=113, scope="ResNet/Sequential[layer3]/BasicBlock[1]/SymmetricQuantizer", type=symmetric_quantize];
"114 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=114, scope="ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"115 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=115, scope="ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"116 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=116, scope="ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"117 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d" [id=117, scope="ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv2]", type=conv2d];
"118 ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]/batch_norm" [id=118, scope="ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]", type=batch_norm];
"119 ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize" [id=119, scope="ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]/SymmetricQuantizer", type=symmetric_quantize];
"120 ResNet/Sequential[layer3]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize" [id=120, scope="ResNet/Sequential[layer3]/BasicBlock[1]/SymmetricQuantizer", type=symmetric_quantize];
"121 ResNet/Sequential[layer3]/BasicBlock[1]/__iadd__" [id=121, scope="ResNet/Sequential[layer3]/BasicBlock[1]", type=__iadd__];
"122 ResNet/Sequential[layer3]/BasicBlock[1]/RELU" [id=122, scope="ResNet/Sequential[layer3]/BasicBlock[1]", type=RELU];
"123 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=123, scope="ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"124 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=124, scope="ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"125 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=125, scope="ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"126 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" [id=126, scope="ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]/SymmetricQuantizer", type=symmetric_quantize];
"127 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d" [id=127, scope="ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]", type=conv2d];
"128 ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]/batch_norm" [id=128, scope="ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]", type=batch_norm];
"129 ResNet/Sequential[layer4]/BasicBlock[0]/RELU" [id=129, scope="ResNet/Sequential[layer4]/BasicBlock[0]", type=RELU];
"130 ResNet/Sequential[layer4]/BasicBlock[0]/SymmetricQuantizer/symmetric_quantize" [id=130, scope="ResNet/Sequential[layer4]/BasicBlock[0]/SymmetricQuantizer", type=symmetric_quantize];
"131 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=131, scope="ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"132 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=132, scope="ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"133 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=133, scope="ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"134 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d" [id=134, scope="ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv2]", type=conv2d];
"135 ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]/batch_norm" [id=135, scope="ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]", type=batch_norm];
"136 ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize" [id=136, scope="ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]/SymmetricQuantizer", type=symmetric_quantize];
"137 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=137, scope="ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"138 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=138, scope="ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"139 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=139, scope="ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"140 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" [id=140, scope="ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/SymmetricQuantizer", type=symmetric_quantize];
"141 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d" [id=141, scope="ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]", type=conv2d];
"142 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm" [id=142, scope="ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/BatchNorm2d[1]", type=batch_norm];
"143 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize" [id=143, scope="ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer", type=symmetric_quantize];
"144 ResNet/Sequential[layer4]/BasicBlock[0]/__iadd__" [id=144, scope="ResNet/Sequential[layer4]/BasicBlock[0]", type=__iadd__];
"145 ResNet/Sequential[layer4]/BasicBlock[0]/RELU" [id=145, scope="ResNet/Sequential[layer4]/BasicBlock[0]", type=RELU];
"146 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=146, scope="ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"147 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=147, scope="ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"148 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=148, scope="ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"149 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" [id=149, scope="ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]/SymmetricQuantizer", type=symmetric_quantize];
"150 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d" [id=150, scope="ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]", type=conv2d];
"151 ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]/batch_norm" [id=151, scope="ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]", type=batch_norm];
"152 ResNet/Sequential[layer4]/BasicBlock[1]/RELU" [id=152, scope="ResNet/Sequential[layer4]/BasicBlock[1]", type=RELU];
"153 ResNet/Sequential[layer4]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize" [id=153, scope="ResNet/Sequential[layer4]/BasicBlock[1]/SymmetricQuantizer", type=symmetric_quantize];
"154 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=154, scope="ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"155 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=155, scope="ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"156 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=156, scope="ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"157 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d" [id=157, scope="ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv2]", type=conv2d];
"158 ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]/batch_norm" [id=158, scope="ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]", type=batch_norm];
"159 ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize" [id=159, scope="ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]/SymmetricQuantizer", type=symmetric_quantize];
"160 ResNet/Sequential[layer4]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize" [id=160, scope="ResNet/Sequential[layer4]/BasicBlock[1]/SymmetricQuantizer", type=symmetric_quantize];
"161 ResNet/Sequential[layer4]/BasicBlock[1]/__iadd__" [id=161, scope="ResNet/Sequential[layer4]/BasicBlock[1]", type=__iadd__];
"162 ResNet/Sequential[layer4]/BasicBlock[1]/RELU" [id=162, scope="ResNet/Sequential[layer4]/BasicBlock[1]", type=RELU];
"163 ResNet/Sequential[layer4]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize" [id=163, scope="ResNet/Sequential[layer4]/BasicBlock[1]/SymmetricQuantizer", type=symmetric_quantize];
"164 ResNet/AdaptiveAvgPool2d[avgpool]/adaptive_avg_pool2d" [id=164, scope="ResNet/AdaptiveAvgPool2d[avgpool]", type=adaptive_avg_pool2d];
"165 ResNet/AdaptiveAvgPool2d[avgpool]/SymmetricQuantizer/symmetric_quantize" [id=165, scope="ResNet/AdaptiveAvgPool2d[avgpool]/SymmetricQuantizer", type=symmetric_quantize];
"166 ResNet/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=166, scope="ResNet/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"167 ResNet/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=167, scope="ResNet/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"168 ResNet/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=168, scope="ResNet/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"169 ResNet/NNCFLinear[linear]/linear" [id=169, scope="ResNet/NNCFLinear[linear]", type=linear];
"0 /nncf_model_input" -> "1 SymmetricQuantizer/symmetric_quantize";
"1 SymmetricQuantizer/symmetric_quantize" -> "5 ResNet/NNCFConv2d[conv1]/conv2d";
"2 ResNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "3 ResNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"3 ResNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "4 ResNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"4 ResNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "5 ResNet/NNCFConv2d[conv1]/conv2d";
"5 ResNet/NNCFConv2d[conv1]/conv2d" -> "6 ResNet/BatchNorm2d[bn1]/batch_norm";
"6 ResNet/BatchNorm2d[bn1]/batch_norm" -> "7 ResNet/RELU";
"7 ResNet/RELU" -> "8 ResNet/MaxPool2d[maxpool]/max_pool2d";
"8 ResNet/MaxPool2d[maxpool]/max_pool2d" -> "12 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize";
"8 ResNet/MaxPool2d[maxpool]/max_pool2d" -> "23 ResNet/Sequential[layer1]/BasicBlock[0]/SymmetricQuantizer/symmetric_quantize";
"9 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "10 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"10 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "11 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"11 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "13 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d";
"12 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" -> "13 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d";
"13 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d" -> "14 ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]/batch_norm";
"14 ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]/batch_norm" -> "15 ResNet/Sequential[layer1]/BasicBlock[0]/RELU";
"15 ResNet/Sequential[layer1]/BasicBlock[0]/RELU" -> "16 ResNet/Sequential[layer1]/BasicBlock[0]/SymmetricQuantizer/symmetric_quantize";
"16 ResNet/Sequential[layer1]/BasicBlock[0]/SymmetricQuantizer/symmetric_quantize" -> "20 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d";
"17 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "18 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"18 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "19 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"19 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "20 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d";
"20 ResNet/Sequential[layer1]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d" -> "21 ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]/batch_norm";
"21 ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]/batch_norm" -> "22 ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize";
"22 ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize" -> "24 ResNet/Sequential[layer1]/BasicBlock[0]/__iadd__";
"23 ResNet/Sequential[layer1]/BasicBlock[0]/SymmetricQuantizer/symmetric_quantize" -> "24 ResNet/Sequential[layer1]/BasicBlock[0]/__iadd__";
"24 ResNet/Sequential[layer1]/BasicBlock[0]/__iadd__" -> "25 ResNet/Sequential[layer1]/BasicBlock[0]/RELU";
"25 ResNet/Sequential[layer1]/BasicBlock[0]/RELU" -> "29 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize";
"25 ResNet/Sequential[layer1]/BasicBlock[0]/RELU" -> "40 ResNet/Sequential[layer1]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize";
"26 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "27 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"27 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "28 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"28 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "30 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d";
"29 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" -> "30 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d";
"30 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d" -> "31 ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]/batch_norm";
"31 ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]/batch_norm" -> "32 ResNet/Sequential[layer1]/BasicBlock[1]/RELU";
"32 ResNet/Sequential[layer1]/BasicBlock[1]/RELU" -> "33 ResNet/Sequential[layer1]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize";
"33 ResNet/Sequential[layer1]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize" -> "37 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d";
"34 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "35 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"35 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "36 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"36 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "37 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d";
"37 ResNet/Sequential[layer1]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d" -> "38 ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]/batch_norm";
"38 ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]/batch_norm" -> "39 ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize";
"39 ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize" -> "41 ResNet/Sequential[layer1]/BasicBlock[1]/__iadd__";
"40 ResNet/Sequential[layer1]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize" -> "41 ResNet/Sequential[layer1]/BasicBlock[1]/__iadd__";
"41 ResNet/Sequential[layer1]/BasicBlock[1]/__iadd__" -> "42 ResNet/Sequential[layer1]/BasicBlock[1]/RELU";
"42 ResNet/Sequential[layer1]/BasicBlock[1]/RELU" -> "46 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize";
"42 ResNet/Sequential[layer1]/BasicBlock[1]/RELU" -> "60 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize";
"43 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "44 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"44 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "45 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"45 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "47 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d";
"46 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" -> "47 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d";
"47 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d" -> "48 ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]/batch_norm";
"48 ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]/batch_norm" -> "49 ResNet/Sequential[layer2]/BasicBlock[0]/RELU";
"49 ResNet/Sequential[layer2]/BasicBlock[0]/RELU" -> "50 ResNet/Sequential[layer2]/BasicBlock[0]/SymmetricQuantizer/symmetric_quantize";
"50 ResNet/Sequential[layer2]/BasicBlock[0]/SymmetricQuantizer/symmetric_quantize" -> "54 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d";
"51 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "52 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"52 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "53 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"53 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "54 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d";
"54 ResNet/Sequential[layer2]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d" -> "55 ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]/batch_norm";
"55 ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]/batch_norm" -> "56 ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize";
"56 ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize" -> "64 ResNet/Sequential[layer2]/BasicBlock[0]/__iadd__";
"57 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "58 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"58 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "59 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"59 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "61 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d";
"60 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" -> "61 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d";
"61 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d" -> "62 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm";
"62 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm" -> "63 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize";
"63 ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize" -> "64 ResNet/Sequential[layer2]/BasicBlock[0]/__iadd__";
"64 ResNet/Sequential[layer2]/BasicBlock[0]/__iadd__" -> "65 ResNet/Sequential[layer2]/BasicBlock[0]/RELU";
"65 ResNet/Sequential[layer2]/BasicBlock[0]/RELU" -> "69 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize";
"65 ResNet/Sequential[layer2]/BasicBlock[0]/RELU" -> "80 ResNet/Sequential[layer2]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize";
"66 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "67 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"67 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "68 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"68 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "70 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d";
"69 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" -> "70 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d";
"70 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d" -> "71 ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]/batch_norm";
"71 ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]/batch_norm" -> "72 ResNet/Sequential[layer2]/BasicBlock[1]/RELU";
"72 ResNet/Sequential[layer2]/BasicBlock[1]/RELU" -> "73 ResNet/Sequential[layer2]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize";
"73 ResNet/Sequential[layer2]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize" -> "77 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d";
"74 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "75 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"75 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "76 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"76 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "77 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d";
"77 ResNet/Sequential[layer2]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d" -> "78 ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]/batch_norm";
"78 ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]/batch_norm" -> "79 ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize";
"79 ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize" -> "81 ResNet/Sequential[layer2]/BasicBlock[1]/__iadd__";
"80 ResNet/Sequential[layer2]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize" -> "81 ResNet/Sequential[layer2]/BasicBlock[1]/__iadd__";
"81 ResNet/Sequential[layer2]/BasicBlock[1]/__iadd__" -> "82 ResNet/Sequential[layer2]/BasicBlock[1]/RELU";
"82 ResNet/Sequential[layer2]/BasicBlock[1]/RELU" -> "86 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize";
"83 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "84 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"84 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "85 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"85 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "87 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d";
"86 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" -> "87 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d";
"87 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d" -> "88 ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]/batch_norm";
"88 ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]/batch_norm" -> "89 ResNet/Sequential[layer3]/BasicBlock[0]/RELU";
"89 ResNet/Sequential[layer3]/BasicBlock[0]/RELU" -> "90 ResNet/Sequential[layer3]/BasicBlock[0]/SymmetricQuantizer/symmetric_quantize";
"90 ResNet/Sequential[layer3]/BasicBlock[0]/SymmetricQuantizer/symmetric_quantize" -> "94 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d";
"91 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "92 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"92 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "93 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"93 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "94 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d";
"94 ResNet/Sequential[layer3]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d" -> "95 ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]/batch_norm";
"95 ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]/batch_norm" -> "96 ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize";
"97 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "98 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"98 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "99 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"82 ResNet/Sequential[layer2]/BasicBlock[1]/RELU" -> "100 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize";
"96 ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize" -> "104 ResNet/Sequential[layer3]/BasicBlock[0]/__iadd__";
"99 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "101 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d";
"100 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" -> "101 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d";
"101 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d" -> "102 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm";
"102 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm" -> "103 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize";
"103 ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize" -> "104 ResNet/Sequential[layer3]/BasicBlock[0]/__iadd__";
"104 ResNet/Sequential[layer3]/BasicBlock[0]/__iadd__" -> "105 ResNet/Sequential[layer3]/BasicBlock[0]/RELU";
"105 ResNet/Sequential[layer3]/BasicBlock[0]/RELU" -> "109 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize";
"105 ResNet/Sequential[layer3]/BasicBlock[0]/RELU" -> "120 ResNet/Sequential[layer3]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize";
"106 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "107 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"107 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "108 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"108 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "110 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d";
"109 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" -> "110 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d";
"110 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d" -> "111 ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]/batch_norm";
"111 ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]/batch_norm" -> "112 ResNet/Sequential[layer3]/BasicBlock[1]/RELU";
"112 ResNet/Sequential[layer3]/BasicBlock[1]/RELU" -> "113 ResNet/Sequential[layer3]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize";
"113 ResNet/Sequential[layer3]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize" -> "117 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d";
"114 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "115 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"115 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "116 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"116 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "117 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d";
"117 ResNet/Sequential[layer3]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d" -> "118 ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]/batch_norm";
"118 ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]/batch_norm" -> "119 ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize";
"119 ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize" -> "121 ResNet/Sequential[layer3]/BasicBlock[1]/__iadd__";
"120 ResNet/Sequential[layer3]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize" -> "121 ResNet/Sequential[layer3]/BasicBlock[1]/__iadd__";
"121 ResNet/Sequential[layer3]/BasicBlock[1]/__iadd__" -> "122 ResNet/Sequential[layer3]/BasicBlock[1]/RELU";
"122 ResNet/Sequential[layer3]/BasicBlock[1]/RELU" -> "126 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize";
"122 ResNet/Sequential[layer3]/BasicBlock[1]/RELU" -> "140 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize";
"123 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "124 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"124 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "125 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"125 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "127 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d";
"126 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" -> "127 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d";
"127 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv1]/conv2d" -> "128 ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]/batch_norm";
"128 ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]/batch_norm" -> "129 ResNet/Sequential[layer4]/BasicBlock[0]/RELU";
"129 ResNet/Sequential[layer4]/BasicBlock[0]/RELU" -> "130 ResNet/Sequential[layer4]/BasicBlock[0]/SymmetricQuantizer/symmetric_quantize";
"130 ResNet/Sequential[layer4]/BasicBlock[0]/SymmetricQuantizer/symmetric_quantize" -> "134 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d";
"131 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "132 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"132 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "133 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"133 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "134 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d";
"134 ResNet/Sequential[layer4]/BasicBlock[0]/NNCFConv2d[conv2]/conv2d" -> "135 ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]/batch_norm";
"135 ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]/batch_norm" -> "136 ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize";
"136 ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize" -> "144 ResNet/Sequential[layer4]/BasicBlock[0]/__iadd__";
"137 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "138 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"138 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "139 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"139 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "141 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d";
"140 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" -> "141 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d";
"141 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d" -> "142 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm";
"142 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm" -> "143 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize";
"143 ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize" -> "144 ResNet/Sequential[layer4]/BasicBlock[0]/__iadd__";
"144 ResNet/Sequential[layer4]/BasicBlock[0]/__iadd__" -> "145 ResNet/Sequential[layer4]/BasicBlock[0]/RELU";
"145 ResNet/Sequential[layer4]/BasicBlock[0]/RELU" -> "149 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize";
"145 ResNet/Sequential[layer4]/BasicBlock[0]/RELU" -> "160 ResNet/Sequential[layer4]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize";
"146 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "147 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"147 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "148 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"148 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "150 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d";
"149 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize" -> "150 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d";
"150 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv1]/conv2d" -> "151 ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]/batch_norm";
"151 ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]/batch_norm" -> "152 ResNet/Sequential[layer4]/BasicBlock[1]/RELU";
"152 ResNet/Sequential[layer4]/BasicBlock[1]/RELU" -> "153 ResNet/Sequential[layer4]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize";
"153 ResNet/Sequential[layer4]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize" -> "157 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d";
"154 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "155 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"155 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "156 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"156 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "157 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d";
"157 ResNet/Sequential[layer4]/BasicBlock[1]/NNCFConv2d[conv2]/conv2d" -> "158 ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]/batch_norm";
"158 ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]/batch_norm" -> "159 ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize";
"159 ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]/SymmetricQuantizer/symmetric_quantize" -> "161 ResNet/Sequential[layer4]/BasicBlock[1]/__iadd__";
"160 ResNet/Sequential[layer4]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize" -> "161 ResNet/Sequential[layer4]/BasicBlock[1]/__iadd__";
"161 ResNet/Sequential[layer4]/BasicBlock[1]/__iadd__" -> "162 ResNet/Sequential[layer4]/BasicBlock[1]/RELU";
"162 ResNet/Sequential[layer4]/BasicBlock[1]/RELU" -> "163 ResNet/Sequential[layer4]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize";
"163 ResNet/Sequential[layer4]/BasicBlock[1]/SymmetricQuantizer/symmetric_quantize" -> "164 ResNet/AdaptiveAvgPool2d[avgpool]/adaptive_avg_pool2d";
"164 ResNet/AdaptiveAvgPool2d[avgpool]/adaptive_avg_pool2d" -> "165 ResNet/AdaptiveAvgPool2d[avgpool]/SymmetricQuantizer/symmetric_quantize";
"165 ResNet/AdaptiveAvgPool2d[avgpool]/SymmetricQuantizer/symmetric_quantize" -> "169 ResNet/NNCFLinear[linear]/linear";
"166 ResNet/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "167 ResNet/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"167 ResNet/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "168 ResNet/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"168 ResNet/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "169 ResNet/NNCFLinear[linear]/linear";
}
