strict digraph  {
"0 /nncf_model_input" [id=0, label=nncf_model_input, scope="", style=filled, type=nncf_model_input];
"1 AsymmetricQuantizer/asymmetric_quantize" [color=red, id=1, label="4_bit__AFQ_#0", scope=AsymmetricQuantizer, style=filled, type=asymmetric_quantize];
"2 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=2, label="8_bit__WFQ_#0", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"3 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/conv2d" [color=lightblue, id=3, label=conv2d, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]", style=filled, type=conv2d];
"4 SSD_VGG/MultiOutputSequential[basenet]/ReLU[1]/RELU" [id=4, label=RELU, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[1]", style=filled, type=RELU];
"5 SSD_VGG/MultiOutputSequential[basenet]/ReLU[1]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=5, label="4_bit__AFQ_#8", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[1]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"6 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=6, label="8_bit__WFQ_#8", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"7 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]/conv2d" [color=lightblue, id=7, label=conv2d, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]", style=filled, type=conv2d];
"8 SSD_VGG/MultiOutputSequential[basenet]/ReLU[3]/RELU" [id=8, label=RELU, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[3]", style=filled, type=RELU];
"9 SSD_VGG/MultiOutputSequential[basenet]/ReLU[3]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=9, label="8_bit__AFQ_#16", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[3]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"10 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[4]/max_pool2d" [id=10, label=max_pool2d, scope="SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[4]", style=filled, type=max_pool2d];
"11 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[5]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=11, label="8_bit__WFQ_#16", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[5]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"12 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[5]/conv2d" [color=lightblue, id=12, label=conv2d, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[5]", style=filled, type=conv2d];
"13 SSD_VGG/MultiOutputSequential[basenet]/ReLU[6]/RELU" [id=13, label=RELU, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[6]", style=filled, type=RELU];
"14 SSD_VGG/MultiOutputSequential[basenet]/ReLU[6]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=14, label="4_bit__AFQ_#17", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[6]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"15 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=15, label="4_bit__WFQ_#17", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"16 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/conv2d" [color=lightblue, id=16, label=conv2d, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]", style=filled, type=conv2d];
"17 SSD_VGG/MultiOutputSequential[basenet]/ReLU[8]/RELU" [id=17, label=RELU, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[8]", style=filled, type=RELU];
"18 SSD_VGG/MultiOutputSequential[basenet]/ReLU[8]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=18, label="4_bit__AFQ_#18", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[8]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"19 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[9]/max_pool2d" [id=19, label=max_pool2d, scope="SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[9]", style=filled, type=max_pool2d];
"20 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=20, label="4_bit__WFQ_#18", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"21 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/conv2d" [color=lightblue, id=21, label=conv2d, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]", style=filled, type=conv2d];
"22 SSD_VGG/MultiOutputSequential[basenet]/ReLU[11]/RELU" [id=22, label=RELU, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[11]", style=filled, type=RELU];
"23 SSD_VGG/MultiOutputSequential[basenet]/ReLU[11]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=23, label="4_bit__AFQ_#4", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[11]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"24 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[12]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=24, label="4_bit__WFQ_#4", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[12]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"25 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[12]/conv2d" [color=lightblue, id=25, label=conv2d, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[12]", style=filled, type=conv2d];
"26 SSD_VGG/MultiOutputSequential[basenet]/ReLU[13]/RELU" [id=26, label=RELU, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[13]", style=filled, type=RELU];
"27 SSD_VGG/MultiOutputSequential[basenet]/ReLU[13]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=27, label="4_bit__AFQ_#5", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[13]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"28 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=purple, id=28, label="2_bit__WFQ_#5", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"29 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/conv2d" [color=lightblue, id=29, label=conv2d, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]", style=filled, type=conv2d];
"30 SSD_VGG/MultiOutputSequential[basenet]/ReLU[15]/RELU" [id=30, label=RELU, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[15]", style=filled, type=RELU];
"31 SSD_VGG/MultiOutputSequential[basenet]/ReLU[15]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=31, label="8_bit__AFQ_#6", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[15]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"32 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[16]/max_pool2d" [id=32, label=max_pool2d, scope="SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[16]", style=filled, type=max_pool2d];
"33 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=33, label="8_bit__WFQ_#6", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"34 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/conv2d" [color=lightblue, id=34, label=conv2d, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]", style=filled, type=conv2d];
"35 SSD_VGG/MultiOutputSequential[basenet]/ReLU[18]/RELU" [id=35, label=RELU, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[18]", style=filled, type=RELU];
"36 SSD_VGG/MultiOutputSequential[basenet]/ReLU[18]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=36, label="4_bit__AFQ_#7", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[18]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"37 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=37, label="8_bit__WFQ_#7", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"38 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]/conv2d" [color=lightblue, id=38, label=conv2d, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]", style=filled, type=conv2d];
"39 SSD_VGG/MultiOutputSequential[basenet]/ReLU[20]/RELU" [id=39, label=RELU, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[20]", style=filled, type=RELU];
"40 SSD_VGG/MultiOutputSequential[basenet]/ReLU[20]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=40, label="4_bit__AFQ_#9", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[20]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"41 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=41, label="8_bit__WFQ_#9", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"42 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]/conv2d" [color=lightblue, id=42, label=conv2d, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]", style=filled, type=conv2d];
"43 SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]/RELU" [id=43, label=RELU, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]", style=filled, type=RELU];
"44 SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=44, label="8_bit__AFQ_#10", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"45 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[23]/max_pool2d" [id=45, label=max_pool2d, scope="SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[23]", style=filled, type=max_pool2d];
"46 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[23]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=46, label="4_bit__AFQ_#3", scope="SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[23]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"47 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=47, label="8_bit__WFQ_#3", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"48 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/conv2d" [color=lightblue, id=48, label=conv2d, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]", style=filled, type=conv2d];
"49 SSD_VGG/MultiOutputSequential[basenet]/ReLU[25]/RELU" [id=49, label=RELU, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[25]", style=filled, type=RELU];
"50 SSD_VGG/MultiOutputSequential[basenet]/ReLU[25]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=50, label="4_bit__AFQ_#11", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[25]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"51 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=51, label="8_bit__WFQ_#11", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"52 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]/conv2d" [color=lightblue, id=52, label=conv2d, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]", style=filled, type=conv2d];
"53 SSD_VGG/MultiOutputSequential[basenet]/ReLU[27]/RELU" [id=53, label=RELU, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[27]", style=filled, type=RELU];
"54 SSD_VGG/MultiOutputSequential[basenet]/ReLU[27]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=54, label="4_bit__AFQ_#12", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[27]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"55 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=55, label="4_bit__WFQ_#12", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"56 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]/conv2d" [color=lightblue, id=56, label=conv2d, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]", style=filled, type=conv2d];
"57 SSD_VGG/MultiOutputSequential[basenet]/ReLU[29]/RELU" [id=57, label=RELU, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[29]", style=filled, type=RELU];
"58 SSD_VGG/MultiOutputSequential[basenet]/ReLU[29]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=58, label="8_bit__AFQ_#13", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[29]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"59 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[30]/max_pool2d" [id=59, label=max_pool2d, scope="SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[30]", style=filled, type=max_pool2d];
"60 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[31]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=purple, id=60, label="2_bit__WFQ_#13", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[31]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"61 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[31]/conv2d" [color=lightblue, id=61, label=conv2d, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[31]", style=filled, type=conv2d];
"62 SSD_VGG/MultiOutputSequential[basenet]/ReLU[32]/RELU" [id=62, label=RELU, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[32]", style=filled, type=RELU];
"63 SSD_VGG/MultiOutputSequential[basenet]/ReLU[32]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=63, label="8_bit__AFQ_#14", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[32]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"64 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[33]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=purple, id=64, label="2_bit__WFQ_#14", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[33]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"65 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[33]/conv2d" [color=lightblue, id=65, label=conv2d, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[33]", style=filled, type=conv2d];
"66 SSD_VGG/MultiOutputSequential[basenet]/ReLU[34]/RELU" [id=66, label=RELU, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[34]", style=filled, type=RELU];
"67 SSD_VGG/MultiOutputSequential[basenet]/ReLU[34]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=67, label="8_bit__AFQ_#15", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[34]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"68 SSD_VGG/L2Norm[L2Norm]/div" [id=68, label=div, scope="SSD_VGG/L2Norm[L2Norm]", style=filled, type=div];
"69 SSD_VGG/L2Norm[L2Norm]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=69, label="8_bit__AFQ_#2", scope="SSD_VGG/L2Norm[L2Norm]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"70 SSD_VGG/L2Norm[L2Norm]/__rmul__" [id=70, label=__rmul__, scope="SSD_VGG/L2Norm[L2Norm]", style=filled, type=__rmul__];
"71 SSD_VGG/L2Norm[L2Norm]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=71, label="4_bit__AFQ_#1", scope="SSD_VGG/L2Norm[L2Norm]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"72 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=72, label="8_bit__WFQ_#15", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"73 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/conv2d" [color=lightblue, id=73, label=conv2d, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]", style=filled, type=conv2d];
"74 SSD_VGG/MultiOutputSequential[extras]/ReLU[1]/RELU" [id=74, label=RELU, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[1]", style=filled, type=RELU];
"75 SSD_VGG/MultiOutputSequential[extras]/ReLU[1]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=75, label="4_bit__AFQ_#24", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[1]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"76 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=76, label="8_bit__WFQ_#24", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"77 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[2]/conv2d" [color=lightblue, id=77, label=conv2d, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[2]", style=filled, type=conv2d];
"78 SSD_VGG/MultiOutputSequential[extras]/ReLU[3]/RELU" [id=78, label=RELU, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[3]", style=filled, type=RELU];
"79 SSD_VGG/MultiOutputSequential[extras]/ReLU[3]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=79, label="8_bit__AFQ_#25", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[3]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"80 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[4]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=80, label="8_bit__WFQ_#25", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[4]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"81 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[4]/conv2d" [color=lightblue, id=81, label=conv2d, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[4]", style=filled, type=conv2d];
"82 SSD_VGG/MultiOutputSequential[extras]/ReLU[5]/RELU" [id=82, label=RELU, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[5]", style=filled, type=RELU];
"83 SSD_VGG/MultiOutputSequential[extras]/ReLU[5]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=83, label="4_bit__AFQ_#26", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[5]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"84 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=84, label="8_bit__WFQ_#26", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"85 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/conv2d" [color=lightblue, id=85, label=conv2d, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]", style=filled, type=conv2d];
"86 SSD_VGG/MultiOutputSequential[extras]/ReLU[7]/RELU" [id=86, label=RELU, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[7]", style=filled, type=RELU];
"87 SSD_VGG/MultiOutputSequential[extras]/ReLU[7]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=87, label="4_bit__AFQ_#27", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[7]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"88 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[8]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=88, label="8_bit__WFQ_#27", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[8]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"89 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[8]/conv2d" [color=lightblue, id=89, label=conv2d, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[8]", style=filled, type=conv2d];
"90 SSD_VGG/MultiOutputSequential[extras]/ReLU[9]/RELU" [id=90, label=RELU, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[9]", style=filled, type=RELU];
"91 SSD_VGG/MultiOutputSequential[extras]/ReLU[9]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=91, label="8_bit__AFQ_#28", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[9]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"92 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=92, label="4_bit__WFQ_#28", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"93 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]/conv2d" [color=lightblue, id=93, label=conv2d, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]", style=filled, type=conv2d];
"94 SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/RELU" [id=94, label=RELU, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[11]", style=filled, type=RELU];
"95 SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=95, label="8_bit__AFQ_#19", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"96 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=96, label="4_bit__WFQ_#19", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"97 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/conv2d" [color=lightblue, id=97, label=conv2d, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]", style=filled, type=conv2d];
"98 SSD_VGG/MultiOutputSequential[extras]/ReLU[13]/RELU" [id=98, label=RELU, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[13]", style=filled, type=RELU];
"99 SSD_VGG/MultiOutputSequential[extras]/ReLU[13]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=99, label="8_bit__AFQ_#20", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[13]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"100 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[14]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=100, label="8_bit__WFQ_#20", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[14]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"101 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[14]/conv2d" [color=lightblue, id=101, label=conv2d, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[14]", style=filled, type=conv2d];
"102 SSD_VGG/MultiOutputSequential[extras]/ReLU[15]/RELU" [id=102, label=RELU, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[15]", style=filled, type=RELU];
"103 SSD_VGG/MultiOutputSequential[extras]/ReLU[15]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=103, label="8_bit__AFQ_#21", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[15]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"104 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[16]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=104, label="8_bit__WFQ_#21", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[16]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"105 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[16]/conv2d" [color=lightblue, id=105, label=conv2d, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[16]", style=filled, type=conv2d];
"106 SSD_VGG/MultiOutputSequential[extras]/ReLU[17]/RELU" [id=106, label=RELU, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[17]", style=filled, type=RELU];
"107 SSD_VGG/MultiOutputSequential[extras]/ReLU[17]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=107, label="8_bit__AFQ_#22", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[17]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"108 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=108, label="4_bit__WFQ_#22", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"109 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/conv2d" [color=lightblue, id=109, label=conv2d, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]", style=filled, type=conv2d];
"110 SSD_VGG/MultiOutputSequential[extras]/ReLU[19]/RELU" [id=110, label=RELU, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[19]", style=filled, type=RELU];
"111 SSD_VGG/MultiOutputSequential[extras]/ReLU[19]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=111, label="8_bit__AFQ_#23", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[19]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"112 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=112, label="8_bit__WFQ_#1", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"113 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/conv2d" [color=lightblue, id=113, label=conv2d, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]", style=filled, type=conv2d];
"114 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=114, label="4_bit__WFQ_#1", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"115 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/conv2d" [color=lightblue, id=115, label=conv2d, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]", style=filled, type=conv2d];
"116 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=116, label="8_bit__WFQ_#15", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"117 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/conv2d" [color=lightblue, id=117, label=conv2d, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]", style=filled, type=conv2d];
"118 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=purple, id=118, label="2_bit__WFQ_#15", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"119 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/conv2d" [color=lightblue, id=119, label=conv2d, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]", style=filled, type=conv2d];
"120 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=120, label="4_bit__WFQ_#25", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"121 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/conv2d" [color=lightblue, id=121, label=conv2d, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]", style=filled, type=conv2d];
"122 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=122, label="8_bit__WFQ_#25", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"123 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/conv2d" [color=lightblue, id=123, label=conv2d, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]", style=filled, type=conv2d];
"124 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=124, label="4_bit__WFQ_#27", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"125 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/conv2d" [color=lightblue, id=125, label=conv2d, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]", style=filled, type=conv2d];
"126 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=126, label="8_bit__WFQ_#27", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"127 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/conv2d" [color=lightblue, id=127, label=conv2d, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]", style=filled, type=conv2d];
"128 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=128, label="4_bit__WFQ_#19", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"129 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/conv2d" [color=lightblue, id=129, label=conv2d, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]", style=filled, type=conv2d];
"130 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=130, label="4_bit__WFQ_#19", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"131 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/conv2d" [color=lightblue, id=131, label=conv2d, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]", style=filled, type=conv2d];
"132 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=132, label="4_bit__WFQ_#21", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"133 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/conv2d" [color=lightblue, id=133, label=conv2d, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]", style=filled, type=conv2d];
"134 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=134, label="8_bit__WFQ_#21", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"135 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/conv2d" [color=lightblue, id=135, label=conv2d, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]", style=filled, type=conv2d];
"136 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=136, label="8_bit__WFQ_#23", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"137 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[loc]/conv2d" [color=lightblue, id=137, label=conv2d, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[loc]", style=filled, type=conv2d];
"138 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=138, label="8_bit__WFQ_#23", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"139 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]/conv2d" [color=lightblue, id=139, label=conv2d, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]", style=filled, type=conv2d];
"140 SSD_VGG/SSDDetectionOutput[detection_head]/cat" [id=140, label=cat, scope="SSD_VGG/SSDDetectionOutput[detection_head]", style=filled, type=cat];
"141 SSD_VGG/SSDDetectionOutput[detection_head]/cat" [id=141, label=cat, scope="SSD_VGG/SSDDetectionOutput[detection_head]", style=filled, type=cat];
"142 SSD_VGG/SSDDetectionOutput[detection_head]/softmax" [id=142, label=softmax, scope="SSD_VGG/SSDDetectionOutput[detection_head]", style=filled, type=softmax];
"0 /nncf_model_input" -> "1 AsymmetricQuantizer/asymmetric_quantize";
"1 AsymmetricQuantizer/asymmetric_quantize" -> "3 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/conv2d";
"2 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "3 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/conv2d";
"3 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/conv2d" -> "4 SSD_VGG/MultiOutputSequential[basenet]/ReLU[1]/RELU";
"4 SSD_VGG/MultiOutputSequential[basenet]/ReLU[1]/RELU" -> "5 SSD_VGG/MultiOutputSequential[basenet]/ReLU[1]/AsymmetricQuantizer/asymmetric_quantize";
"5 SSD_VGG/MultiOutputSequential[basenet]/ReLU[1]/AsymmetricQuantizer/asymmetric_quantize" -> "7 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]/conv2d";
"6 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "7 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]/conv2d";
"7 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]/conv2d" -> "8 SSD_VGG/MultiOutputSequential[basenet]/ReLU[3]/RELU";
"8 SSD_VGG/MultiOutputSequential[basenet]/ReLU[3]/RELU" -> "9 SSD_VGG/MultiOutputSequential[basenet]/ReLU[3]/AsymmetricQuantizer/asymmetric_quantize";
"9 SSD_VGG/MultiOutputSequential[basenet]/ReLU[3]/AsymmetricQuantizer/asymmetric_quantize" -> "10 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[4]/max_pool2d";
"10 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[4]/max_pool2d" -> "12 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[5]/conv2d";
"11 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[5]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "12 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[5]/conv2d";
"12 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[5]/conv2d" -> "13 SSD_VGG/MultiOutputSequential[basenet]/ReLU[6]/RELU";
"13 SSD_VGG/MultiOutputSequential[basenet]/ReLU[6]/RELU" -> "14 SSD_VGG/MultiOutputSequential[basenet]/ReLU[6]/AsymmetricQuantizer/asymmetric_quantize";
"14 SSD_VGG/MultiOutputSequential[basenet]/ReLU[6]/AsymmetricQuantizer/asymmetric_quantize" -> "16 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/conv2d";
"15 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "16 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/conv2d";
"16 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/conv2d" -> "17 SSD_VGG/MultiOutputSequential[basenet]/ReLU[8]/RELU";
"17 SSD_VGG/MultiOutputSequential[basenet]/ReLU[8]/RELU" -> "18 SSD_VGG/MultiOutputSequential[basenet]/ReLU[8]/AsymmetricQuantizer/asymmetric_quantize";
"18 SSD_VGG/MultiOutputSequential[basenet]/ReLU[8]/AsymmetricQuantizer/asymmetric_quantize" -> "19 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[9]/max_pool2d";
"19 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[9]/max_pool2d" -> "21 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/conv2d";
"20 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "21 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/conv2d";
"21 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/conv2d" -> "22 SSD_VGG/MultiOutputSequential[basenet]/ReLU[11]/RELU";
"22 SSD_VGG/MultiOutputSequential[basenet]/ReLU[11]/RELU" -> "23 SSD_VGG/MultiOutputSequential[basenet]/ReLU[11]/AsymmetricQuantizer/asymmetric_quantize";
"23 SSD_VGG/MultiOutputSequential[basenet]/ReLU[11]/AsymmetricQuantizer/asymmetric_quantize" -> "25 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[12]/conv2d";
"24 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[12]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "25 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[12]/conv2d";
"25 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[12]/conv2d" -> "26 SSD_VGG/MultiOutputSequential[basenet]/ReLU[13]/RELU";
"26 SSD_VGG/MultiOutputSequential[basenet]/ReLU[13]/RELU" -> "27 SSD_VGG/MultiOutputSequential[basenet]/ReLU[13]/AsymmetricQuantizer/asymmetric_quantize";
"27 SSD_VGG/MultiOutputSequential[basenet]/ReLU[13]/AsymmetricQuantizer/asymmetric_quantize" -> "29 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/conv2d";
"28 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "29 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/conv2d";
"29 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/conv2d" -> "30 SSD_VGG/MultiOutputSequential[basenet]/ReLU[15]/RELU";
"30 SSD_VGG/MultiOutputSequential[basenet]/ReLU[15]/RELU" -> "31 SSD_VGG/MultiOutputSequential[basenet]/ReLU[15]/AsymmetricQuantizer/asymmetric_quantize";
"31 SSD_VGG/MultiOutputSequential[basenet]/ReLU[15]/AsymmetricQuantizer/asymmetric_quantize" -> "32 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[16]/max_pool2d";
"32 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[16]/max_pool2d" -> "34 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/conv2d";
"33 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "34 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/conv2d";
"34 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/conv2d" -> "35 SSD_VGG/MultiOutputSequential[basenet]/ReLU[18]/RELU";
"35 SSD_VGG/MultiOutputSequential[basenet]/ReLU[18]/RELU" -> "36 SSD_VGG/MultiOutputSequential[basenet]/ReLU[18]/AsymmetricQuantizer/asymmetric_quantize";
"36 SSD_VGG/MultiOutputSequential[basenet]/ReLU[18]/AsymmetricQuantizer/asymmetric_quantize" -> "38 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]/conv2d";
"37 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "38 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]/conv2d";
"38 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]/conv2d" -> "39 SSD_VGG/MultiOutputSequential[basenet]/ReLU[20]/RELU";
"39 SSD_VGG/MultiOutputSequential[basenet]/ReLU[20]/RELU" -> "40 SSD_VGG/MultiOutputSequential[basenet]/ReLU[20]/AsymmetricQuantizer/asymmetric_quantize";
"40 SSD_VGG/MultiOutputSequential[basenet]/ReLU[20]/AsymmetricQuantizer/asymmetric_quantize" -> "42 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]/conv2d";
"41 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "42 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]/conv2d";
"42 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]/conv2d" -> "43 SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]/RELU";
"43 SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]/RELU" -> "44 SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]/AsymmetricQuantizer/asymmetric_quantize";
"44 SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]/AsymmetricQuantizer/asymmetric_quantize" -> "45 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[23]/max_pool2d";
"44 SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]/AsymmetricQuantizer/asymmetric_quantize" -> "68 SSD_VGG/L2Norm[L2Norm]/div";
"45 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[23]/max_pool2d" -> "46 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[23]/AsymmetricQuantizer/asymmetric_quantize";
"46 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[23]/AsymmetricQuantizer/asymmetric_quantize" -> "48 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/conv2d";
"47 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "48 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/conv2d";
"48 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/conv2d" -> "49 SSD_VGG/MultiOutputSequential[basenet]/ReLU[25]/RELU";
"49 SSD_VGG/MultiOutputSequential[basenet]/ReLU[25]/RELU" -> "50 SSD_VGG/MultiOutputSequential[basenet]/ReLU[25]/AsymmetricQuantizer/asymmetric_quantize";
"50 SSD_VGG/MultiOutputSequential[basenet]/ReLU[25]/AsymmetricQuantizer/asymmetric_quantize" -> "52 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]/conv2d";
"51 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "52 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]/conv2d";
"52 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]/conv2d" -> "53 SSD_VGG/MultiOutputSequential[basenet]/ReLU[27]/RELU";
"53 SSD_VGG/MultiOutputSequential[basenet]/ReLU[27]/RELU" -> "54 SSD_VGG/MultiOutputSequential[basenet]/ReLU[27]/AsymmetricQuantizer/asymmetric_quantize";
"54 SSD_VGG/MultiOutputSequential[basenet]/ReLU[27]/AsymmetricQuantizer/asymmetric_quantize" -> "56 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]/conv2d";
"55 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "56 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]/conv2d";
"56 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]/conv2d" -> "57 SSD_VGG/MultiOutputSequential[basenet]/ReLU[29]/RELU";
"57 SSD_VGG/MultiOutputSequential[basenet]/ReLU[29]/RELU" -> "58 SSD_VGG/MultiOutputSequential[basenet]/ReLU[29]/AsymmetricQuantizer/asymmetric_quantize";
"58 SSD_VGG/MultiOutputSequential[basenet]/ReLU[29]/AsymmetricQuantizer/asymmetric_quantize" -> "59 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[30]/max_pool2d";
"59 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[30]/max_pool2d" -> "61 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[31]/conv2d";
"60 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[31]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "61 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[31]/conv2d";
"61 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[31]/conv2d" -> "62 SSD_VGG/MultiOutputSequential[basenet]/ReLU[32]/RELU";
"62 SSD_VGG/MultiOutputSequential[basenet]/ReLU[32]/RELU" -> "63 SSD_VGG/MultiOutputSequential[basenet]/ReLU[32]/AsymmetricQuantizer/asymmetric_quantize";
"63 SSD_VGG/MultiOutputSequential[basenet]/ReLU[32]/AsymmetricQuantizer/asymmetric_quantize" -> "65 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[33]/conv2d";
"64 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[33]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "65 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[33]/conv2d";
"65 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[33]/conv2d" -> "66 SSD_VGG/MultiOutputSequential[basenet]/ReLU[34]/RELU";
"66 SSD_VGG/MultiOutputSequential[basenet]/ReLU[34]/RELU" -> "67 SSD_VGG/MultiOutputSequential[basenet]/ReLU[34]/AsymmetricQuantizer/asymmetric_quantize";
"67 SSD_VGG/MultiOutputSequential[basenet]/ReLU[34]/AsymmetricQuantizer/asymmetric_quantize" -> "73 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/conv2d";
"67 SSD_VGG/MultiOutputSequential[basenet]/ReLU[34]/AsymmetricQuantizer/asymmetric_quantize" -> "117 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/conv2d";
"67 SSD_VGG/MultiOutputSequential[basenet]/ReLU[34]/AsymmetricQuantizer/asymmetric_quantize" -> "119 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/conv2d";
"68 SSD_VGG/L2Norm[L2Norm]/div" -> "69 SSD_VGG/L2Norm[L2Norm]/AsymmetricQuantizer/asymmetric_quantize";
"69 SSD_VGG/L2Norm[L2Norm]/AsymmetricQuantizer/asymmetric_quantize" -> "70 SSD_VGG/L2Norm[L2Norm]/__rmul__";
"70 SSD_VGG/L2Norm[L2Norm]/__rmul__" -> "71 SSD_VGG/L2Norm[L2Norm]/AsymmetricQuantizer/asymmetric_quantize";
"71 SSD_VGG/L2Norm[L2Norm]/AsymmetricQuantizer/asymmetric_quantize" -> "113 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/conv2d";
"71 SSD_VGG/L2Norm[L2Norm]/AsymmetricQuantizer/asymmetric_quantize" -> "115 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/conv2d";
"72 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "73 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/conv2d";
"73 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/conv2d" -> "74 SSD_VGG/MultiOutputSequential[extras]/ReLU[1]/RELU";
"74 SSD_VGG/MultiOutputSequential[extras]/ReLU[1]/RELU" -> "75 SSD_VGG/MultiOutputSequential[extras]/ReLU[1]/AsymmetricQuantizer/asymmetric_quantize";
"75 SSD_VGG/MultiOutputSequential[extras]/ReLU[1]/AsymmetricQuantizer/asymmetric_quantize" -> "77 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[2]/conv2d";
"76 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "77 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[2]/conv2d";
"77 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[2]/conv2d" -> "78 SSD_VGG/MultiOutputSequential[extras]/ReLU[3]/RELU";
"78 SSD_VGG/MultiOutputSequential[extras]/ReLU[3]/RELU" -> "79 SSD_VGG/MultiOutputSequential[extras]/ReLU[3]/AsymmetricQuantizer/asymmetric_quantize";
"79 SSD_VGG/MultiOutputSequential[extras]/ReLU[3]/AsymmetricQuantizer/asymmetric_quantize" -> "81 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[4]/conv2d";
"79 SSD_VGG/MultiOutputSequential[extras]/ReLU[3]/AsymmetricQuantizer/asymmetric_quantize" -> "121 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/conv2d";
"79 SSD_VGG/MultiOutputSequential[extras]/ReLU[3]/AsymmetricQuantizer/asymmetric_quantize" -> "123 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/conv2d";
"80 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[4]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "81 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[4]/conv2d";
"81 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[4]/conv2d" -> "82 SSD_VGG/MultiOutputSequential[extras]/ReLU[5]/RELU";
"82 SSD_VGG/MultiOutputSequential[extras]/ReLU[5]/RELU" -> "83 SSD_VGG/MultiOutputSequential[extras]/ReLU[5]/AsymmetricQuantizer/asymmetric_quantize";
"83 SSD_VGG/MultiOutputSequential[extras]/ReLU[5]/AsymmetricQuantizer/asymmetric_quantize" -> "85 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/conv2d";
"84 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "85 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/conv2d";
"85 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/conv2d" -> "86 SSD_VGG/MultiOutputSequential[extras]/ReLU[7]/RELU";
"86 SSD_VGG/MultiOutputSequential[extras]/ReLU[7]/RELU" -> "87 SSD_VGG/MultiOutputSequential[extras]/ReLU[7]/AsymmetricQuantizer/asymmetric_quantize";
"87 SSD_VGG/MultiOutputSequential[extras]/ReLU[7]/AsymmetricQuantizer/asymmetric_quantize" -> "89 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[8]/conv2d";
"87 SSD_VGG/MultiOutputSequential[extras]/ReLU[7]/AsymmetricQuantizer/asymmetric_quantize" -> "125 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/conv2d";
"87 SSD_VGG/MultiOutputSequential[extras]/ReLU[7]/AsymmetricQuantizer/asymmetric_quantize" -> "127 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/conv2d";
"88 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[8]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "89 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[8]/conv2d";
"89 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[8]/conv2d" -> "90 SSD_VGG/MultiOutputSequential[extras]/ReLU[9]/RELU";
"90 SSD_VGG/MultiOutputSequential[extras]/ReLU[9]/RELU" -> "91 SSD_VGG/MultiOutputSequential[extras]/ReLU[9]/AsymmetricQuantizer/asymmetric_quantize";
"91 SSD_VGG/MultiOutputSequential[extras]/ReLU[9]/AsymmetricQuantizer/asymmetric_quantize" -> "93 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]/conv2d";
"92 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "93 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]/conv2d";
"93 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]/conv2d" -> "94 SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/RELU";
"94 SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/RELU" -> "95 SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/AsymmetricQuantizer/asymmetric_quantize";
"95 SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/AsymmetricQuantizer/asymmetric_quantize" -> "97 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/conv2d";
"95 SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/AsymmetricQuantizer/asymmetric_quantize" -> "129 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/conv2d";
"95 SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/AsymmetricQuantizer/asymmetric_quantize" -> "131 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/conv2d";
"96 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "97 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/conv2d";
"97 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/conv2d" -> "98 SSD_VGG/MultiOutputSequential[extras]/ReLU[13]/RELU";
"98 SSD_VGG/MultiOutputSequential[extras]/ReLU[13]/RELU" -> "99 SSD_VGG/MultiOutputSequential[extras]/ReLU[13]/AsymmetricQuantizer/asymmetric_quantize";
"99 SSD_VGG/MultiOutputSequential[extras]/ReLU[13]/AsymmetricQuantizer/asymmetric_quantize" -> "101 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[14]/conv2d";
"100 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[14]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "101 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[14]/conv2d";
"101 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[14]/conv2d" -> "102 SSD_VGG/MultiOutputSequential[extras]/ReLU[15]/RELU";
"102 SSD_VGG/MultiOutputSequential[extras]/ReLU[15]/RELU" -> "103 SSD_VGG/MultiOutputSequential[extras]/ReLU[15]/AsymmetricQuantizer/asymmetric_quantize";
"103 SSD_VGG/MultiOutputSequential[extras]/ReLU[15]/AsymmetricQuantizer/asymmetric_quantize" -> "105 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[16]/conv2d";
"103 SSD_VGG/MultiOutputSequential[extras]/ReLU[15]/AsymmetricQuantizer/asymmetric_quantize" -> "133 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/conv2d";
"103 SSD_VGG/MultiOutputSequential[extras]/ReLU[15]/AsymmetricQuantizer/asymmetric_quantize" -> "135 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/conv2d";
"104 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[16]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "105 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[16]/conv2d";
"105 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[16]/conv2d" -> "106 SSD_VGG/MultiOutputSequential[extras]/ReLU[17]/RELU";
"106 SSD_VGG/MultiOutputSequential[extras]/ReLU[17]/RELU" -> "107 SSD_VGG/MultiOutputSequential[extras]/ReLU[17]/AsymmetricQuantizer/asymmetric_quantize";
"107 SSD_VGG/MultiOutputSequential[extras]/ReLU[17]/AsymmetricQuantizer/asymmetric_quantize" -> "109 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/conv2d";
"108 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "109 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/conv2d";
"109 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/conv2d" -> "110 SSD_VGG/MultiOutputSequential[extras]/ReLU[19]/RELU";
"110 SSD_VGG/MultiOutputSequential[extras]/ReLU[19]/RELU" -> "111 SSD_VGG/MultiOutputSequential[extras]/ReLU[19]/AsymmetricQuantizer/asymmetric_quantize";
"111 SSD_VGG/MultiOutputSequential[extras]/ReLU[19]/AsymmetricQuantizer/asymmetric_quantize" -> "137 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[loc]/conv2d";
"111 SSD_VGG/MultiOutputSequential[extras]/ReLU[19]/AsymmetricQuantizer/asymmetric_quantize" -> "139 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]/conv2d";
"112 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "113 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/conv2d";
"113 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/conv2d" -> "140 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"114 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "115 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/conv2d";
"115 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/conv2d" -> "141 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"116 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "117 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/conv2d";
"117 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/conv2d" -> "140 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"118 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "119 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/conv2d";
"119 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/conv2d" -> "141 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"120 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "121 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/conv2d";
"121 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/conv2d" -> "140 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"122 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "123 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/conv2d";
"123 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/conv2d" -> "141 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"124 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "125 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/conv2d";
"125 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/conv2d" -> "140 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"126 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "127 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/conv2d";
"127 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/conv2d" -> "141 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"128 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "129 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/conv2d";
"129 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/conv2d" -> "140 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"130 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "131 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/conv2d";
"131 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/conv2d" -> "141 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"132 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "133 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/conv2d";
"133 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/conv2d" -> "140 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"134 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "135 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/conv2d";
"135 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/conv2d" -> "141 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"136 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "137 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[loc]/conv2d";
"137 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[loc]/conv2d" -> "140 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"138 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "139 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]/conv2d";
"139 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]/conv2d" -> "141 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"141 SSD_VGG/SSDDetectionOutput[detection_head]/cat" -> "142 SSD_VGG/SSDDetectionOutput[detection_head]/softmax";
}
