strict digraph  {
"0 /nncf_model_input" [id=0, label=nncf_model_input, scope="", style=filled, type=nncf_model_input];
"1 AsymmetricQuantizer/asymmetric_quantize" [color=red, id=1, label="4_bit__AFQ_#0", scope=AsymmetricQuantizer, style=filled, type=asymmetric_quantize];
"2 MobileNetV2/Sequential[features]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=2, label="8_bit__WFQ_#0", scope="MobileNetV2/Sequential[features]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"3 MobileNetV2/Sequential[features]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=3, label=conv2d, scope="MobileNetV2/Sequential[features]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"4 MobileNetV2/Sequential[features]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=4, label=batch_norm, scope="MobileNetV2/Sequential[features]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"5 MobileNetV2/Sequential[features]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=5, label=hardtanh, scope="MobileNetV2/Sequential[features]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"6 MobileNetV2/Sequential[features]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=6, label="8_bit__AFQ_#1", scope="MobileNetV2/Sequential[features]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"7 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=7, label="8_bit__WFQ_#1", scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"8 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=purple, id=8, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"9 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=9, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"10 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=10, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"11 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=11, label="4_bit__AFQ_#29", scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"12 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/NNCFConv2d[1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=12, label="8_bit__WFQ_#29", scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/NNCFConv2d[1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"13 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/NNCFConv2d[1]/conv2d" [color=lightblue, id=13, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/NNCFConv2d[1]", style=filled, type=conv2d];
"14 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/BatchNorm2d[2]/batch_norm" [id=14, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/BatchNorm2d[2]", style=filled, type=batch_norm];
"15 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/BatchNorm2d[2]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=15, label="4_bit__AFQ_#28", scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/BatchNorm2d[2]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"16 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=16, label="8_bit__WFQ_#28", scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"17 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=17, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"18 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=18, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"19 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=19, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"20 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=20, label="8_bit__AFQ_#31", scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"21 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=21, label="8_bit__WFQ_#31", scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"22 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=22, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"23 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=23, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"24 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=24, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"25 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=25, label="8_bit__AFQ_#32", scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"26 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=26, label="8_bit__WFQ_#32", scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"27 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=27, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"28 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=28, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"29 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=29, label="8_bit__AFQ_#30", scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"30 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=30, label="8_bit__WFQ_#30", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"31 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=31, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"32 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=32, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"33 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=33, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"34 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=34, label="8_bit__AFQ_#33", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"35 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=35, label="8_bit__WFQ_#33", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"36 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=36, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"37 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=37, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"38 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=38, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"39 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=39, label="4_bit__AFQ_#34", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"40 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=40, label="4_bit__WFQ_#34", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"41 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=41, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"42 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=42, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"43 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=43, label="8_bit__AFQ_#30", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"44 MobileNetV2/Sequential[features]/InvertedResidual[3]/__add__" [id=44, label=__add__, scope="MobileNetV2/Sequential[features]/InvertedResidual[3]", style=filled, type=__add__];
"45 MobileNetV2/Sequential[features]/InvertedResidual[3]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=45, label="4_bit__AFQ_#35", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"46 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=46, label="8_bit__WFQ_#35", scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"47 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=47, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"48 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=48, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"49 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=49, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"50 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=50, label="8_bit__AFQ_#37", scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"51 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=51, label="8_bit__WFQ_#37", scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"52 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=52, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"53 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=53, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"54 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=54, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"55 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=55, label="4_bit__AFQ_#38", scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"56 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=56, label="4_bit__WFQ_#38", scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"57 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=57, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"58 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=58, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"59 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=59, label="4_bit__AFQ_#36", scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"60 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=60, label="8_bit__WFQ_#36", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"61 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=61, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"62 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=62, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"63 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=63, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"64 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=64, label="8_bit__AFQ_#39", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"65 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=65, label="8_bit__WFQ_#39", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"66 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=66, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"67 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=67, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"68 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=68, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"69 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=69, label="8_bit__AFQ_#40", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"70 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=70, label="4_bit__WFQ_#40", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"71 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=71, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"72 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=72, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"73 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=73, label="4_bit__AFQ_#36", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"74 MobileNetV2/Sequential[features]/InvertedResidual[5]/__add__" [id=74, label=__add__, scope="MobileNetV2/Sequential[features]/InvertedResidual[5]", style=filled, type=__add__];
"75 MobileNetV2/Sequential[features]/InvertedResidual[5]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=75, label="8_bit__AFQ_#41", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"76 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=76, label="8_bit__WFQ_#41", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"77 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=77, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"78 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=78, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"79 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=79, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"80 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=80, label="8_bit__AFQ_#42", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"81 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=81, label="8_bit__WFQ_#42", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"82 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=82, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"83 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=83, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"84 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=84, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"85 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=85, label="8_bit__AFQ_#43", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"86 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=86, label="8_bit__WFQ_#43", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"87 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=87, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"88 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=88, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"89 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=89, label="8_bit__AFQ_#41", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"90 MobileNetV2/Sequential[features]/InvertedResidual[6]/__add__" [id=90, label=__add__, scope="MobileNetV2/Sequential[features]/InvertedResidual[6]", style=filled, type=__add__];
"91 MobileNetV2/Sequential[features]/InvertedResidual[6]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=91, label="4_bit__AFQ_#44", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"92 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=92, label="4_bit__WFQ_#44", scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"93 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=93, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"94 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=94, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"95 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=95, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"96 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=96, label="8_bit__AFQ_#46", scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"97 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=97, label="8_bit__WFQ_#46", scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"98 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=98, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"99 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=99, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"100 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=100, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"101 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=101, label="8_bit__AFQ_#47", scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"102 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=102, label="4_bit__WFQ_#47", scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"103 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=103, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"104 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=104, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"105 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=105, label="8_bit__AFQ_#45", scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"106 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=106, label="4_bit__WFQ_#45", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"107 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=107, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"108 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=108, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"109 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=109, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"110 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=110, label="8_bit__AFQ_#48", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"111 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=111, label="8_bit__WFQ_#48", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"112 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=112, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"113 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=113, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"114 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=114, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"115 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=115, label="8_bit__AFQ_#49", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"116 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=116, label="8_bit__WFQ_#49", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"117 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=117, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"118 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=118, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"119 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=119, label="8_bit__AFQ_#45", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"120 MobileNetV2/Sequential[features]/InvertedResidual[8]/__add__" [id=120, label=__add__, scope="MobileNetV2/Sequential[features]/InvertedResidual[8]", style=filled, type=__add__];
"121 MobileNetV2/Sequential[features]/InvertedResidual[8]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=121, label="4_bit__AFQ_#50", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"122 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=122, label="4_bit__WFQ_#50", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"123 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=123, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"124 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=124, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"125 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=125, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"126 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=126, label="8_bit__AFQ_#51", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"127 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=127, label="8_bit__WFQ_#51", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"128 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=128, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"129 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=129, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"130 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=130, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"131 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=131, label="4_bit__AFQ_#52", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"132 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=132, label="8_bit__WFQ_#52", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"133 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=133, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"134 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=134, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"135 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=135, label="4_bit__AFQ_#50", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"136 MobileNetV2/Sequential[features]/InvertedResidual[9]/__add__" [id=136, label=__add__, scope="MobileNetV2/Sequential[features]/InvertedResidual[9]", style=filled, type=__add__];
"137 MobileNetV2/Sequential[features]/InvertedResidual[9]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=137, label="4_bit__AFQ_#3", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"138 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=138, label="8_bit__WFQ_#3", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"139 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=139, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"140 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=140, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"141 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=141, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"142 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=142, label="8_bit__AFQ_#4", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"143 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=purple, id=143, label="2_bit__WFQ_#4", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"144 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=144, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"145 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=145, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"146 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=146, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"147 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=147, label="4_bit__AFQ_#5", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"148 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=148, label="8_bit__WFQ_#5", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"149 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=149, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"150 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=150, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"151 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=151, label="4_bit__AFQ_#3", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"152 MobileNetV2/Sequential[features]/InvertedResidual[10]/__add__" [id=152, label=__add__, scope="MobileNetV2/Sequential[features]/InvertedResidual[10]", style=filled, type=__add__];
"153 MobileNetV2/Sequential[features]/InvertedResidual[10]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=153, label="8_bit__AFQ_#6", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"154 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=154, label="8_bit__WFQ_#6", scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"155 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=155, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"156 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=156, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"157 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=157, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"158 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=158, label="8_bit__AFQ_#8", scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"159 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=159, label="4_bit__WFQ_#8", scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"160 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=160, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"161 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=161, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"162 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=162, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"163 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=163, label="4_bit__AFQ_#9", scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"164 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=164, label="8_bit__WFQ_#9", scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"165 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=165, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"166 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=166, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"167 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=167, label="4_bit__AFQ_#7", scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"168 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=168, label="4_bit__WFQ_#7", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"169 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=169, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"170 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=170, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"171 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=171, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"172 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=172, label="8_bit__AFQ_#10", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"173 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=purple, id=173, label="2_bit__WFQ_#10", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"174 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=174, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"175 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=175, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"176 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=176, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"177 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=177, label="4_bit__AFQ_#11", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"178 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=178, label="8_bit__WFQ_#11", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"179 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=179, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"180 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=180, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"181 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=181, label="4_bit__AFQ_#7", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"182 MobileNetV2/Sequential[features]/InvertedResidual[12]/__add__" [id=182, label=__add__, scope="MobileNetV2/Sequential[features]/InvertedResidual[12]", style=filled, type=__add__];
"183 MobileNetV2/Sequential[features]/InvertedResidual[12]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=183, label="8_bit__AFQ_#12", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"184 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=184, label="8_bit__WFQ_#12", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"185 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=185, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"186 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=186, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"187 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=187, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"188 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=188, label="8_bit__AFQ_#13", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"189 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=189, label="8_bit__WFQ_#13", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"190 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=190, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"191 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=191, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"192 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=192, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"193 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=193, label="8_bit__AFQ_#14", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"194 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=194, label="8_bit__WFQ_#14", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"195 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=195, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"196 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=196, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"197 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=197, label="8_bit__AFQ_#12", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"198 MobileNetV2/Sequential[features]/InvertedResidual[13]/__add__" [id=198, label=__add__, scope="MobileNetV2/Sequential[features]/InvertedResidual[13]", style=filled, type=__add__];
"199 MobileNetV2/Sequential[features]/InvertedResidual[13]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=199, label="8_bit__AFQ_#15", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"200 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=200, label="8_bit__WFQ_#15", scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"201 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=201, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"202 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=202, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"203 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=203, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"204 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=204, label="8_bit__AFQ_#17", scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"205 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=205, label="4_bit__WFQ_#17", scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"206 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=206, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"207 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=207, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"208 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=208, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"209 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=209, label="4_bit__AFQ_#18", scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"210 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=210, label="4_bit__WFQ_#18", scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"211 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=211, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"212 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=212, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"213 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=213, label="8_bit__AFQ_#16", scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"214 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=214, label="8_bit__WFQ_#16", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"215 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=215, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"216 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=216, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"217 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=217, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"218 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=218, label="8_bit__AFQ_#19", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"219 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=219, label="4_bit__WFQ_#19", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"220 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=220, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"221 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=221, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"222 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=222, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"223 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=223, label="4_bit__AFQ_#20", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"224 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=224, label="4_bit__WFQ_#20", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"225 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=225, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"226 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=226, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"227 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=227, label="8_bit__AFQ_#16", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"228 MobileNetV2/Sequential[features]/InvertedResidual[15]/__add__" [id=228, label=__add__, scope="MobileNetV2/Sequential[features]/InvertedResidual[15]", style=filled, type=__add__];
"229 MobileNetV2/Sequential[features]/InvertedResidual[15]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=229, label="4_bit__AFQ_#21", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"230 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=230, label="4_bit__WFQ_#21", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"231 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=231, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"232 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=232, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"233 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=233, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"234 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=234, label="8_bit__AFQ_#22", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"235 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=235, label="4_bit__WFQ_#22", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"236 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=236, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"237 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=237, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"238 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=238, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"239 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=239, label="4_bit__AFQ_#23", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"240 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=purple, id=240, label="2_bit__WFQ_#23", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"241 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=241, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"242 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=242, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"243 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=243, label="4_bit__AFQ_#21", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"244 MobileNetV2/Sequential[features]/InvertedResidual[16]/__add__" [id=244, label=__add__, scope="MobileNetV2/Sequential[features]/InvertedResidual[16]", style=filled, type=__add__];
"245 MobileNetV2/Sequential[features]/InvertedResidual[16]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=245, label="4_bit__AFQ_#24", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"246 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=246, label="8_bit__WFQ_#24", scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"247 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=247, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"248 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=248, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"249 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=249, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"250 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=250, label="8_bit__AFQ_#26", scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"251 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=251, label="8_bit__WFQ_#26", scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"252 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=252, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"253 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=253, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"254 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=254, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"255 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=255, label="8_bit__AFQ_#27", scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"256 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=256, label="8_bit__WFQ_#27", scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"257 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=257, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"258 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=258, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"259 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" [color=red, id=259, label="4_bit__AFQ_#25", scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"260 MobileNetV2/Sequential[features]/ConvBNReLU[18]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=260, label="8_bit__WFQ_#25", scope="MobileNetV2/Sequential[features]/ConvBNReLU[18]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"261 MobileNetV2/Sequential[features]/ConvBNReLU[18]/NNCFConv2d[0]/conv2d" [color=lightblue, id=261, label=conv2d, scope="MobileNetV2/Sequential[features]/ConvBNReLU[18]/NNCFConv2d[0]", style=filled, type=conv2d];
"262 MobileNetV2/Sequential[features]/ConvBNReLU[18]/BatchNorm2d[1]/batch_norm" [id=262, label=batch_norm, scope="MobileNetV2/Sequential[features]/ConvBNReLU[18]/BatchNorm2d[1]", style=filled, type=batch_norm];
"263 MobileNetV2/Sequential[features]/ConvBNReLU[18]/ReLU6[2]/hardtanh" [id=263, label=hardtanh, scope="MobileNetV2/Sequential[features]/ConvBNReLU[18]/ReLU6[2]", style=filled, type=hardtanh];
"264 MobileNetV2/Sequential[features]/ConvBNReLU[18]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=264, label="8_bit__AFQ_#2", scope="MobileNetV2/Sequential[features]/ConvBNReLU[18]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"265 MobileNetV2/adaptive_avg_pool2d" [id=265, label=adaptive_avg_pool2d, scope=MobileNetV2, style=filled, type=adaptive_avg_pool2d];
"266 MobileNetV2/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=266, label="8_bit__AFQ_#53", scope="MobileNetV2/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"267 MobileNetV2/Sequential[classifier]/Dropout[0]/dropout" [id=267, label=dropout, scope="MobileNetV2/Sequential[classifier]/Dropout[0]", style=filled, type=dropout];
"268 MobileNetV2/Sequential[classifier]/NNCFLinear[1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=purple, id=268, label="2_bit__WFQ_#53", scope="MobileNetV2/Sequential[classifier]/NNCFLinear[1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"269 MobileNetV2/Sequential[classifier]/NNCFLinear[1]/linear" [id=269, label=linear, scope="MobileNetV2/Sequential[classifier]/NNCFLinear[1]", style=filled, type=linear];
"0 /nncf_model_input" -> "1 AsymmetricQuantizer/asymmetric_quantize";
"1 AsymmetricQuantizer/asymmetric_quantize" -> "3 MobileNetV2/Sequential[features]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"2 MobileNetV2/Sequential[features]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "3 MobileNetV2/Sequential[features]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"3 MobileNetV2/Sequential[features]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "4 MobileNetV2/Sequential[features]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"4 MobileNetV2/Sequential[features]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "5 MobileNetV2/Sequential[features]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"5 MobileNetV2/Sequential[features]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "6 MobileNetV2/Sequential[features]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"6 MobileNetV2/Sequential[features]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "8 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"7 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "8 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"8 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "9 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"9 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "10 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"10 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "11 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize";
"11 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" -> "13 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/NNCFConv2d[1]/conv2d";
"12 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/NNCFConv2d[1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "13 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/NNCFConv2d[1]/conv2d";
"13 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/NNCFConv2d[1]/conv2d" -> "14 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/BatchNorm2d[2]/batch_norm";
"14 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/BatchNorm2d[2]/batch_norm" -> "15 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/BatchNorm2d[2]/AsymmetricQuantizer/asymmetric_quantize";
"15 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/BatchNorm2d[2]/AsymmetricQuantizer/asymmetric_quantize" -> "17 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"16 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "17 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"17 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "18 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"18 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "19 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"19 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "20 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"20 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "22 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"21 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "22 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"22 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "23 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"23 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "24 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"24 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "25 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize";
"25 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" -> "27 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"26 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "27 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"27 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "28 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"28 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "29 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize";
"29 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" -> "31 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"29 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" -> "44 MobileNetV2/Sequential[features]/InvertedResidual[3]/__add__";
"30 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "31 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"31 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "32 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"32 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "33 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"33 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "34 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"34 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "36 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"35 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "36 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"36 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "37 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"37 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "38 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"38 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "39 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize";
"39 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" -> "41 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"40 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "41 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"41 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "42 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"42 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "43 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize";
"43 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" -> "44 MobileNetV2/Sequential[features]/InvertedResidual[3]/__add__";
"44 MobileNetV2/Sequential[features]/InvertedResidual[3]/__add__" -> "45 MobileNetV2/Sequential[features]/InvertedResidual[3]/AsymmetricQuantizer/asymmetric_quantize";
"45 MobileNetV2/Sequential[features]/InvertedResidual[3]/AsymmetricQuantizer/asymmetric_quantize" -> "47 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"46 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "47 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"47 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "48 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"48 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "49 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"49 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "50 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"50 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "52 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"51 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "52 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"52 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "53 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"53 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "54 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"54 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "55 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize";
"55 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" -> "57 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"56 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "57 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"57 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "58 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"58 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "59 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize";
"59 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" -> "61 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"59 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" -> "74 MobileNetV2/Sequential[features]/InvertedResidual[5]/__add__";
"60 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "61 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"61 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "62 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"62 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "63 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"63 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "64 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"64 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "66 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"65 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "66 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"66 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "67 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"67 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "68 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"68 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "69 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize";
"69 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" -> "71 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"70 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "71 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"71 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "72 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"72 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "73 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize";
"73 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" -> "74 MobileNetV2/Sequential[features]/InvertedResidual[5]/__add__";
"74 MobileNetV2/Sequential[features]/InvertedResidual[5]/__add__" -> "75 MobileNetV2/Sequential[features]/InvertedResidual[5]/AsymmetricQuantizer/asymmetric_quantize";
"75 MobileNetV2/Sequential[features]/InvertedResidual[5]/AsymmetricQuantizer/asymmetric_quantize" -> "77 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"75 MobileNetV2/Sequential[features]/InvertedResidual[5]/AsymmetricQuantizer/asymmetric_quantize" -> "90 MobileNetV2/Sequential[features]/InvertedResidual[6]/__add__";
"76 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "77 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"77 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "78 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"78 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "79 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"79 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "80 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"80 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "82 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"81 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "82 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"82 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "83 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"83 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "84 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"84 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "85 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize";
"85 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" -> "87 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"86 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "87 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"87 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "88 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"88 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "89 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize";
"89 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" -> "90 MobileNetV2/Sequential[features]/InvertedResidual[6]/__add__";
"90 MobileNetV2/Sequential[features]/InvertedResidual[6]/__add__" -> "91 MobileNetV2/Sequential[features]/InvertedResidual[6]/AsymmetricQuantizer/asymmetric_quantize";
"91 MobileNetV2/Sequential[features]/InvertedResidual[6]/AsymmetricQuantizer/asymmetric_quantize" -> "93 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"92 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "93 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"93 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "94 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"94 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "95 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"95 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "96 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"96 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "98 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"97 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "98 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"98 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "99 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"99 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "100 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"100 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "101 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize";
"101 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" -> "103 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"102 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "103 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"103 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "104 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"104 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "105 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize";
"105 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" -> "107 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"105 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" -> "120 MobileNetV2/Sequential[features]/InvertedResidual[8]/__add__";
"106 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "107 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"107 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "108 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"108 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "109 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"109 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "110 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"110 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "112 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"111 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "112 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"112 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "113 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"113 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "114 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"114 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "115 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize";
"115 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" -> "117 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"116 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "117 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"117 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "118 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"118 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "119 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize";
"119 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" -> "120 MobileNetV2/Sequential[features]/InvertedResidual[8]/__add__";
"120 MobileNetV2/Sequential[features]/InvertedResidual[8]/__add__" -> "121 MobileNetV2/Sequential[features]/InvertedResidual[8]/AsymmetricQuantizer/asymmetric_quantize";
"121 MobileNetV2/Sequential[features]/InvertedResidual[8]/AsymmetricQuantizer/asymmetric_quantize" -> "123 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"121 MobileNetV2/Sequential[features]/InvertedResidual[8]/AsymmetricQuantizer/asymmetric_quantize" -> "136 MobileNetV2/Sequential[features]/InvertedResidual[9]/__add__";
"122 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "123 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"123 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "124 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"124 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "125 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"125 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "126 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"126 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "128 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"127 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "128 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"128 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "129 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"129 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "130 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"130 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "131 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize";
"131 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" -> "133 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"132 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "133 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"133 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "134 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"134 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "135 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize";
"135 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" -> "136 MobileNetV2/Sequential[features]/InvertedResidual[9]/__add__";
"136 MobileNetV2/Sequential[features]/InvertedResidual[9]/__add__" -> "137 MobileNetV2/Sequential[features]/InvertedResidual[9]/AsymmetricQuantizer/asymmetric_quantize";
"137 MobileNetV2/Sequential[features]/InvertedResidual[9]/AsymmetricQuantizer/asymmetric_quantize" -> "139 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"137 MobileNetV2/Sequential[features]/InvertedResidual[9]/AsymmetricQuantizer/asymmetric_quantize" -> "152 MobileNetV2/Sequential[features]/InvertedResidual[10]/__add__";
"138 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "139 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"139 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "140 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"140 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "141 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"141 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "142 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"142 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "144 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"143 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "144 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"144 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "145 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"145 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "146 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"146 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "147 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize";
"147 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" -> "149 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"148 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "149 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"149 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "150 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"150 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "151 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize";
"151 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" -> "152 MobileNetV2/Sequential[features]/InvertedResidual[10]/__add__";
"152 MobileNetV2/Sequential[features]/InvertedResidual[10]/__add__" -> "153 MobileNetV2/Sequential[features]/InvertedResidual[10]/AsymmetricQuantizer/asymmetric_quantize";
"153 MobileNetV2/Sequential[features]/InvertedResidual[10]/AsymmetricQuantizer/asymmetric_quantize" -> "155 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"154 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "155 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"155 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "156 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"156 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "157 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"157 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "158 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"158 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "160 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"159 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "160 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"160 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "161 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"161 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "162 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"162 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "163 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize";
"163 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" -> "165 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"164 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "165 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"165 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "166 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"166 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "167 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize";
"167 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" -> "169 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"167 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" -> "182 MobileNetV2/Sequential[features]/InvertedResidual[12]/__add__";
"168 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "169 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"169 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "170 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"170 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "171 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"171 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "172 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"172 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "174 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"173 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "174 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"174 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "175 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"175 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "176 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"176 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "177 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize";
"177 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" -> "179 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"178 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "179 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"179 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "180 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"180 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "181 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize";
"181 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" -> "182 MobileNetV2/Sequential[features]/InvertedResidual[12]/__add__";
"182 MobileNetV2/Sequential[features]/InvertedResidual[12]/__add__" -> "183 MobileNetV2/Sequential[features]/InvertedResidual[12]/AsymmetricQuantizer/asymmetric_quantize";
"183 MobileNetV2/Sequential[features]/InvertedResidual[12]/AsymmetricQuantizer/asymmetric_quantize" -> "185 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"183 MobileNetV2/Sequential[features]/InvertedResidual[12]/AsymmetricQuantizer/asymmetric_quantize" -> "198 MobileNetV2/Sequential[features]/InvertedResidual[13]/__add__";
"184 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "185 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"185 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "186 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"186 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "187 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"187 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "188 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"188 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "190 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"189 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "190 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"190 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "191 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"191 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "192 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"192 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "193 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize";
"193 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" -> "195 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"194 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "195 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"195 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "196 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"196 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "197 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize";
"197 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" -> "198 MobileNetV2/Sequential[features]/InvertedResidual[13]/__add__";
"198 MobileNetV2/Sequential[features]/InvertedResidual[13]/__add__" -> "199 MobileNetV2/Sequential[features]/InvertedResidual[13]/AsymmetricQuantizer/asymmetric_quantize";
"199 MobileNetV2/Sequential[features]/InvertedResidual[13]/AsymmetricQuantizer/asymmetric_quantize" -> "201 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"200 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "201 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"201 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "202 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"202 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "203 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"203 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "204 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"204 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "206 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"205 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "206 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"206 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "207 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"207 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "208 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"208 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "209 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize";
"209 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" -> "211 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"210 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "211 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"211 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "212 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"212 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "213 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize";
"213 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" -> "215 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"213 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" -> "228 MobileNetV2/Sequential[features]/InvertedResidual[15]/__add__";
"214 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "215 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"215 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "216 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"216 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "217 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"217 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "218 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"218 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "220 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"219 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "220 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"220 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "221 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"221 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "222 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"222 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "223 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize";
"223 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" -> "225 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"224 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "225 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"225 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "226 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"226 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "227 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize";
"227 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" -> "228 MobileNetV2/Sequential[features]/InvertedResidual[15]/__add__";
"228 MobileNetV2/Sequential[features]/InvertedResidual[15]/__add__" -> "229 MobileNetV2/Sequential[features]/InvertedResidual[15]/AsymmetricQuantizer/asymmetric_quantize";
"229 MobileNetV2/Sequential[features]/InvertedResidual[15]/AsymmetricQuantizer/asymmetric_quantize" -> "231 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"229 MobileNetV2/Sequential[features]/InvertedResidual[15]/AsymmetricQuantizer/asymmetric_quantize" -> "244 MobileNetV2/Sequential[features]/InvertedResidual[16]/__add__";
"230 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "231 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"231 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "232 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"232 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "233 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"233 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "234 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"234 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "236 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"235 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "236 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"236 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "237 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"237 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "238 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"238 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "239 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize";
"239 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" -> "241 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"240 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "241 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"241 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "242 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"242 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "243 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize";
"243 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" -> "244 MobileNetV2/Sequential[features]/InvertedResidual[16]/__add__";
"244 MobileNetV2/Sequential[features]/InvertedResidual[16]/__add__" -> "245 MobileNetV2/Sequential[features]/InvertedResidual[16]/AsymmetricQuantizer/asymmetric_quantize";
"245 MobileNetV2/Sequential[features]/InvertedResidual[16]/AsymmetricQuantizer/asymmetric_quantize" -> "247 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"246 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "247 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"247 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "248 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"248 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "249 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"249 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "250 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"250 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "252 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"251 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "252 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"252 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "253 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"253 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "254 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"254 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "255 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize";
"255 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/AsymmetricQuantizer/asymmetric_quantize" -> "257 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"256 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "257 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"257 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "258 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"258 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "259 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize";
"259 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/BatchNorm2d[3]/AsymmetricQuantizer/asymmetric_quantize" -> "261 MobileNetV2/Sequential[features]/ConvBNReLU[18]/NNCFConv2d[0]/conv2d";
"260 MobileNetV2/Sequential[features]/ConvBNReLU[18]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "261 MobileNetV2/Sequential[features]/ConvBNReLU[18]/NNCFConv2d[0]/conv2d";
"261 MobileNetV2/Sequential[features]/ConvBNReLU[18]/NNCFConv2d[0]/conv2d" -> "262 MobileNetV2/Sequential[features]/ConvBNReLU[18]/BatchNorm2d[1]/batch_norm";
"262 MobileNetV2/Sequential[features]/ConvBNReLU[18]/BatchNorm2d[1]/batch_norm" -> "263 MobileNetV2/Sequential[features]/ConvBNReLU[18]/ReLU6[2]/hardtanh";
"263 MobileNetV2/Sequential[features]/ConvBNReLU[18]/ReLU6[2]/hardtanh" -> "264 MobileNetV2/Sequential[features]/ConvBNReLU[18]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"264 MobileNetV2/Sequential[features]/ConvBNReLU[18]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "265 MobileNetV2/adaptive_avg_pool2d";
"265 MobileNetV2/adaptive_avg_pool2d" -> "266 MobileNetV2/AsymmetricQuantizer/asymmetric_quantize";
"266 MobileNetV2/AsymmetricQuantizer/asymmetric_quantize" -> "267 MobileNetV2/Sequential[classifier]/Dropout[0]/dropout";
"267 MobileNetV2/Sequential[classifier]/Dropout[0]/dropout" -> "269 MobileNetV2/Sequential[classifier]/NNCFLinear[1]/linear";
"268 MobileNetV2/Sequential[classifier]/NNCFLinear[1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "269 MobileNetV2/Sequential[classifier]/NNCFLinear[1]/linear";
}
