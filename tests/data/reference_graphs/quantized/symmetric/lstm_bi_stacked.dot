strict digraph  {
"0 /nncf_model_input" [id=0, scope="", type=nncf_model_input];
"1 SymmetricQuantizer/symmetric_quantize" [id=1, scope=SymmetricQuantizer, type=symmetric_quantize];
"2 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=2, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"3 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" [id=3, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]", type=linear];
"4 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/SymmetricQuantizer/symmetric_quantize" [id=4, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/SymmetricQuantizer", type=symmetric_quantize];
"5 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=5, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"6 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=6, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"7 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/SymmetricQuantizer/symmetric_quantize" [id=7, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/SymmetricQuantizer", type=symmetric_quantize];
"8 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" [id=8, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__add__];
"9 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=9, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"10 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=10, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"11 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=11, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"12 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=12, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"13 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=13, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"14 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" [id=14, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=tanh];
"15 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=15, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"16 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=16, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"17 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=17, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"18 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=18, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"19 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=19, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"20 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=20, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"21 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=21, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"22 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" [id=22, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__add__];
"23 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=23, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"24 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" [id=24, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=tanh];
"25 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=25, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"26 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=26, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"27 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat" [id=27, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]", type=cat];
"28 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=28, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"29 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" [id=29, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]", type=linear];
"30 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/SymmetricQuantizer/symmetric_quantize" [id=30, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/SymmetricQuantizer", type=symmetric_quantize];
"31 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=31, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"32 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=32, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"33 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/SymmetricQuantizer/symmetric_quantize" [id=33, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/SymmetricQuantizer", type=symmetric_quantize];
"34 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__" [id=34, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=__add__];
"35 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=35, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"36 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid" [id=36, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"37 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=37, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"38 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid" [id=38, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"39 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=39, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"40 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/tanh" [id=40, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=tanh];
"41 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=41, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"42 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid" [id=42, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"43 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=43, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"44 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__" [id=44, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=__mul__];
"45 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=45, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"46 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__" [id=46, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=__mul__];
"47 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=47, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"48 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__" [id=48, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=__add__];
"49 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=49, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"50 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/tanh" [id=50, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=tanh];
"51 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=51, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"52 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__" [id=52, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=__mul__];
"53 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/cat" [id=53, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]", type=cat];
"54 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" [id=54, scope="NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint", type=cat];
"55 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/SymmetricQuantizer/symmetric_quantize" [id=55, scope="NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/SymmetricQuantizer", type=symmetric_quantize];
"56 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=56, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"57 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" [id=57, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]", type=linear];
"58 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/SymmetricQuantizer/symmetric_quantize" [id=58, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/SymmetricQuantizer", type=symmetric_quantize];
"59 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=59, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"60 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=60, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"61 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/SymmetricQuantizer/symmetric_quantize" [id=61, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/SymmetricQuantizer", type=symmetric_quantize];
"62 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__" [id=62, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=__add__];
"63 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=63, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"64 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid" [id=64, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"65 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=65, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"66 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid" [id=66, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"67 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=67, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"68 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/tanh" [id=68, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=tanh];
"69 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=69, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"70 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid" [id=70, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"71 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=71, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"72 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__" [id=72, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=__mul__];
"73 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=73, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"74 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__" [id=74, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=__mul__];
"75 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=75, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"76 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__" [id=76, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=__add__];
"77 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=77, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"78 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/tanh" [id=78, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=tanh];
"79 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=79, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"80 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__" [id=80, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=__mul__];
"81 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/cat" [id=81, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]", type=cat];
"82 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=82, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"83 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" [id=83, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]", type=linear];
"84 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/SymmetricQuantizer/symmetric_quantize" [id=84, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/SymmetricQuantizer", type=symmetric_quantize];
"85 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=85, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"86 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=86, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"87 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/SymmetricQuantizer/symmetric_quantize" [id=87, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/SymmetricQuantizer", type=symmetric_quantize];
"88 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__" [id=88, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=__add__];
"89 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=89, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"90 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid" [id=90, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"91 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=91, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"92 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid" [id=92, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"93 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=93, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"94 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/tanh" [id=94, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=tanh];
"95 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=95, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"96 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid" [id=96, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"97 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=97, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"98 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__" [id=98, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=__mul__];
"99 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=99, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"100 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__" [id=100, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=__mul__];
"101 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=101, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"102 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__" [id=102, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=__add__];
"103 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=103, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"104 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/tanh" [id=104, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=tanh];
"105 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" [id=105, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer", type=symmetric_quantize];
"106 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__" [id=106, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=__mul__];
"107 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/cat" [id=107, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]", type=cat];
"108 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" [id=108, scope="NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint", type=cat];
"109 NNCF_RNN/StackedRNN[rnn_impl]/cat" [id=109, scope="NNCF_RNN/StackedRNN[rnn_impl]", type=cat];
"110 NNCF_RNN/StackedRNN[rnn_impl]/cat" [id=110, scope="NNCF_RNN/StackedRNN[rnn_impl]", type=cat];
"111 /nncf_model_output" [id=111, scope="", type=nncf_model_output];
"112 /nncf_model_output" [id=112, scope="", type=nncf_model_output];
"113 /nncf_model_output" [id=113, scope="", type=nncf_model_output];
"0 /nncf_model_input" -> "1 SymmetricQuantizer/symmetric_quantize";
"1 SymmetricQuantizer/symmetric_quantize" -> "3 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"2 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "3 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"3 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" -> "4 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/SymmetricQuantizer/symmetric_quantize";
"4 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/SymmetricQuantizer/symmetric_quantize" -> "8 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"5 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "6 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"6 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "7 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/SymmetricQuantizer/symmetric_quantize";
"7 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/SymmetricQuantizer/symmetric_quantize" -> "8 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"8 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "9 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"1 SymmetricQuantizer/symmetric_quantize" -> "29 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"9 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "10 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"9 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "12 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"9 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "14 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh";
"9 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "16 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"10 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "11 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"11 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "20 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"12 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "13 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"13 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "18 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"14 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" -> "15 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"15 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "20 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"16 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "17 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"17 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "26 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"18 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "19 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"19 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "22 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"20 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "21 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"21 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "22 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"22 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "23 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"23 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "24 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh";
"24 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" -> "25 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"25 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "26 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"26 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "27 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat";
"27 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat" -> "54 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat";
"28 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "29 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"29 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" -> "30 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/SymmetricQuantizer/symmetric_quantize";
"30 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/SymmetricQuantizer/symmetric_quantize" -> "34 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__";
"31 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "32 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"32 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "33 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/SymmetricQuantizer/symmetric_quantize";
"33 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/SymmetricQuantizer/symmetric_quantize" -> "34 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__";
"34 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__" -> "35 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"35 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "36 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid";
"35 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "38 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid";
"35 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "40 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/tanh";
"35 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "42 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid";
"36 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid" -> "37 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"37 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "46 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__";
"38 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid" -> "39 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"39 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "44 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__";
"40 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/tanh" -> "41 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"41 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "46 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__";
"42 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid" -> "43 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"43 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "52 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__";
"44 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__" -> "45 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"45 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "48 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__";
"46 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__" -> "47 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"47 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "48 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__";
"48 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__" -> "49 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"49 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "50 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/tanh";
"50 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/tanh" -> "51 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"51 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "52 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__";
"52 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__" -> "53 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/cat";
"53 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/cat" -> "54 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat";
"54 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" -> "55 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/SymmetricQuantizer/symmetric_quantize";
"55 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/SymmetricQuantizer/symmetric_quantize" -> "57 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"55 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/SymmetricQuantizer/symmetric_quantize" -> "83 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"56 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "57 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"57 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" -> "58 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/SymmetricQuantizer/symmetric_quantize";
"58 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/SymmetricQuantizer/symmetric_quantize" -> "62 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__";
"59 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "60 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"60 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "61 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/SymmetricQuantizer/symmetric_quantize";
"61 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/SymmetricQuantizer/symmetric_quantize" -> "62 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__";
"62 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__" -> "63 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"63 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "64 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid";
"63 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "66 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid";
"63 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "68 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/tanh";
"63 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "70 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid";
"64 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid" -> "65 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"65 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "74 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__";
"66 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid" -> "67 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"67 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "72 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__";
"68 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/tanh" -> "69 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"69 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "74 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__";
"70 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid" -> "71 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"71 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "80 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__";
"72 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__" -> "73 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"73 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "76 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__";
"74 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__" -> "75 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"75 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "76 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__";
"76 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__" -> "77 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"77 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "78 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/tanh";
"78 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/tanh" -> "79 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"79 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "80 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__";
"80 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__" -> "81 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/cat";
"82 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "83 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"83 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" -> "84 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/SymmetricQuantizer/symmetric_quantize";
"84 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/SymmetricQuantizer/symmetric_quantize" -> "88 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__";
"85 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "86 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"86 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "87 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/SymmetricQuantizer/symmetric_quantize";
"87 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/SymmetricQuantizer/symmetric_quantize" -> "88 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__";
"88 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__" -> "89 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"89 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "90 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid";
"89 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "92 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid";
"89 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "94 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/tanh";
"89 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "96 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid";
"90 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid" -> "91 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"92 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid" -> "93 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"93 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "98 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__";
"94 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/tanh" -> "95 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"96 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid" -> "97 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"98 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__" -> "99 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"22 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "110 NNCF_RNN/StackedRNN[rnn_impl]/cat";
"26 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "109 NNCF_RNN/StackedRNN[rnn_impl]/cat";
"48 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__" -> "110 NNCF_RNN/StackedRNN[rnn_impl]/cat";
"52 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__" -> "109 NNCF_RNN/StackedRNN[rnn_impl]/cat";
"76 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__" -> "110 NNCF_RNN/StackedRNN[rnn_impl]/cat";
"80 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__" -> "109 NNCF_RNN/StackedRNN[rnn_impl]/cat";
"81 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/cat" -> "108 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat";
"91 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "100 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__";
"95 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "100 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__";
"97 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "106 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__";
"99 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "102 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__";
"100 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__" -> "101 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"101 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "102 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__";
"102 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__" -> "103 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"102 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__" -> "110 NNCF_RNN/StackedRNN[rnn_impl]/cat";
"103 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "104 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/tanh";
"104 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/tanh" -> "105 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize";
"105 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize" -> "106 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__";
"106 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__" -> "107 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/cat";
"106 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__" -> "109 NNCF_RNN/StackedRNN[rnn_impl]/cat";
"107 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/cat" -> "108 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat";
"108 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" -> "113 /nncf_model_output";
"109 NNCF_RNN/StackedRNN[rnn_impl]/cat" -> "111 /nncf_model_output";
"110 NNCF_RNN/StackedRNN[rnn_impl]/cat" -> "112 /nncf_model_output";
}
