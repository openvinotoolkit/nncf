strict digraph  {
"0 /nncf_model_input_0" [id=0, scope="", type=nncf_model_input];
"1 SymmetricQuantizer/symmetric_quantize_0" [id=1, scope=SymmetricQuantizer, type=symmetric_quantize];
"2 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=2, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"3 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/conv2d_0" [id=3, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"4 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" [id=4, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"5 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[2]/RELU_0" [id=5, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[2]", type=RELU];
"6 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" [id=6, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[2]/SymmetricQuantizer", type=symmetric_quantize];
"7 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=7, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"8 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/conv2d_0" [id=8, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"9 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" [id=9, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"10 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[5]/RELU_0" [id=10, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[5]", type=RELU];
"11 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" [id=11, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[5]/SymmetricQuantizer", type=symmetric_quantize];
"12 UNet/max_pool2d_0" [id=12, scope=UNet, type=max_pool2d];
"13 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=13, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"14 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/conv2d_0" [id=14, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"15 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" [id=15, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"16 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[2]/RELU_0" [id=16, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[2]", type=RELU];
"17 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" [id=17, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[2]/SymmetricQuantizer", type=symmetric_quantize];
"18 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=18, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"19 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/conv2d_0" [id=19, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"20 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" [id=20, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"21 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[5]/RELU_0" [id=21, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[5]", type=RELU];
"22 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" [id=22, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[5]/SymmetricQuantizer", type=symmetric_quantize];
"23 UNet/max_pool2d_1" [id=23, scope=UNet, type=max_pool2d];
"24 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=24, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"25 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/conv2d_0" [id=25, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"26 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" [id=26, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"27 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[2]/RELU_0" [id=27, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[2]", type=RELU];
"28 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" [id=28, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[2]/SymmetricQuantizer", type=symmetric_quantize];
"29 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=29, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"30 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/conv2d_0" [id=30, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"31 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" [id=31, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"32 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[5]/RELU_0" [id=32, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[5]", type=RELU];
"33 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" [id=33, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[5]/SymmetricQuantizer", type=symmetric_quantize];
"34 UNet/max_pool2d_2" [id=34, scope=UNet, type=max_pool2d];
"35 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=35, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"36 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/conv2d_0" [id=36, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"37 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" [id=37, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"38 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[2]/RELU_0" [id=38, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[2]", type=RELU];
"39 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" [id=39, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[2]/SymmetricQuantizer", type=symmetric_quantize];
"40 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=40, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"41 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/conv2d_0" [id=41, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"42 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" [id=42, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"43 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[5]/RELU_0" [id=43, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[5]", type=RELU];
"44 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" [id=44, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[5]/SymmetricQuantizer", type=symmetric_quantize];
"45 UNet/max_pool2d_3" [id=45, scope=UNet, type=max_pool2d];
"46 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=46, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"47 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/conv2d_0" [id=47, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"48 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" [id=48, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"49 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[2]/RELU_0" [id=49, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[2]", type=RELU];
"50 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" [id=50, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[2]/SymmetricQuantizer", type=symmetric_quantize];
"51 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=51, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"52 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/conv2d_0" [id=52, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"53 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" [id=53, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"54 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[5]/RELU_0" [id=54, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[5]", type=RELU];
"55 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" [id=55, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[5]/SymmetricQuantizer", type=symmetric_quantize];
"56 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=56, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"57 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/conv_transpose2d_0" [id=57, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]", type=conv_transpose2d];
"58 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/SymmetricQuantizer/symmetric_quantize_0" [id=58, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/SymmetricQuantizer", type=symmetric_quantize];
"59 UNet/ModuleList[up_path]/UNetUpBlock[0]/__getitem___0" [id=59, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]", type=__getitem__];
"60 UNet/ModuleList[up_path]/UNetUpBlock[0]/cat_0" [id=60, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]", type=cat];
"61 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=61, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"62 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0" [id=62, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"63 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" [id=63, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"64 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU_0" [id=64, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]", type=RELU];
"65 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" [id=65, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer", type=symmetric_quantize];
"66 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=66, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"67 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0" [id=67, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"68 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" [id=68, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"69 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU_0" [id=69, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]", type=RELU];
"70 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" [id=70, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer", type=symmetric_quantize];
"71 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=71, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"72 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/conv_transpose2d_0" [id=72, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]", type=conv_transpose2d];
"73 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/SymmetricQuantizer/symmetric_quantize_0" [id=73, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/SymmetricQuantizer", type=symmetric_quantize];
"74 UNet/ModuleList[up_path]/UNetUpBlock[1]/__getitem___0" [id=74, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]", type=__getitem__];
"75 UNet/ModuleList[up_path]/UNetUpBlock[1]/cat_0" [id=75, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]", type=cat];
"76 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=76, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"77 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0" [id=77, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"78 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" [id=78, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"79 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU_0" [id=79, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]", type=RELU];
"80 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" [id=80, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer", type=symmetric_quantize];
"81 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=81, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"82 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0" [id=82, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"83 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" [id=83, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"84 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU_0" [id=84, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]", type=RELU];
"85 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" [id=85, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer", type=symmetric_quantize];
"86 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=86, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"87 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/conv_transpose2d_0" [id=87, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]", type=conv_transpose2d];
"88 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/SymmetricQuantizer/symmetric_quantize_0" [id=88, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/SymmetricQuantizer", type=symmetric_quantize];
"89 UNet/ModuleList[up_path]/UNetUpBlock[2]/__getitem___0" [id=89, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]", type=__getitem__];
"90 UNet/ModuleList[up_path]/UNetUpBlock[2]/cat_0" [id=90, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]", type=cat];
"91 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=91, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"92 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0" [id=92, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"93 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" [id=93, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"94 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU_0" [id=94, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]", type=RELU];
"95 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" [id=95, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer", type=symmetric_quantize];
"96 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=96, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"97 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0" [id=97, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"98 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" [id=98, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"99 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU_0" [id=99, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]", type=RELU];
"100 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" [id=100, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer", type=symmetric_quantize];
"101 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=101, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"102 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/conv_transpose2d_0" [id=102, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]", type=conv_transpose2d];
"103 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/SymmetricQuantizer/symmetric_quantize_0" [id=103, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/SymmetricQuantizer", type=symmetric_quantize];
"104 UNet/ModuleList[up_path]/UNetUpBlock[3]/__getitem___0" [id=104, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]", type=__getitem__];
"105 UNet/ModuleList[up_path]/UNetUpBlock[3]/cat_0" [id=105, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]", type=cat];
"106 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=106, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"107 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0" [id=107, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"108 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" [id=108, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"109 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU_0" [id=109, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]", type=RELU];
"110 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" [id=110, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer", type=symmetric_quantize];
"111 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=111, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"112 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0" [id=112, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"113 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" [id=113, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"114 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU_0" [id=114, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]", type=RELU];
"115 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" [id=115, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer", type=symmetric_quantize];
"116 UNet/NNCFConv2d[last]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=116, scope="UNet/NNCFConv2d[last]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"117 UNet/NNCFConv2d[last]/conv2d_0" [id=117, scope="UNet/NNCFConv2d[last]", type=conv2d];
"118 /nncf_model_output_0" [id=118, scope="", type=nncf_model_output];
"0 /nncf_model_input_0" -> "1 SymmetricQuantizer/symmetric_quantize_0";
"1 SymmetricQuantizer/symmetric_quantize_0" -> "3 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"2 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "3 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"3 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/conv2d_0" -> "4 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/BatchNorm2d[1]/batch_norm_0";
"4 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" -> "5 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[2]/RELU_0";
"5 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[2]/RELU_0" -> "6 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0";
"6 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" -> "8 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"7 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "8 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"8 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/conv2d_0" -> "9 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/BatchNorm2d[4]/batch_norm_0";
"9 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" -> "10 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[5]/RELU_0";
"10 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[5]/RELU_0" -> "11 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0";
"11 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "12 UNet/max_pool2d_0";
"12 UNet/max_pool2d_0" -> "14 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"13 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "14 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"14 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/conv2d_0" -> "15 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/BatchNorm2d[1]/batch_norm_0";
"15 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" -> "16 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[2]/RELU_0";
"16 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[2]/RELU_0" -> "17 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0";
"17 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" -> "19 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"18 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "19 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"19 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/conv2d_0" -> "20 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/BatchNorm2d[4]/batch_norm_0";
"20 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" -> "21 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[5]/RELU_0";
"21 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[5]/RELU_0" -> "22 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0";
"22 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "23 UNet/max_pool2d_1";
"22 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "89 UNet/ModuleList[up_path]/UNetUpBlock[2]/__getitem___0";
"23 UNet/max_pool2d_1" -> "25 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"24 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "25 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"25 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/conv2d_0" -> "26 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/BatchNorm2d[1]/batch_norm_0";
"26 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" -> "27 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[2]/RELU_0";
"27 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[2]/RELU_0" -> "28 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0";
"28 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" -> "30 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"29 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "30 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"30 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/conv2d_0" -> "31 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/BatchNorm2d[4]/batch_norm_0";
"31 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" -> "32 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[5]/RELU_0";
"32 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[5]/RELU_0" -> "33 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0";
"33 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "34 UNet/max_pool2d_2";
"33 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "74 UNet/ModuleList[up_path]/UNetUpBlock[1]/__getitem___0";
"34 UNet/max_pool2d_2" -> "36 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"35 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "36 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"36 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/conv2d_0" -> "37 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/BatchNorm2d[1]/batch_norm_0";
"37 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" -> "38 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[2]/RELU_0";
"38 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[2]/RELU_0" -> "39 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0";
"39 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" -> "41 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"40 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "41 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"41 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/conv2d_0" -> "42 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/BatchNorm2d[4]/batch_norm_0";
"42 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" -> "43 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[5]/RELU_0";
"43 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[5]/RELU_0" -> "44 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0";
"44 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "45 UNet/max_pool2d_3";
"44 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "59 UNet/ModuleList[up_path]/UNetUpBlock[0]/__getitem___0";
"45 UNet/max_pool2d_3" -> "47 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"46 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "47 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"47 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/conv2d_0" -> "48 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/BatchNorm2d[1]/batch_norm_0";
"48 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" -> "49 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[2]/RELU_0";
"49 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[2]/RELU_0" -> "50 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0";
"50 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" -> "52 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"51 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "52 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"52 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/conv2d_0" -> "53 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/BatchNorm2d[4]/batch_norm_0";
"53 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" -> "54 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[5]/RELU_0";
"54 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[5]/RELU_0" -> "55 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0";
"55 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "57 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/conv_transpose2d_0";
"56 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "57 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/conv_transpose2d_0";
"57 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/conv_transpose2d_0" -> "58 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/SymmetricQuantizer/symmetric_quantize_0";
"58 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/SymmetricQuantizer/symmetric_quantize_0" -> "60 UNet/ModuleList[up_path]/UNetUpBlock[0]/cat_0";
"59 UNet/ModuleList[up_path]/UNetUpBlock[0]/__getitem___0" -> "60 UNet/ModuleList[up_path]/UNetUpBlock[0]/cat_0";
"60 UNet/ModuleList[up_path]/UNetUpBlock[0]/cat_0" -> "62 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"61 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "62 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"62 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0" -> "63 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm_0";
"63 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" -> "64 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU_0";
"64 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU_0" -> "65 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0";
"65 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" -> "67 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"66 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "67 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"67 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0" -> "68 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm_0";
"68 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" -> "69 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU_0";
"69 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU_0" -> "70 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0";
"70 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "72 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/conv_transpose2d_0";
"71 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "72 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/conv_transpose2d_0";
"72 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/conv_transpose2d_0" -> "73 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/SymmetricQuantizer/symmetric_quantize_0";
"73 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/SymmetricQuantizer/symmetric_quantize_0" -> "75 UNet/ModuleList[up_path]/UNetUpBlock[1]/cat_0";
"74 UNet/ModuleList[up_path]/UNetUpBlock[1]/__getitem___0" -> "75 UNet/ModuleList[up_path]/UNetUpBlock[1]/cat_0";
"75 UNet/ModuleList[up_path]/UNetUpBlock[1]/cat_0" -> "77 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"76 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "77 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"77 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0" -> "78 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm_0";
"78 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" -> "79 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU_0";
"79 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU_0" -> "80 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0";
"80 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" -> "82 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"81 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "82 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"82 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0" -> "83 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm_0";
"83 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" -> "84 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU_0";
"84 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU_0" -> "85 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0";
"85 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "87 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/conv_transpose2d_0";
"86 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "87 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/conv_transpose2d_0";
"87 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/conv_transpose2d_0" -> "88 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/SymmetricQuantizer/symmetric_quantize_0";
"88 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/SymmetricQuantizer/symmetric_quantize_0" -> "90 UNet/ModuleList[up_path]/UNetUpBlock[2]/cat_0";
"89 UNet/ModuleList[up_path]/UNetUpBlock[2]/__getitem___0" -> "90 UNet/ModuleList[up_path]/UNetUpBlock[2]/cat_0";
"90 UNet/ModuleList[up_path]/UNetUpBlock[2]/cat_0" -> "92 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"91 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "92 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"92 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0" -> "93 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm_0";
"93 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" -> "94 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU_0";
"94 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU_0" -> "95 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0";
"95 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" -> "97 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"96 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "97 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"97 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0" -> "98 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm_0";
"98 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" -> "99 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU_0";
"11 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "104 UNet/ModuleList[up_path]/UNetUpBlock[3]/__getitem___0";
"99 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU_0" -> "100 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0";
"100 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "102 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/conv_transpose2d_0";
"101 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "102 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/conv_transpose2d_0";
"102 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/conv_transpose2d_0" -> "103 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/SymmetricQuantizer/symmetric_quantize_0";
"103 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/SymmetricQuantizer/symmetric_quantize_0" -> "105 UNet/ModuleList[up_path]/UNetUpBlock[3]/cat_0";
"104 UNet/ModuleList[up_path]/UNetUpBlock[3]/__getitem___0" -> "105 UNet/ModuleList[up_path]/UNetUpBlock[3]/cat_0";
"105 UNet/ModuleList[up_path]/UNetUpBlock[3]/cat_0" -> "107 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"106 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "107 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0";
"107 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d_0" -> "108 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm_0";
"108 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm_0" -> "109 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU_0";
"109 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU_0" -> "110 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0";
"110 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" -> "112 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"111 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "112 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0";
"112 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d_0" -> "113 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm_0";
"113 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm_0" -> "114 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU_0";
"114 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU_0" -> "115 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0";
"115 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/SymmetricQuantizer/symmetric_quantize_0" -> "117 UNet/NNCFConv2d[last]/conv2d_0";
"116 UNet/NNCFConv2d[last]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "117 UNet/NNCFConv2d[last]/conv2d_0";
"117 UNet/NNCFConv2d[last]/conv2d_0" -> "118 /nncf_model_output_0";
}
