strict digraph  {
"0 /nncf_model_input" [id=0, label="nncf_model_input_#0", scope="", style=filled, type=nncf_model_input];
"1 SymmetricQuantizer/symmetric_quantize" [color=red, id=1, label="AFQ_[B:4 M:S SGN:U PC:N]_#1_G0", scope=SymmetricQuantizer, style=filled, type=symmetric_quantize];
"2 BasicConvTestModel/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=2, label="WFQ_[B:8 M:S SGN:U PC:N]_#2_G0", scope="BasicConvTestModel/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"3 BasicConvTestModel/NNCFConv2d[conv]/conv2d" [color=lightblue, id=3, label="conv2d_k2x2_#3", scope="BasicConvTestModel/NNCFConv2d[conv]", style=filled, type=conv2d];
"4 /nncf_model_output" [id=4, label="nncf_model_output_#4", scope="", style=filled, type=nncf_model_output];
"0 /nncf_model_input" -> "1 SymmetricQuantizer/symmetric_quantize";
"1 SymmetricQuantizer/symmetric_quantize" -> "3 BasicConvTestModel/NNCFConv2d[conv]/conv2d";
"2 BasicConvTestModel/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "3 BasicConvTestModel/NNCFConv2d[conv]/conv2d";
"3 BasicConvTestModel/NNCFConv2d[conv]/conv2d" -> "4 /nncf_model_output";
}
