strict digraph  {
"0 /nncf_model_input" [id=0, label="nncf_model_input_#0", scope="", style=filled, type=nncf_model_input];
"1 SymmetricQuantizer/symmetric_quantize" [color=green, id=1, label="8_bit__AFQ_#1", scope=SymmetricQuantizer, style=filled, type=symmetric_quantize];
"2 MobileNetV2/Sequential[features]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=2, label="8_bit__WFQ_#2", scope="MobileNetV2/Sequential[features]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"3 MobileNetV2/Sequential[features]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=3, label="conv2d_#3", scope="MobileNetV2/Sequential[features]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"4 MobileNetV2/Sequential[features]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=4, label="batch_norm_#4", scope="MobileNetV2/Sequential[features]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"5 MobileNetV2/Sequential[features]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=5, label="hardtanh_#5", scope="MobileNetV2/Sequential[features]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"6 MobileNetV2/Sequential[features]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=6, label="8_bit__AFQ_#6", scope="MobileNetV2/Sequential[features]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"7 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=7, label="8_bit__WFQ_#7", scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"8 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=purple, id=8, label="DW_Conv2d_#8", scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"9 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=9, label="batch_norm_#9", scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"10 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=10, label="hardtanh_#10", scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"11 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=11, label="8_bit__AFQ_#11", scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"12 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/NNCFConv2d[1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=12, label="8_bit__WFQ_#12", scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/NNCFConv2d[1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"13 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/NNCFConv2d[1]/conv2d" [color=lightblue, id=13, label="conv2d_#13", scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/NNCFConv2d[1]", style=filled, type=conv2d];
"14 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/BatchNorm2d[2]/batch_norm" [id=14, label="batch_norm_#14", scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/BatchNorm2d[2]", style=filled, type=batch_norm];
"15 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/BatchNorm2d[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=15, label="8_bit__AFQ_#15", scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/BatchNorm2d[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"16 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=16, label="8_bit__WFQ_#16", scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"17 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=17, label="conv2d_#17", scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"18 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=18, label="batch_norm_#18", scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"19 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=19, label="hardtanh_#19", scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"20 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=20, label="8_bit__AFQ_#20", scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"21 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=21, label="8_bit__WFQ_#21", scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"22 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=22, label="DW_Conv2d_#22", scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"23 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=23, label="batch_norm_#23", scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"24 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=24, label="hardtanh_#24", scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"25 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=25, label="8_bit__AFQ_#25", scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"26 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=26, label="8_bit__WFQ_#26", scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"27 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=27, label="conv2d_#27", scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"28 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=28, label="batch_norm_#28", scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"29 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=green, id=29, label="8_bit__AFQ_#29", scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"30 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=30, label="8_bit__WFQ_#30", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"31 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" [color=green, id=31, label="8_bit__AFQ_#31", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"32 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=32, label="conv2d_#32", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"33 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=33, label="batch_norm_#33", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"34 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=34, label="hardtanh_#34", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"35 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=35, label="8_bit__AFQ_#35", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"36 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=36, label="8_bit__WFQ_#36", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"37 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=37, label="DW_Conv2d_#37", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"38 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=38, label="batch_norm_#38", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"39 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=39, label="hardtanh_#39", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"40 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=40, label="8_bit__AFQ_#40", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"41 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=41, label="8_bit__WFQ_#41", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"42 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=42, label="conv2d_#42", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"43 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=43, label="batch_norm_#43", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"44 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=green, id=44, label="8_bit__AFQ_#44", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"45 MobileNetV2/Sequential[features]/InvertedResidual[3]/__add__" [id=45, label="__add___#45", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]", style=filled, type=__add__];
"46 MobileNetV2/Sequential[features]/InvertedResidual[3]/SymmetricQuantizer/symmetric_quantize" [color=green, id=46, label="8_bit__AFQ_#46", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"47 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=47, label="8_bit__WFQ_#47", scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"48 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=48, label="conv2d_#48", scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"49 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=49, label="batch_norm_#49", scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"50 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=50, label="hardtanh_#50", scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"51 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=51, label="8_bit__AFQ_#51", scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"52 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=52, label="8_bit__WFQ_#52", scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"53 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=53, label="DW_Conv2d_#53", scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"54 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=54, label="batch_norm_#54", scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"55 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=55, label="hardtanh_#55", scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"56 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=56, label="8_bit__AFQ_#56", scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"57 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=57, label="8_bit__WFQ_#57", scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"58 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=58, label="conv2d_#58", scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"59 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=59, label="batch_norm_#59", scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"60 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=green, id=60, label="8_bit__AFQ_#60", scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"61 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=61, label="8_bit__WFQ_#61", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"62 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" [color=green, id=62, label="8_bit__AFQ_#62", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"63 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=63, label="conv2d_#63", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"64 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=64, label="batch_norm_#64", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"65 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=65, label="hardtanh_#65", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"66 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=66, label="8_bit__AFQ_#66", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"67 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=67, label="8_bit__WFQ_#67", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"68 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=68, label="DW_Conv2d_#68", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"69 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=69, label="batch_norm_#69", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"70 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=70, label="hardtanh_#70", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"71 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=71, label="8_bit__AFQ_#71", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"72 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=72, label="8_bit__WFQ_#72", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"73 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=73, label="conv2d_#73", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"74 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=74, label="batch_norm_#74", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"75 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=green, id=75, label="8_bit__AFQ_#75", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"76 MobileNetV2/Sequential[features]/InvertedResidual[5]/__add__" [id=76, label="__add___#76", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]", style=filled, type=__add__];
"77 MobileNetV2/Sequential[features]/InvertedResidual[5]/SymmetricQuantizer/symmetric_quantize" [color=green, id=77, label="8_bit__AFQ_#77", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"78 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=78, label="8_bit__WFQ_#78", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"79 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" [color=green, id=79, label="8_bit__AFQ_#79", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"80 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=80, label="conv2d_#80", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"81 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=81, label="batch_norm_#81", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"82 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=82, label="hardtanh_#82", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"83 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=83, label="8_bit__AFQ_#83", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"84 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=84, label="8_bit__WFQ_#84", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"85 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=85, label="DW_Conv2d_#85", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"86 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=86, label="batch_norm_#86", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"87 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=87, label="hardtanh_#87", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"88 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=red, id=88, label="4_bit__AFQ_#88", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"89 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=89, label="4_bit__WFQ_#89", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"90 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=90, label="conv2d_#90", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"91 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=91, label="batch_norm_#91", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"92 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=green, id=92, label="8_bit__AFQ_#92", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"93 MobileNetV2/Sequential[features]/InvertedResidual[6]/__add__" [id=93, label="__add___#93", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]", style=filled, type=__add__];
"94 MobileNetV2/Sequential[features]/InvertedResidual[6]/SymmetricQuantizer/symmetric_quantize" [color=red, id=94, label="4_bit__AFQ_#94", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"95 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=95, label="4_bit__WFQ_#95", scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"96 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=96, label="conv2d_#96", scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"97 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=97, label="batch_norm_#97", scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"98 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=98, label="hardtanh_#98", scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"99 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=99, label="8_bit__AFQ_#99", scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"100 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=100, label="8_bit__WFQ_#100", scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"101 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=101, label="DW_Conv2d_#101", scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"102 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=102, label="batch_norm_#102", scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"103 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=103, label="hardtanh_#103", scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"104 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=104, label="8_bit__AFQ_#104", scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"105 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=105, label="8_bit__WFQ_#105", scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"106 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=106, label="conv2d_#106", scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"107 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=107, label="batch_norm_#107", scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"108 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=green, id=108, label="8_bit__AFQ_#108", scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"109 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=109, label="8_bit__WFQ_#109", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"110 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" [color=green, id=110, label="8_bit__AFQ_#110", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"111 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=111, label="conv2d_#111", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"112 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=112, label="batch_norm_#112", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"113 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=113, label="hardtanh_#113", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"114 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=114, label="8_bit__AFQ_#114", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"115 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=115, label="8_bit__WFQ_#115", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"116 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=116, label="DW_Conv2d_#116", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"117 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=117, label="batch_norm_#117", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"118 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=118, label="hardtanh_#118", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"119 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=119, label="8_bit__AFQ_#119", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"120 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=120, label="8_bit__WFQ_#120", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"121 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=121, label="conv2d_#121", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"122 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=122, label="batch_norm_#122", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"123 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=green, id=123, label="8_bit__AFQ_#123", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"124 MobileNetV2/Sequential[features]/InvertedResidual[8]/__add__" [id=124, label="__add___#124", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]", style=filled, type=__add__];
"125 MobileNetV2/Sequential[features]/InvertedResidual[8]/SymmetricQuantizer/symmetric_quantize" [color=green, id=125, label="8_bit__AFQ_#125", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"126 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=126, label="8_bit__WFQ_#126", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"127 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" [color=green, id=127, label="8_bit__AFQ_#127", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"128 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=128, label="conv2d_#128", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"129 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=129, label="batch_norm_#129", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"130 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=130, label="hardtanh_#130", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"131 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=131, label="8_bit__AFQ_#131", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"132 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=132, label="8_bit__WFQ_#132", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"133 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=133, label="DW_Conv2d_#133", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"134 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=134, label="batch_norm_#134", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"135 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=135, label="hardtanh_#135", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"136 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=136, label="8_bit__AFQ_#136", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"137 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=137, label="8_bit__WFQ_#137", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"138 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=138, label="conv2d_#138", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"139 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=139, label="batch_norm_#139", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"140 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=green, id=140, label="8_bit__AFQ_#140", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"141 MobileNetV2/Sequential[features]/InvertedResidual[9]/__add__" [id=141, label="__add___#141", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]", style=filled, type=__add__];
"142 MobileNetV2/Sequential[features]/InvertedResidual[9]/SymmetricQuantizer/symmetric_quantize" [color=red, id=142, label="4_bit__AFQ_#142", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"143 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=143, label="8_bit__WFQ_#143", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"144 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" [color=green, id=144, label="8_bit__AFQ_#144", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"145 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=145, label="conv2d_#145", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"146 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=146, label="batch_norm_#146", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"147 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=147, label="hardtanh_#147", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"148 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=148, label="8_bit__AFQ_#148", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"149 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=149, label="8_bit__WFQ_#149", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"150 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=150, label="DW_Conv2d_#150", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"151 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=151, label="batch_norm_#151", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"152 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=152, label="hardtanh_#152", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"153 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=153, label="8_bit__AFQ_#153", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"154 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=154, label="8_bit__WFQ_#154", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"155 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=155, label="conv2d_#155", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"156 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=156, label="batch_norm_#156", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"157 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=red, id=157, label="4_bit__AFQ_#157", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"158 MobileNetV2/Sequential[features]/InvertedResidual[10]/__add__" [id=158, label="__add___#158", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]", style=filled, type=__add__];
"159 MobileNetV2/Sequential[features]/InvertedResidual[10]/SymmetricQuantizer/symmetric_quantize" [color=red, id=159, label="4_bit__AFQ_#159", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"160 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=160, label="4_bit__WFQ_#160", scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"161 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=161, label="conv2d_#161", scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"162 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=162, label="batch_norm_#162", scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"163 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=163, label="hardtanh_#163", scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"164 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=164, label="8_bit__AFQ_#164", scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"165 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=165, label="8_bit__WFQ_#165", scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"166 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=166, label="DW_Conv2d_#166", scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"167 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=167, label="batch_norm_#167", scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"168 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=168, label="hardtanh_#168", scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"169 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=169, label="8_bit__AFQ_#169", scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"170 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=170, label="8_bit__WFQ_#170", scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"171 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=171, label="conv2d_#171", scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"172 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=172, label="batch_norm_#172", scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"173 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=green, id=173, label="8_bit__AFQ_#173", scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"174 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=174, label="8_bit__WFQ_#174", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"175 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" [color=green, id=175, label="8_bit__AFQ_#175", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"176 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=176, label="conv2d_#176", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"177 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=177, label="batch_norm_#177", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"178 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=178, label="hardtanh_#178", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"179 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=179, label="8_bit__AFQ_#179", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"180 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=180, label="8_bit__WFQ_#180", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"181 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=181, label="DW_Conv2d_#181", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"182 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=182, label="batch_norm_#182", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"183 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=183, label="hardtanh_#183", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"184 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=184, label="8_bit__AFQ_#184", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"185 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=185, label="8_bit__WFQ_#185", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"186 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=186, label="conv2d_#186", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"187 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=187, label="batch_norm_#187", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"188 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=green, id=188, label="8_bit__AFQ_#188", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"189 MobileNetV2/Sequential[features]/InvertedResidual[12]/__add__" [id=189, label="__add___#189", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]", style=filled, type=__add__];
"190 MobileNetV2/Sequential[features]/InvertedResidual[12]/SymmetricQuantizer/symmetric_quantize" [color=green, id=190, label="8_bit__AFQ_#190", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"191 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=191, label="8_bit__WFQ_#191", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"192 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" [color=green, id=192, label="8_bit__AFQ_#192", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"193 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=193, label="conv2d_#193", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"194 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=194, label="batch_norm_#194", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"195 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=195, label="hardtanh_#195", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"196 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=196, label="8_bit__AFQ_#196", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"197 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=197, label="8_bit__WFQ_#197", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"198 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=198, label="DW_Conv2d_#198", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"199 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=199, label="batch_norm_#199", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"200 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=200, label="hardtanh_#200", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"201 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=201, label="8_bit__AFQ_#201", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"202 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=202, label="8_bit__WFQ_#202", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"203 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=203, label="conv2d_#203", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"204 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=204, label="batch_norm_#204", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"205 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=green, id=205, label="8_bit__AFQ_#205", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"206 MobileNetV2/Sequential[features]/InvertedResidual[13]/__add__" [id=206, label="__add___#206", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]", style=filled, type=__add__];
"207 MobileNetV2/Sequential[features]/InvertedResidual[13]/SymmetricQuantizer/symmetric_quantize" [color=green, id=207, label="8_bit__AFQ_#207", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"208 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=208, label="8_bit__WFQ_#208", scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"209 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=209, label="conv2d_#209", scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"210 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=210, label="batch_norm_#210", scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"211 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=211, label="hardtanh_#211", scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"212 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=212, label="8_bit__AFQ_#212", scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"213 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=213, label="8_bit__WFQ_#213", scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"214 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=214, label="DW_Conv2d_#214", scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"215 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=215, label="batch_norm_#215", scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"216 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=216, label="hardtanh_#216", scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"217 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=217, label="8_bit__AFQ_#217", scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"218 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=218, label="8_bit__WFQ_#218", scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"219 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=219, label="conv2d_#219", scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"220 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=220, label="batch_norm_#220", scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"221 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=green, id=221, label="8_bit__AFQ_#221", scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"222 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=222, label="8_bit__WFQ_#222", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"223 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" [color=green, id=223, label="8_bit__AFQ_#223", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"224 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=224, label="conv2d_#224", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"225 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=225, label="batch_norm_#225", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"226 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=226, label="hardtanh_#226", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"227 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=227, label="8_bit__AFQ_#227", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"228 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=228, label="8_bit__WFQ_#228", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"229 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=229, label="DW_Conv2d_#229", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"230 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=230, label="batch_norm_#230", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"231 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=231, label="hardtanh_#231", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"232 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=232, label="8_bit__AFQ_#232", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"233 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=233, label="8_bit__WFQ_#233", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"234 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=234, label="conv2d_#234", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"235 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=235, label="batch_norm_#235", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"236 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=green, id=236, label="8_bit__AFQ_#236", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"237 MobileNetV2/Sequential[features]/InvertedResidual[15]/__add__" [id=237, label="__add___#237", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]", style=filled, type=__add__];
"238 MobileNetV2/Sequential[features]/InvertedResidual[15]/SymmetricQuantizer/symmetric_quantize" [color=green, id=238, label="8_bit__AFQ_#238", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"239 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=239, label="8_bit__WFQ_#239", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"240 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" [color=green, id=240, label="8_bit__AFQ_#240", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"241 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=241, label="conv2d_#241", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"242 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=242, label="batch_norm_#242", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"243 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=243, label="hardtanh_#243", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"244 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=244, label="8_bit__AFQ_#244", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"245 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=245, label="8_bit__WFQ_#245", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"246 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=246, label="DW_Conv2d_#246", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"247 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=247, label="batch_norm_#247", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"248 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=248, label="hardtanh_#248", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"249 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=249, label="8_bit__AFQ_#249", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"250 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=250, label="8_bit__WFQ_#250", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"251 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=251, label="conv2d_#251", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"252 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=252, label="batch_norm_#252", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"253 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=green, id=253, label="8_bit__AFQ_#253", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"254 MobileNetV2/Sequential[features]/InvertedResidual[16]/__add__" [id=254, label="__add___#254", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]", style=filled, type=__add__];
"255 MobileNetV2/Sequential[features]/InvertedResidual[16]/SymmetricQuantizer/symmetric_quantize" [color=red, id=255, label="4_bit__AFQ_#255", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"256 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=256, label="4_bit__WFQ_#256", scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"257 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=257, label="conv2d_#257", scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"258 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=258, label="batch_norm_#258", scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"259 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=259, label="hardtanh_#259", scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"260 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=260, label="8_bit__AFQ_#260", scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"261 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=261, label="8_bit__WFQ_#261", scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"262 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=262, label="DW_Conv2d_#262", scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"263 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=263, label="batch_norm_#263", scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"264 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=264, label="hardtanh_#264", scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"265 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=265, label="8_bit__AFQ_#265", scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"266 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=266, label="8_bit__WFQ_#266", scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"267 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=267, label="conv2d_#267", scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"268 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=268, label="batch_norm_#268", scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"269 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=green, id=269, label="8_bit__AFQ_#269", scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"270 MobileNetV2/Sequential[features]/ConvBNReLU[18]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=270, label="8_bit__WFQ_#270", scope="MobileNetV2/Sequential[features]/ConvBNReLU[18]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"271 MobileNetV2/Sequential[features]/ConvBNReLU[18]/NNCFConv2d[0]/conv2d" [color=lightblue, id=271, label="conv2d_#271", scope="MobileNetV2/Sequential[features]/ConvBNReLU[18]/NNCFConv2d[0]", style=filled, type=conv2d];
"272 MobileNetV2/Sequential[features]/ConvBNReLU[18]/BatchNorm2d[1]/batch_norm" [id=272, label="batch_norm_#272", scope="MobileNetV2/Sequential[features]/ConvBNReLU[18]/BatchNorm2d[1]", style=filled, type=batch_norm];
"273 MobileNetV2/Sequential[features]/ConvBNReLU[18]/ReLU6[2]/hardtanh" [id=273, label="hardtanh_#273", scope="MobileNetV2/Sequential[features]/ConvBNReLU[18]/ReLU6[2]", style=filled, type=hardtanh];
"274 MobileNetV2/Sequential[features]/ConvBNReLU[18]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=green, id=274, label="8_bit__AFQ_#274", scope="MobileNetV2/Sequential[features]/ConvBNReLU[18]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"275 MobileNetV2/adaptive_avg_pool2d" [id=275, label="adaptive_avg_pool2d_#275", scope=MobileNetV2, style=filled, type=adaptive_avg_pool2d];
"276 MobileNetV2/SymmetricQuantizer/symmetric_quantize" [color=green, id=276, label="8_bit__AFQ_#276", scope="MobileNetV2/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"277 MobileNetV2/Sequential[classifier]/Dropout[0]/dropout" [id=277, label="dropout_#277", scope="MobileNetV2/Sequential[classifier]/Dropout[0]", style=filled, type=dropout];
"278 MobileNetV2/Sequential[classifier]/NNCFLinear[1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=278, label="8_bit__WFQ_#278", scope="MobileNetV2/Sequential[classifier]/NNCFLinear[1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"279 MobileNetV2/Sequential[classifier]/NNCFLinear[1]/linear" [id=279, label="linear_#279", scope="MobileNetV2/Sequential[classifier]/NNCFLinear[1]", style=filled, type=linear];
"0 /nncf_model_input" -> "1 SymmetricQuantizer/symmetric_quantize";
"1 SymmetricQuantizer/symmetric_quantize" -> "3 MobileNetV2/Sequential[features]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"2 MobileNetV2/Sequential[features]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "3 MobileNetV2/Sequential[features]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"3 MobileNetV2/Sequential[features]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "4 MobileNetV2/Sequential[features]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"4 MobileNetV2/Sequential[features]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "5 MobileNetV2/Sequential[features]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"5 MobileNetV2/Sequential[features]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "6 MobileNetV2/Sequential[features]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"6 MobileNetV2/Sequential[features]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "8 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"7 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "8 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"8 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "9 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"9 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "10 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"10 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "11 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"11 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "13 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/NNCFConv2d[1]/conv2d";
"12 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/NNCFConv2d[1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "13 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/NNCFConv2d[1]/conv2d";
"13 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/NNCFConv2d[1]/conv2d" -> "14 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/BatchNorm2d[2]/batch_norm";
"14 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/BatchNorm2d[2]/batch_norm" -> "15 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/BatchNorm2d[2]/SymmetricQuantizer/symmetric_quantize";
"15 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/BatchNorm2d[2]/SymmetricQuantizer/symmetric_quantize" -> "17 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"16 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "17 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"17 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "18 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"18 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "19 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"19 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "20 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"20 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "22 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"21 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "22 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"22 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "23 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"23 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "24 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"24 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "25 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"25 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "27 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"26 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "27 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"27 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "28 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"28 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "29 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"29 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "31 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize";
"29 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "45 MobileNetV2/Sequential[features]/InvertedResidual[3]/__add__";
"30 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "32 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"31 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" -> "32 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"32 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "33 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"33 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "34 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"34 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "35 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"35 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "37 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"36 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "37 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"37 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "38 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"38 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "39 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"39 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "40 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"40 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "42 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"41 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "42 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"42 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "43 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"43 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "44 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"44 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "45 MobileNetV2/Sequential[features]/InvertedResidual[3]/__add__";
"45 MobileNetV2/Sequential[features]/InvertedResidual[3]/__add__" -> "46 MobileNetV2/Sequential[features]/InvertedResidual[3]/SymmetricQuantizer/symmetric_quantize";
"46 MobileNetV2/Sequential[features]/InvertedResidual[3]/SymmetricQuantizer/symmetric_quantize" -> "48 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"47 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "48 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"48 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "49 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"49 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "50 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"50 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "51 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"51 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "53 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"52 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "53 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"53 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "54 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"54 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "55 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"55 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "56 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"56 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "58 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"57 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "58 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"58 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "59 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"59 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "60 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"60 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "62 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize";
"60 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "76 MobileNetV2/Sequential[features]/InvertedResidual[5]/__add__";
"61 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "63 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"62 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" -> "63 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"63 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "64 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"64 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "65 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"65 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "66 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"66 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "68 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"67 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "68 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"68 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "69 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"69 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "70 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"70 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "71 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"71 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "73 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"72 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "73 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"73 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "74 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"74 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "75 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"75 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "76 MobileNetV2/Sequential[features]/InvertedResidual[5]/__add__";
"76 MobileNetV2/Sequential[features]/InvertedResidual[5]/__add__" -> "77 MobileNetV2/Sequential[features]/InvertedResidual[5]/SymmetricQuantizer/symmetric_quantize";
"77 MobileNetV2/Sequential[features]/InvertedResidual[5]/SymmetricQuantizer/symmetric_quantize" -> "79 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize";
"77 MobileNetV2/Sequential[features]/InvertedResidual[5]/SymmetricQuantizer/symmetric_quantize" -> "93 MobileNetV2/Sequential[features]/InvertedResidual[6]/__add__";
"78 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "80 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"79 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" -> "80 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"80 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "81 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"81 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "82 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"82 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "83 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"83 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "85 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"84 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "85 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"85 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "86 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"86 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "87 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"87 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "88 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"88 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "90 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"89 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "90 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"90 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "91 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"91 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "92 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"92 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "93 MobileNetV2/Sequential[features]/InvertedResidual[6]/__add__";
"93 MobileNetV2/Sequential[features]/InvertedResidual[6]/__add__" -> "94 MobileNetV2/Sequential[features]/InvertedResidual[6]/SymmetricQuantizer/symmetric_quantize";
"94 MobileNetV2/Sequential[features]/InvertedResidual[6]/SymmetricQuantizer/symmetric_quantize" -> "96 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"95 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "96 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"96 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "97 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"97 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "98 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"98 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "99 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"99 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "101 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"100 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "101 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"101 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "102 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"102 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "103 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"103 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "104 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"104 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "106 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"105 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "106 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"106 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "107 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"107 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "108 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"108 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "110 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize";
"108 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "124 MobileNetV2/Sequential[features]/InvertedResidual[8]/__add__";
"109 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "111 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"110 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" -> "111 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"111 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "112 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"112 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "113 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"113 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "114 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"114 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "116 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"115 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "116 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"116 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "117 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"117 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "118 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"118 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "119 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"119 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "121 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"120 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "121 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"121 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "122 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"122 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "123 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"123 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "124 MobileNetV2/Sequential[features]/InvertedResidual[8]/__add__";
"124 MobileNetV2/Sequential[features]/InvertedResidual[8]/__add__" -> "125 MobileNetV2/Sequential[features]/InvertedResidual[8]/SymmetricQuantizer/symmetric_quantize";
"125 MobileNetV2/Sequential[features]/InvertedResidual[8]/SymmetricQuantizer/symmetric_quantize" -> "127 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize";
"125 MobileNetV2/Sequential[features]/InvertedResidual[8]/SymmetricQuantizer/symmetric_quantize" -> "141 MobileNetV2/Sequential[features]/InvertedResidual[9]/__add__";
"126 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "128 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"127 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" -> "128 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"128 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "129 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"129 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "130 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"130 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "131 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"131 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "133 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"132 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "133 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"133 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "134 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"134 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "135 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"135 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "136 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"136 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "138 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"137 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "138 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"138 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "139 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"139 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "140 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"140 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "141 MobileNetV2/Sequential[features]/InvertedResidual[9]/__add__";
"141 MobileNetV2/Sequential[features]/InvertedResidual[9]/__add__" -> "142 MobileNetV2/Sequential[features]/InvertedResidual[9]/SymmetricQuantizer/symmetric_quantize";
"142 MobileNetV2/Sequential[features]/InvertedResidual[9]/SymmetricQuantizer/symmetric_quantize" -> "144 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize";
"142 MobileNetV2/Sequential[features]/InvertedResidual[9]/SymmetricQuantizer/symmetric_quantize" -> "158 MobileNetV2/Sequential[features]/InvertedResidual[10]/__add__";
"143 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "145 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"144 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" -> "145 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"145 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "146 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"146 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "147 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"147 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "148 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"148 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "150 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"149 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "150 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"150 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "151 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"151 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "152 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"152 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "153 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"153 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "155 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"154 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "155 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"155 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "156 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"156 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "157 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"157 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "158 MobileNetV2/Sequential[features]/InvertedResidual[10]/__add__";
"158 MobileNetV2/Sequential[features]/InvertedResidual[10]/__add__" -> "159 MobileNetV2/Sequential[features]/InvertedResidual[10]/SymmetricQuantizer/symmetric_quantize";
"159 MobileNetV2/Sequential[features]/InvertedResidual[10]/SymmetricQuantizer/symmetric_quantize" -> "161 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"160 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "161 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"161 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "162 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"162 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "163 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"163 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "164 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"164 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "166 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"165 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "166 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"166 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "167 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"167 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "168 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"168 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "169 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"169 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "171 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"170 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "171 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"171 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "172 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"172 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "173 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"173 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "175 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize";
"173 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "189 MobileNetV2/Sequential[features]/InvertedResidual[12]/__add__";
"174 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "176 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"175 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" -> "176 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"176 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "177 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"177 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "178 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"178 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "179 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"179 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "181 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"180 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "181 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"181 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "182 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"182 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "183 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"183 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "184 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"184 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "186 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"185 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "186 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"186 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "187 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"187 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "188 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"188 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "189 MobileNetV2/Sequential[features]/InvertedResidual[12]/__add__";
"189 MobileNetV2/Sequential[features]/InvertedResidual[12]/__add__" -> "190 MobileNetV2/Sequential[features]/InvertedResidual[12]/SymmetricQuantizer/symmetric_quantize";
"190 MobileNetV2/Sequential[features]/InvertedResidual[12]/SymmetricQuantizer/symmetric_quantize" -> "192 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize";
"190 MobileNetV2/Sequential[features]/InvertedResidual[12]/SymmetricQuantizer/symmetric_quantize" -> "206 MobileNetV2/Sequential[features]/InvertedResidual[13]/__add__";
"191 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "193 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"192 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" -> "193 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"193 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "194 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"194 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "195 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"195 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "196 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"196 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "198 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"197 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "198 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"198 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "199 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"199 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "200 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"200 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "201 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"201 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "203 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"202 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "203 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"203 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "204 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"204 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "205 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"205 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "206 MobileNetV2/Sequential[features]/InvertedResidual[13]/__add__";
"206 MobileNetV2/Sequential[features]/InvertedResidual[13]/__add__" -> "207 MobileNetV2/Sequential[features]/InvertedResidual[13]/SymmetricQuantizer/symmetric_quantize";
"207 MobileNetV2/Sequential[features]/InvertedResidual[13]/SymmetricQuantizer/symmetric_quantize" -> "209 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"208 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "209 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"209 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "210 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"210 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "211 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"211 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "212 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"212 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "214 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"213 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "214 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"214 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "215 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"215 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "216 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"216 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "217 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"217 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "219 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"218 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "219 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"219 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "220 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"220 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "221 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"221 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "223 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize";
"221 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "237 MobileNetV2/Sequential[features]/InvertedResidual[15]/__add__";
"222 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "224 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"223 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" -> "224 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"224 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "225 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"225 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "226 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"226 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "227 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"227 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "229 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"228 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "229 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"229 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "230 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"230 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "231 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"231 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "232 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"232 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "234 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"233 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "234 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"234 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "235 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"235 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "236 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"236 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "237 MobileNetV2/Sequential[features]/InvertedResidual[15]/__add__";
"237 MobileNetV2/Sequential[features]/InvertedResidual[15]/__add__" -> "238 MobileNetV2/Sequential[features]/InvertedResidual[15]/SymmetricQuantizer/symmetric_quantize";
"238 MobileNetV2/Sequential[features]/InvertedResidual[15]/SymmetricQuantizer/symmetric_quantize" -> "240 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize";
"238 MobileNetV2/Sequential[features]/InvertedResidual[15]/SymmetricQuantizer/symmetric_quantize" -> "254 MobileNetV2/Sequential[features]/InvertedResidual[16]/__add__";
"239 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "241 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"240 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/SymmetricQuantizer/symmetric_quantize" -> "241 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"241 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "242 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"242 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "243 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"243 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "244 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"244 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "246 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"245 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "246 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"246 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "247 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"247 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "248 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"248 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "249 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"249 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "251 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"250 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "251 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"251 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "252 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"252 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "253 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"253 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "254 MobileNetV2/Sequential[features]/InvertedResidual[16]/__add__";
"254 MobileNetV2/Sequential[features]/InvertedResidual[16]/__add__" -> "255 MobileNetV2/Sequential[features]/InvertedResidual[16]/SymmetricQuantizer/symmetric_quantize";
"255 MobileNetV2/Sequential[features]/InvertedResidual[16]/SymmetricQuantizer/symmetric_quantize" -> "257 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"256 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "257 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"257 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "258 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"258 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "259 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"259 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "260 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"260 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "262 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"261 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "262 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"262 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "263 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"263 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "264 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"264 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "265 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"265 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "267 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"266 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "267 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"267 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "268 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"268 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "269 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"269 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "271 MobileNetV2/Sequential[features]/ConvBNReLU[18]/NNCFConv2d[0]/conv2d";
"270 MobileNetV2/Sequential[features]/ConvBNReLU[18]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "271 MobileNetV2/Sequential[features]/ConvBNReLU[18]/NNCFConv2d[0]/conv2d";
"271 MobileNetV2/Sequential[features]/ConvBNReLU[18]/NNCFConv2d[0]/conv2d" -> "272 MobileNetV2/Sequential[features]/ConvBNReLU[18]/BatchNorm2d[1]/batch_norm";
"272 MobileNetV2/Sequential[features]/ConvBNReLU[18]/BatchNorm2d[1]/batch_norm" -> "273 MobileNetV2/Sequential[features]/ConvBNReLU[18]/ReLU6[2]/hardtanh";
"273 MobileNetV2/Sequential[features]/ConvBNReLU[18]/ReLU6[2]/hardtanh" -> "274 MobileNetV2/Sequential[features]/ConvBNReLU[18]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"274 MobileNetV2/Sequential[features]/ConvBNReLU[18]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "275 MobileNetV2/adaptive_avg_pool2d";
"275 MobileNetV2/adaptive_avg_pool2d" -> "276 MobileNetV2/SymmetricQuantizer/symmetric_quantize";
"276 MobileNetV2/SymmetricQuantizer/symmetric_quantize" -> "277 MobileNetV2/Sequential[classifier]/Dropout[0]/dropout";
"277 MobileNetV2/Sequential[classifier]/Dropout[0]/dropout" -> "279 MobileNetV2/Sequential[classifier]/NNCFLinear[1]/linear";
"278 MobileNetV2/Sequential[classifier]/NNCFLinear[1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "279 MobileNetV2/Sequential[classifier]/NNCFLinear[1]/linear";
}
