strict digraph  {
"0 LeNet/Conv2d[conv1]/conv2d_0" [id=0, type=conv2d];
"1 LeNet/RELU_0" [id=1, type=RELU];
"2 LeNet/max_pool2d_0" [id=2, type=max_pool2d];
"3 LeNet/Conv2d[conv2]/conv2d_0" [id=3, type=conv2d];
"4 LeNet/RELU_1" [id=4, type=RELU];
"5 LeNet/max_pool2d_1" [id=5, type=max_pool2d];
"6 LeNet/view_0" [id=6, type=view];
"7 LeNet/Linear[fc1]/linear_0" [id=7, type=linear];
"8 LeNet/RELU_2" [id=8, type=RELU];
"9 LeNet/Linear[fc2]/linear_0" [id=9, type=linear];
"10 LeNet/RELU_3" [id=10, type=RELU];
"11 LeNet/Linear[fc3]/linear_0" [id=11, type=linear];
"0 LeNet/Conv2d[conv1]/conv2d_0" -> "1 LeNet/RELU_0";
"1 LeNet/RELU_0" -> "2 LeNet/max_pool2d_0";
"2 LeNet/max_pool2d_0" -> "3 LeNet/Conv2d[conv2]/conv2d_0";
"3 LeNet/Conv2d[conv2]/conv2d_0" -> "4 LeNet/RELU_1";
"4 LeNet/RELU_1" -> "5 LeNet/max_pool2d_1";
"5 LeNet/max_pool2d_1" -> "6 LeNet/view_0";
"6 LeNet/view_0" -> "7 LeNet/Linear[fc1]/linear_0";
"7 LeNet/Linear[fc1]/linear_0" -> "8 LeNet/RELU_2";
"8 LeNet/RELU_2" -> "9 LeNet/Linear[fc2]/linear_0";
"9 LeNet/Linear[fc2]/linear_0" -> "10 LeNet/RELU_3";
"10 LeNet/RELU_3" -> "11 LeNet/Linear[fc3]/linear_0";
}
