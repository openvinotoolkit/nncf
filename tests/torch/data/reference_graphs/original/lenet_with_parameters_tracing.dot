strict digraph  {
"0 conv1.weight" [id=0, type=nncf_model_const];
"1 conv1.bias" [id=1, type=nncf_model_const];
"2 LeNet/Conv2d[conv1]/conv2d_0" [id=2, type=conv2d];
"3 LeNet/relu_0" [id=3, type=relu];
"4 LeNet/max_pool2d_0" [id=4, type=max_pool2d];
"5 conv2.weight" [id=5, type=nncf_model_const];
"6 conv2.bias" [id=6, type=nncf_model_const];
"7 LeNet/Conv2d[conv2]/conv2d_0" [id=7, type=conv2d];
"8 LeNet/relu_1" [id=8, type=relu];
"9 LeNet/max_pool2d_1" [id=9, type=max_pool2d];
"10 LeNet/view_0" [id=10, type=view];
"11 fc1.weight" [id=11, type=nncf_model_const];
"12 fc1.bias" [id=12, type=nncf_model_const];
"13 LeNet/Linear[fc1]/linear_0" [id=13, type=linear];
"14 LeNet/relu_2" [id=14, type=relu];
"15 fc2.weight" [id=15, type=nncf_model_const];
"16 fc2.bias" [id=16, type=nncf_model_const];
"17 LeNet/Linear[fc2]/linear_0" [id=17, type=linear];
"18 LeNet/relu_3" [id=18, type=relu];
"19 fc3.weight" [id=19, type=nncf_model_const];
"20 fc3.bias" [id=20, type=nncf_model_const];
"21 LeNet/Linear[fc3]/linear_0" [id=21, type=linear];
"0 conv1.weight" -> "2 LeNet/Conv2d[conv1]/conv2d_0";
"1 conv1.bias" -> "2 LeNet/Conv2d[conv1]/conv2d_0";
"2 LeNet/Conv2d[conv1]/conv2d_0" -> "3 LeNet/relu_0";
"3 LeNet/relu_0" -> "4 LeNet/max_pool2d_0";
"4 LeNet/max_pool2d_0" -> "7 LeNet/Conv2d[conv2]/conv2d_0";
"5 conv2.weight" -> "7 LeNet/Conv2d[conv2]/conv2d_0";
"6 conv2.bias" -> "7 LeNet/Conv2d[conv2]/conv2d_0";
"7 LeNet/Conv2d[conv2]/conv2d_0" -> "8 LeNet/relu_1";
"8 LeNet/relu_1" -> "9 LeNet/max_pool2d_1";
"9 LeNet/max_pool2d_1" -> "10 LeNet/view_0";
"10 LeNet/view_0" -> "13 LeNet/Linear[fc1]/linear_0";
"11 fc1.weight" -> "13 LeNet/Linear[fc1]/linear_0";
"12 fc1.bias" -> "13 LeNet/Linear[fc1]/linear_0";
"13 LeNet/Linear[fc1]/linear_0" -> "14 LeNet/relu_2";
"14 LeNet/relu_2" -> "17 LeNet/Linear[fc2]/linear_0";
"15 fc2.weight" -> "17 LeNet/Linear[fc2]/linear_0";
"16 fc2.bias" -> "17 LeNet/Linear[fc2]/linear_0";
"17 LeNet/Linear[fc2]/linear_0" -> "18 LeNet/relu_3";
"18 LeNet/relu_3" -> "21 LeNet/Linear[fc3]/linear_0";
"19 fc3.weight" -> "21 LeNet/Linear[fc3]/linear_0";
"20 fc3.bias" -> "21 LeNet/Linear[fc3]/linear_0";
}
