strict digraph  {
"0 /nncf_model_input_0" [id=0, type=nncf_model_input];
"1 SymmetricQuantizer/symmetric_quantize_0" [id=1, type=symmetric_quantize];
"2 ConvBNLeakyReLU/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=2, type=symmetric_quantize];
"3 ConvBNLeakyReLU/NNCFConv2d[conv]/conv2d_0" [id=3, type=conv2d];
"4 ConvBNLeakyReLU/NNCFBatchNorm2d[bn]/batch_norm_0" [id=4, type=batch_norm];
"5 ConvBNLeakyReLU/leaky_relu_0" [id=5, type=leaky_relu];
"6 /nncf_model_output_0" [id=6, type=nncf_model_output];
"0 /nncf_model_input_0" -> "1 SymmetricQuantizer/symmetric_quantize_0";
"1 SymmetricQuantizer/symmetric_quantize_0" -> "3 ConvBNLeakyReLU/NNCFConv2d[conv]/conv2d_0";
"2 ConvBNLeakyReLU/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "3 ConvBNLeakyReLU/NNCFConv2d[conv]/conv2d_0";
"3 ConvBNLeakyReLU/NNCFConv2d[conv]/conv2d_0" -> "4 ConvBNLeakyReLU/NNCFBatchNorm2d[bn]/batch_norm_0";
"4 ConvBNLeakyReLU/NNCFBatchNorm2d[bn]/batch_norm_0" -> "5 ConvBNLeakyReLU/leaky_relu_0";
"5 ConvBNLeakyReLU/leaky_relu_0" -> "6 /nncf_model_output_0";
}
