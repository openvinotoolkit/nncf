strict digraph  {
"0 /nncf_model_input_0" [id=0, type=nncf_model_input];
"1 SymmetricQuantizer/symmetric_quantize_0" [id=1, type=symmetric_quantize];
"2 ConvRelu6HSwish/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=2, type=symmetric_quantize];
"3 ConvRelu6HSwish/NNCFConv2d[conv]/conv2d_0" [id=3, type=conv2d];
"4 ConvRelu6HSwish/__add___0" [id=4, type=__add__];
"5 ConvRelu6HSwish/relu6_0" [id=5, type=relu6];
"6 ConvRelu6HSwish/__mul___0" [id=6, type=__mul__];
"7 ConvRelu6HSwish/__truediv___0" [id=7, type=__truediv__];
"8 /nncf_model_output_0" [id=8, type=nncf_model_output];
"0 /nncf_model_input_0" -> "1 SymmetricQuantizer/symmetric_quantize_0";
"1 SymmetricQuantizer/symmetric_quantize_0" -> "3 ConvRelu6HSwish/NNCFConv2d[conv]/conv2d_0";
"2 ConvRelu6HSwish/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "3 ConvRelu6HSwish/NNCFConv2d[conv]/conv2d_0";
"3 ConvRelu6HSwish/NNCFConv2d[conv]/conv2d_0" -> "4 ConvRelu6HSwish/__add___0";
"3 ConvRelu6HSwish/NNCFConv2d[conv]/conv2d_0" -> "6 ConvRelu6HSwish/__mul___0";
"4 ConvRelu6HSwish/__add___0" -> "5 ConvRelu6HSwish/relu6_0";
"5 ConvRelu6HSwish/relu6_0" -> "6 ConvRelu6HSwish/__mul___0";
"6 ConvRelu6HSwish/__mul___0" -> "7 ConvRelu6HSwish/__truediv___0";
"7 ConvRelu6HSwish/__truediv___0" -> "8 /nncf_model_output_0";
}
