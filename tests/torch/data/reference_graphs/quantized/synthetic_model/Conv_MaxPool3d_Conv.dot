strict digraph  {
"0 /nncf_model_input_0" [id=0, type=nncf_model_input];
"1 SymmetricQuantizer/symmetric_quantize_0" [id=1, type=symmetric_quantize];
"2 TestModel/NNCFConv3d[_conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=2, type=symmetric_quantize];
"3 TestModel/NNCFConv3d[_conv1]/conv3d_0" [id=3, type=conv3d];
"4 TestModel/NNCFConv3d[_conv1]/SymmetricQuantizer/symmetric_quantize_0" [id=4, type=symmetric_quantize];
"5 TestModel/MaxPool3d[_layer]/max_pool3d_0" [id=5, type=max_pool3d];
"6 TestModel/NNCFConv3d[_conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=6, type=symmetric_quantize];
"7 TestModel/NNCFConv3d[_conv2]/conv3d_0" [id=7, type=conv3d];
"8 /nncf_model_output_0" [id=8, type=nncf_model_output];
"0 /nncf_model_input_0" -> "1 SymmetricQuantizer/symmetric_quantize_0";
"1 SymmetricQuantizer/symmetric_quantize_0" -> "3 TestModel/NNCFConv3d[_conv1]/conv3d_0";
"2 TestModel/NNCFConv3d[_conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "3 TestModel/NNCFConv3d[_conv1]/conv3d_0";
"3 TestModel/NNCFConv3d[_conv1]/conv3d_0" -> "4 TestModel/NNCFConv3d[_conv1]/SymmetricQuantizer/symmetric_quantize_0";
"4 TestModel/NNCFConv3d[_conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "5 TestModel/MaxPool3d[_layer]/max_pool3d_0";
"5 TestModel/MaxPool3d[_layer]/max_pool3d_0" -> "7 TestModel/NNCFConv3d[_conv2]/conv3d_0";
"6 TestModel/NNCFConv3d[_conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "7 TestModel/NNCFConv3d[_conv2]/conv3d_0";
"7 TestModel/NNCFConv3d[_conv2]/conv3d_0" -> "8 /nncf_model_output_0";
}
