strict digraph  {
"0 /nncf_model_input_0" [id=0, type=nncf_model_input];
"1 SymmetricQuantizer/symmetric_quantize_0" [id=1, type=symmetric_quantize];
"2 conv1.weight" [id=2, type=nncf_model_const];
"3 conv1.bias" [id=3, type=nncf_model_const];
"4 LeNet/Conv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" [id=4, type=symmetric_quantize];
"5 LeNet/Conv2d[conv1]/conv2d_0" [id=5, type=conv2d];
"6 LeNet/relu_0" [id=6, type=relu];
"7 LeNet/NNCFNetworkInterface[_nncf]/ModuleDict[external_quantizers]/SymmetricQuantizer[LeNet/relu_0|OUTPUT]/symmetric_quantize_0" [id=7, type=symmetric_quantize];
"8 LeNet/max_pool2d_0" [id=8, type=max_pool2d];
"9 conv2.weight" [id=9, type=nncf_model_const];
"10 conv2.bias" [id=10, type=nncf_model_const];
"11 LeNet/Conv2d[conv2]/SymmetricQuantizer/symmetric_quantize_0" [id=11, type=symmetric_quantize];
"12 LeNet/Conv2d[conv2]/conv2d_0" [id=12, type=conv2d];
"13 LeNet/relu_1" [id=13, type=relu];
"14 LeNet/NNCFNetworkInterface[_nncf]/ModuleDict[external_quantizers]/SymmetricQuantizer[LeNet/relu_1|OUTPUT]/symmetric_quantize_0" [id=14, type=symmetric_quantize];
"15 LeNet/max_pool2d_1" [id=15, type=max_pool2d];
"16 LeNet/view_0" [id=16, type=view];
"17 fc1.weight" [id=17, type=nncf_model_const];
"18 fc1.bias" [id=18, type=nncf_model_const];
"19 LeNet/Linear[fc1]/SymmetricQuantizer/symmetric_quantize_0" [id=19, type=symmetric_quantize];
"20 LeNet/Linear[fc1]/linear_0" [id=20, type=linear];
"21 LeNet/relu_2" [id=21, type=relu];
"22 LeNet/NNCFNetworkInterface[_nncf]/ModuleDict[external_quantizers]/SymmetricQuantizer[LeNet/relu_2|OUTPUT]/symmetric_quantize_0" [id=22, type=symmetric_quantize];
"23 fc2.weight" [id=23, type=nncf_model_const];
"24 fc2.bias" [id=24, type=nncf_model_const];
"25 LeNet/Linear[fc2]/SymmetricQuantizer/symmetric_quantize_0" [id=25, type=symmetric_quantize];
"26 LeNet/Linear[fc2]/linear_0" [id=26, type=linear];
"27 LeNet/relu_3" [id=27, type=relu];
"28 LeNet/NNCFNetworkInterface[_nncf]/ModuleDict[external_quantizers]/SymmetricQuantizer[LeNet/relu_3|OUTPUT]/symmetric_quantize_0" [id=28, type=symmetric_quantize];
"29 fc3.weight" [id=29, type=nncf_model_const];
"30 fc3.bias" [id=30, type=nncf_model_const];
"31 LeNet/Linear[fc3]/SymmetricQuantizer/symmetric_quantize_0" [id=31, type=symmetric_quantize];
"32 LeNet/Linear[fc3]/linear_0" [id=32, type=linear];
"33 /nncf_model_output_0" [id=33, type=nncf_model_output];
"0 /nncf_model_input_0" -> "1 SymmetricQuantizer/symmetric_quantize_0";
"1 SymmetricQuantizer/symmetric_quantize_0" -> "5 LeNet/Conv2d[conv1]/conv2d_0";
"2 conv1.weight" -> "4 LeNet/Conv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"3 conv1.bias" -> "5 LeNet/Conv2d[conv1]/conv2d_0";
"4 LeNet/Conv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "5 LeNet/Conv2d[conv1]/conv2d_0";
"5 LeNet/Conv2d[conv1]/conv2d_0" -> "6 LeNet/relu_0";
"6 LeNet/relu_0" -> "7 LeNet/NNCFNetworkInterface[_nncf]/ModuleDict[external_quantizers]/SymmetricQuantizer[LeNet/relu_0|OUTPUT]/symmetric_quantize_0";
"7 LeNet/NNCFNetworkInterface[_nncf]/ModuleDict[external_quantizers]/SymmetricQuantizer[LeNet/relu_0|OUTPUT]/symmetric_quantize_0" -> "8 LeNet/max_pool2d_0";
"8 LeNet/max_pool2d_0" -> "12 LeNet/Conv2d[conv2]/conv2d_0";
"9 conv2.weight" -> "11 LeNet/Conv2d[conv2]/SymmetricQuantizer/symmetric_quantize_0";
"10 conv2.bias" -> "12 LeNet/Conv2d[conv2]/conv2d_0";
"11 LeNet/Conv2d[conv2]/SymmetricQuantizer/symmetric_quantize_0" -> "12 LeNet/Conv2d[conv2]/conv2d_0";
"12 LeNet/Conv2d[conv2]/conv2d_0" -> "13 LeNet/relu_1";
"13 LeNet/relu_1" -> "14 LeNet/NNCFNetworkInterface[_nncf]/ModuleDict[external_quantizers]/SymmetricQuantizer[LeNet/relu_1|OUTPUT]/symmetric_quantize_0";
"14 LeNet/NNCFNetworkInterface[_nncf]/ModuleDict[external_quantizers]/SymmetricQuantizer[LeNet/relu_1|OUTPUT]/symmetric_quantize_0" -> "15 LeNet/max_pool2d_1";
"15 LeNet/max_pool2d_1" -> "16 LeNet/view_0";
"16 LeNet/view_0" -> "20 LeNet/Linear[fc1]/linear_0";
"17 fc1.weight" -> "19 LeNet/Linear[fc1]/SymmetricQuantizer/symmetric_quantize_0";
"18 fc1.bias" -> "20 LeNet/Linear[fc1]/linear_0";
"19 LeNet/Linear[fc1]/SymmetricQuantizer/symmetric_quantize_0" -> "20 LeNet/Linear[fc1]/linear_0";
"20 LeNet/Linear[fc1]/linear_0" -> "21 LeNet/relu_2";
"21 LeNet/relu_2" -> "22 LeNet/NNCFNetworkInterface[_nncf]/ModuleDict[external_quantizers]/SymmetricQuantizer[LeNet/relu_2|OUTPUT]/symmetric_quantize_0";
"22 LeNet/NNCFNetworkInterface[_nncf]/ModuleDict[external_quantizers]/SymmetricQuantizer[LeNet/relu_2|OUTPUT]/symmetric_quantize_0" -> "26 LeNet/Linear[fc2]/linear_0";
"23 fc2.weight" -> "25 LeNet/Linear[fc2]/SymmetricQuantizer/symmetric_quantize_0";
"24 fc2.bias" -> "26 LeNet/Linear[fc2]/linear_0";
"25 LeNet/Linear[fc2]/SymmetricQuantizer/symmetric_quantize_0" -> "26 LeNet/Linear[fc2]/linear_0";
"26 LeNet/Linear[fc2]/linear_0" -> "27 LeNet/relu_3";
"27 LeNet/relu_3" -> "28 LeNet/NNCFNetworkInterface[_nncf]/ModuleDict[external_quantizers]/SymmetricQuantizer[LeNet/relu_3|OUTPUT]/symmetric_quantize_0";
"28 LeNet/NNCFNetworkInterface[_nncf]/ModuleDict[external_quantizers]/SymmetricQuantizer[LeNet/relu_3|OUTPUT]/symmetric_quantize_0" -> "32 LeNet/Linear[fc3]/linear_0";
"29 fc3.weight" -> "31 LeNet/Linear[fc3]/SymmetricQuantizer/symmetric_quantize_0";
"30 fc3.bias" -> "32 LeNet/Linear[fc3]/linear_0";
"31 LeNet/Linear[fc3]/SymmetricQuantizer/symmetric_quantize_0" -> "32 LeNet/Linear[fc3]/linear_0";
"32 LeNet/Linear[fc3]/linear_0" -> "33 /nncf_model_output_0";
}
