strict digraph  {
"0 /nncf_model_input_0" [id=0, type=nncf_model_input];
"1 EmbeddingModel/type_0" [id=1, type=type];
"2 embedding.weight" [id=2, type=nncf_model_const];
"3 EmbeddingModel/Embedding[embedding]/SymmetricQuantizer/symmetric_quantize_0" [id=3, type=symmetric_quantize];
"4 EmbeddingModel/Embedding[embedding]/embedding_0" [id=4, type=embedding];
"5 matmul.weight" [id=5, type=nncf_model_const];
"6 matmul.bias" [id=6, type=nncf_model_const];
"7 EmbeddingModel/Linear[matmul]/SymmetricQuantizer/symmetric_quantize_0" [id=7, type=symmetric_quantize];
"8 EmbeddingModel/Linear[matmul]/linear_0" [id=8, type=linear];
"9 /nncf_model_output_0" [id=9, type=nncf_model_output];
"0 /nncf_model_input_0" -> "1 EmbeddingModel/type_0";
"1 EmbeddingModel/type_0" -> "4 EmbeddingModel/Embedding[embedding]/embedding_0";
"2 embedding.weight" -> "3 EmbeddingModel/Embedding[embedding]/SymmetricQuantizer/symmetric_quantize_0";
"3 EmbeddingModel/Embedding[embedding]/SymmetricQuantizer/symmetric_quantize_0" -> "4 EmbeddingModel/Embedding[embedding]/embedding_0";
"4 EmbeddingModel/Embedding[embedding]/embedding_0" -> "8 EmbeddingModel/Linear[matmul]/linear_0";
"5 matmul.weight" -> "7 EmbeddingModel/Linear[matmul]/SymmetricQuantizer/symmetric_quantize_0";
"6 matmul.bias" -> "8 EmbeddingModel/Linear[matmul]/linear_0";
"7 EmbeddingModel/Linear[matmul]/SymmetricQuantizer/symmetric_quantize_0" -> "8 EmbeddingModel/Linear[matmul]/linear_0";
"8 EmbeddingModel/Linear[matmul]/linear_0" -> "9 /nncf_model_output_0";
}
