strict digraph  {
"0 /nncf_model_input_0" [id=0, type=nncf_model_input];
"1 SymmetricQuantizer/symmetric_quantize_0" [id=1, type=symmetric_quantize];
"2 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=2, type=calc_rb_binary_mask];
"3 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=3, type=apply_binary_mask];
"4 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=4, type=symmetric_quantize];
"5 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear_0" [id=5, type=linear];
"6 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/SymmetricQuantizer/symmetric_quantize_0" [id=6, type=symmetric_quantize];
"7 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" [id=7, type=calc_rb_binary_mask];
"8 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" [id=8, type=apply_binary_mask];
"9 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" [id=9, type=symmetric_quantize];
"10 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear_0" [id=10, type=linear];
"11 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/SymmetricQuantizer/symmetric_quantize_0" [id=11, type=symmetric_quantize];
"12 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__add___0" [id=12, type=__add__];
"13 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/chunk_0" [id=13, type=chunk];
"14 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/sigmoid_0" [id=14, type=sigmoid];
"15 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize_0" [id=15, type=symmetric_quantize];
"16 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/sigmoid_1" [id=16, type=sigmoid];
"17 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize_1" [id=17, type=symmetric_quantize];
"18 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/tanh_0" [id=18, type=tanh];
"19 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize_2" [id=19, type=symmetric_quantize];
"20 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/sigmoid_2" [id=20, type=sigmoid];
"21 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize_3" [id=21, type=symmetric_quantize];
"22 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__mul___0" [id=22, type=__mul__];
"23 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize_4" [id=23, type=symmetric_quantize];
"24 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__mul___1" [id=24, type=__mul__];
"25 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize_5" [id=25, type=symmetric_quantize];
"26 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__add___1" [id=26, type=__add__];
"27 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/tanh_1" [id=27, type=tanh];
"28 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize_6" [id=28, type=symmetric_quantize];
"29 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__mul___2" [id=29, type=__mul__];
"30 /nncf_model_output_0" [id=30, type=nncf_model_output];
"31 /nncf_model_output_1" [id=31, type=nncf_model_output];
"0 /nncf_model_input_0" -> "1 SymmetricQuantizer/symmetric_quantize_0";
"1 SymmetricQuantizer/symmetric_quantize_0" -> "5 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear_0";
"2 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "3 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"3 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "4 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"4 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "5 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear_0";
"5 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear_0" -> "6 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/SymmetricQuantizer/symmetric_quantize_0";
"6 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/SymmetricQuantizer/symmetric_quantize_0" -> "12 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__add___0";
"7 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask_0" -> "8 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0";
"8 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask_0" -> "9 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0";
"9 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "10 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear_0";
"10 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear_0" -> "11 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/SymmetricQuantizer/symmetric_quantize_0";
"11 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/SymmetricQuantizer/symmetric_quantize_0" -> "12 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__add___0";
"12 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__add___0" -> "13 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/chunk_0";
"13 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/chunk_0" -> "14 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/sigmoid_0";
"13 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/chunk_0" -> "16 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/sigmoid_1";
"13 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/chunk_0" -> "18 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/tanh_0";
"13 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/chunk_0" -> "20 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/sigmoid_2";
"14 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/sigmoid_0" -> "15 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize_0";
"15 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize_0" -> "24 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__mul___1";
"16 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/sigmoid_1" -> "17 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize_1";
"17 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize_1" -> "22 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__mul___0";
"18 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/tanh_0" -> "19 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize_2";
"19 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize_2" -> "24 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__mul___1";
"20 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/sigmoid_2" -> "21 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize_3";
"21 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize_3" -> "29 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__mul___2";
"22 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__mul___0" -> "23 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize_4";
"23 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize_4" -> "26 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__add___1";
"24 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__mul___1" -> "25 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize_5";
"25 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize_5" -> "26 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__add___1";
"26 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__add___1" -> "27 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/tanh_1";
"26 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__add___1" -> "31 /nncf_model_output_1";
"27 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/tanh_1" -> "28 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize_6";
"28 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/SymmetricQuantizer/symmetric_quantize_6" -> "29 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__mul___2";
"29 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__mul___2" -> "30 /nncf_model_output_0";
}
