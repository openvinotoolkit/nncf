strict digraph  {
"0 /nncf_model_input_0" [id=0, type=nncf_model_input];
"1 /nncf_model_input_1" [id=1, type=nncf_model_input];
"2 SmallModel/NNCFConv2d[conv_cubic1]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" [id=2, type=apply_binary_mask];
"3 SmallModel/NNCFConv2d[conv_cubic1]/conv2d_0" [id=3, type=conv2d];
"4 SmallModel/ReLU[relu]/relu_0" [id=4, type=relu];
"5 SmallModel/NNCFConv2d[conv_cubic2]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" [id=5, type=apply_binary_mask];
"6 SmallModel/NNCFConv2d[conv_cubic2]/conv2d_0" [id=6, type=conv2d];
"7 SmallModel/Sigmoid[sigmoid]/sigmoid_0" [id=7, type=sigmoid];
"8 SmallModel/NNCFConv2d[conv_input]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" [id=8, type=apply_binary_mask];
"9 SmallModel/NNCFConv2d[conv_input]/conv2d_0" [id=9, type=conv2d];
"10 SmallModel/ReLU[relu]/relu_1" [id=10, type=relu];
"11 SmallModel/SmallBlock[residual1]/ReLU[relu]/relu_0" [id=11, type=relu];
"12 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" [id=12, type=apply_binary_mask];
"13 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/conv2d_0" [id=13, type=conv2d];
"14 SmallModel/SmallBlock[residual1]/ReLU[relu]/relu_1" [id=14, type=relu];
"15 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" [id=15, type=apply_binary_mask];
"16 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/conv2d_0" [id=16, type=conv2d];
"17 SmallModel/SmallBlock[residual1]/add_0" [id=17, type=add];
"18 SmallModel/SmallBlock[residual2]/ReLU[relu]/relu_0" [id=18, type=relu];
"19 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" [id=19, type=apply_binary_mask];
"20 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/conv2d_0" [id=20, type=conv2d];
"21 SmallModel/SmallBlock[residual2]/ReLU[relu]/relu_1" [id=21, type=relu];
"22 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" [id=22, type=apply_binary_mask];
"23 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/conv2d_0" [id=23, type=conv2d];
"24 SmallModel/SmallBlock[residual2]/add_0" [id=24, type=add];
"25 SmallModel/SmallBlock[residual3]/ReLU[relu]/relu_0" [id=25, type=relu];
"26 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" [id=26, type=apply_binary_mask];
"27 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/conv2d_0" [id=27, type=conv2d];
"28 SmallModel/SmallBlock[residual3]/ReLU[relu]/relu_1" [id=28, type=relu];
"29 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" [id=29, type=apply_binary_mask];
"30 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/conv2d_0" [id=30, type=conv2d];
"31 SmallModel/SmallBlock[residual3]/add_0" [id=31, type=add];
"32 SmallModel/SmallBlock[residual4]/ReLU[relu]/relu_0" [id=32, type=relu];
"33 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" [id=33, type=apply_binary_mask];
"34 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/conv2d_0" [id=34, type=conv2d];
"35 SmallModel/SmallBlock[residual4]/ReLU[relu]/relu_1" [id=35, type=relu];
"36 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" [id=36, type=apply_binary_mask];
"37 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/conv2d_0" [id=37, type=conv2d];
"38 SmallModel/SmallBlock[residual4]/add_0" [id=38, type=add];
"39 SmallModel/cat_0" [id=39, type=cat];
"40 SmallModel/NNCFConv2d[conv_mid]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" [id=40, type=apply_binary_mask];
"41 SmallModel/NNCFConv2d[conv_mid]/conv2d_0" [id=41, type=conv2d];
"42 SmallModel/ReLU[relu]/relu_2" [id=42, type=relu];
"43 SmallModel/Sequential[upscale]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" [id=43, type=apply_binary_mask];
"44 SmallModel/Sequential[upscale]/NNCFConv2d[0]/conv2d_0" [id=44, type=conv2d];
"45 SmallModel/Sequential[upscale]/PixelShuffle[1]/pixel_shuffle_0" [id=45, type=pixel_shuffle];
"46 SmallModel/Sequential[upscale]/ReLU[2]/relu__0" [id=46, type=relu_];
"47 SmallModel/NNCFConv2d[conv_output]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" [id=47, type=apply_binary_mask];
"48 SmallModel/NNCFConv2d[conv_output]/conv2d_0" [id=48, type=conv2d];
"49 SmallModel/__mul___0" [id=49, type=__mul__];
"50 SmallModel/add_0" [id=50, type=add];
"51 /nncf_model_output_0" [id=51, type=nncf_model_output];
"0 /nncf_model_input_0" -> "9 SmallModel/NNCFConv2d[conv_input]/conv2d_0";
"1 /nncf_model_input_1" -> "3 SmallModel/NNCFConv2d[conv_cubic1]/conv2d_0";
"2 SmallModel/NNCFConv2d[conv_cubic1]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" -> "3 SmallModel/NNCFConv2d[conv_cubic1]/conv2d_0";
"3 SmallModel/NNCFConv2d[conv_cubic1]/conv2d_0" -> "4 SmallModel/ReLU[relu]/relu_0";
"4 SmallModel/ReLU[relu]/relu_0" -> "6 SmallModel/NNCFConv2d[conv_cubic2]/conv2d_0";
"5 SmallModel/NNCFConv2d[conv_cubic2]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" -> "6 SmallModel/NNCFConv2d[conv_cubic2]/conv2d_0";
"6 SmallModel/NNCFConv2d[conv_cubic2]/conv2d_0" -> "7 SmallModel/Sigmoid[sigmoid]/sigmoid_0";
"8 SmallModel/NNCFConv2d[conv_input]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" -> "9 SmallModel/NNCFConv2d[conv_input]/conv2d_0";
"1 /nncf_model_input_1" -> "50 SmallModel/add_0";
"7 SmallModel/Sigmoid[sigmoid]/sigmoid_0" -> "49 SmallModel/__mul___0";
"9 SmallModel/NNCFConv2d[conv_input]/conv2d_0" -> "10 SmallModel/ReLU[relu]/relu_1";
"10 SmallModel/ReLU[relu]/relu_1" -> "11 SmallModel/SmallBlock[residual1]/ReLU[relu]/relu_0";
"10 SmallModel/ReLU[relu]/relu_1" -> "17 SmallModel/SmallBlock[residual1]/add_0";
"10 SmallModel/ReLU[relu]/relu_1" -> "39 SmallModel/cat_0";
"11 SmallModel/SmallBlock[residual1]/ReLU[relu]/relu_0" -> "13 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/conv2d_0";
"12 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" -> "13 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/conv2d_0";
"13 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv1]/conv2d_0" -> "14 SmallModel/SmallBlock[residual1]/ReLU[relu]/relu_1";
"14 SmallModel/SmallBlock[residual1]/ReLU[relu]/relu_1" -> "16 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/conv2d_0";
"15 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" -> "16 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/conv2d_0";
"16 SmallModel/SmallBlock[residual1]/NNCFConv2d[conv2]/conv2d_0" -> "17 SmallModel/SmallBlock[residual1]/add_0";
"17 SmallModel/SmallBlock[residual1]/add_0" -> "18 SmallModel/SmallBlock[residual2]/ReLU[relu]/relu_0";
"17 SmallModel/SmallBlock[residual1]/add_0" -> "24 SmallModel/SmallBlock[residual2]/add_0";
"17 SmallModel/SmallBlock[residual1]/add_0" -> "39 SmallModel/cat_0";
"18 SmallModel/SmallBlock[residual2]/ReLU[relu]/relu_0" -> "20 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/conv2d_0";
"19 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" -> "20 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/conv2d_0";
"20 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv1]/conv2d_0" -> "21 SmallModel/SmallBlock[residual2]/ReLU[relu]/relu_1";
"21 SmallModel/SmallBlock[residual2]/ReLU[relu]/relu_1" -> "23 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/conv2d_0";
"22 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" -> "23 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/conv2d_0";
"23 SmallModel/SmallBlock[residual2]/NNCFConv2d[conv2]/conv2d_0" -> "24 SmallModel/SmallBlock[residual2]/add_0";
"24 SmallModel/SmallBlock[residual2]/add_0" -> "25 SmallModel/SmallBlock[residual3]/ReLU[relu]/relu_0";
"24 SmallModel/SmallBlock[residual2]/add_0" -> "31 SmallModel/SmallBlock[residual3]/add_0";
"24 SmallModel/SmallBlock[residual2]/add_0" -> "39 SmallModel/cat_0";
"25 SmallModel/SmallBlock[residual3]/ReLU[relu]/relu_0" -> "27 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/conv2d_0";
"26 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" -> "27 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/conv2d_0";
"27 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv1]/conv2d_0" -> "28 SmallModel/SmallBlock[residual3]/ReLU[relu]/relu_1";
"28 SmallModel/SmallBlock[residual3]/ReLU[relu]/relu_1" -> "30 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/conv2d_0";
"29 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" -> "30 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/conv2d_0";
"30 SmallModel/SmallBlock[residual3]/NNCFConv2d[conv2]/conv2d_0" -> "31 SmallModel/SmallBlock[residual3]/add_0";
"31 SmallModel/SmallBlock[residual3]/add_0" -> "32 SmallModel/SmallBlock[residual4]/ReLU[relu]/relu_0";
"31 SmallModel/SmallBlock[residual3]/add_0" -> "38 SmallModel/SmallBlock[residual4]/add_0";
"31 SmallModel/SmallBlock[residual3]/add_0" -> "39 SmallModel/cat_0";
"32 SmallModel/SmallBlock[residual4]/ReLU[relu]/relu_0" -> "34 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/conv2d_0";
"33 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" -> "34 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/conv2d_0";
"34 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv1]/conv2d_0" -> "35 SmallModel/SmallBlock[residual4]/ReLU[relu]/relu_1";
"35 SmallModel/SmallBlock[residual4]/ReLU[relu]/relu_1" -> "37 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/conv2d_0";
"36 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" -> "37 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/conv2d_0";
"37 SmallModel/SmallBlock[residual4]/NNCFConv2d[conv2]/conv2d_0" -> "38 SmallModel/SmallBlock[residual4]/add_0";
"38 SmallModel/SmallBlock[residual4]/add_0" -> "39 SmallModel/cat_0";
"39 SmallModel/cat_0" -> "41 SmallModel/NNCFConv2d[conv_mid]/conv2d_0";
"40 SmallModel/NNCFConv2d[conv_mid]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" -> "41 SmallModel/NNCFConv2d[conv_mid]/conv2d_0";
"41 SmallModel/NNCFConv2d[conv_mid]/conv2d_0" -> "42 SmallModel/ReLU[relu]/relu_2";
"42 SmallModel/ReLU[relu]/relu_2" -> "44 SmallModel/Sequential[upscale]/NNCFConv2d[0]/conv2d_0";
"43 SmallModel/Sequential[upscale]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" -> "44 SmallModel/Sequential[upscale]/NNCFConv2d[0]/conv2d_0";
"44 SmallModel/Sequential[upscale]/NNCFConv2d[0]/conv2d_0" -> "45 SmallModel/Sequential[upscale]/PixelShuffle[1]/pixel_shuffle_0";
"45 SmallModel/Sequential[upscale]/PixelShuffle[1]/pixel_shuffle_0" -> "46 SmallModel/Sequential[upscale]/ReLU[2]/relu__0";
"46 SmallModel/Sequential[upscale]/ReLU[2]/relu__0" -> "48 SmallModel/NNCFConv2d[conv_output]/conv2d_0";
"47 SmallModel/NNCFConv2d[conv_output]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" -> "48 SmallModel/NNCFConv2d[conv_output]/conv2d_0";
"48 SmallModel/NNCFConv2d[conv_output]/conv2d_0" -> "49 SmallModel/__mul___0";
"49 SmallModel/__mul___0" -> "50 SmallModel/add_0";
"50 SmallModel/add_0" -> "51 /nncf_model_output_0";
}
