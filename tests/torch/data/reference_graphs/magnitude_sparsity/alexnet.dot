strict digraph  {
"0 /nncf_model_input_0" [id=0, type=nncf_model_input];
"1 AlexNet/Sequential[features]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" [id=1, type=apply_binary_mask];
"2 AlexNet/Sequential[features]/NNCFConv2d[0]/conv2d_0" [id=2, type=conv2d];
"3 AlexNet/Sequential[features]/ReLU[1]/relu__0" [id=3, type=relu_];
"4 AlexNet/Sequential[features]/MaxPool2d[2]/max_pool2d_0" [id=4, type=max_pool2d];
"5 AlexNet/Sequential[features]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" [id=5, type=apply_binary_mask];
"6 AlexNet/Sequential[features]/NNCFConv2d[3]/conv2d_0" [id=6, type=conv2d];
"7 AlexNet/Sequential[features]/ReLU[4]/relu__0" [id=7, type=relu_];
"8 AlexNet/Sequential[features]/MaxPool2d[5]/max_pool2d_0" [id=8, type=max_pool2d];
"9 AlexNet/Sequential[features]/NNCFConv2d[6]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" [id=9, type=apply_binary_mask];
"10 AlexNet/Sequential[features]/NNCFConv2d[6]/conv2d_0" [id=10, type=conv2d];
"11 AlexNet/Sequential[features]/ReLU[7]/relu__0" [id=11, type=relu_];
"12 AlexNet/Sequential[features]/NNCFConv2d[8]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" [id=12, type=apply_binary_mask];
"13 AlexNet/Sequential[features]/NNCFConv2d[8]/conv2d_0" [id=13, type=conv2d];
"14 AlexNet/Sequential[features]/ReLU[9]/relu__0" [id=14, type=relu_];
"15 AlexNet/Sequential[features]/NNCFConv2d[10]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" [id=15, type=apply_binary_mask];
"16 AlexNet/Sequential[features]/NNCFConv2d[10]/conv2d_0" [id=16, type=conv2d];
"17 AlexNet/Sequential[features]/ReLU[11]/relu__0" [id=17, type=relu_];
"18 AlexNet/Sequential[features]/MaxPool2d[12]/max_pool2d_0" [id=18, type=max_pool2d];
"19 AlexNet/view_0" [id=19, type=view];
"20 AlexNet/Sequential[classifier]/Dropout[0]/dropout_0" [id=20, type=dropout];
"21 AlexNet/Sequential[classifier]/NNCFLinear[1]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" [id=21, type=apply_binary_mask];
"22 AlexNet/Sequential[classifier]/NNCFLinear[1]/linear_0" [id=22, type=linear];
"23 AlexNet/Sequential[classifier]/ReLU[2]/relu__0" [id=23, type=relu_];
"24 AlexNet/Sequential[classifier]/Dropout[3]/dropout_0" [id=24, type=dropout];
"25 AlexNet/Sequential[classifier]/NNCFLinear[4]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" [id=25, type=apply_binary_mask];
"26 AlexNet/Sequential[classifier]/NNCFLinear[4]/linear_0" [id=26, type=linear];
"27 AlexNet/Sequential[classifier]/ReLU[5]/relu__0" [id=27, type=relu_];
"28 AlexNet/Sequential[classifier]/NNCFLinear[6]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" [id=28, type=apply_binary_mask];
"29 AlexNet/Sequential[classifier]/NNCFLinear[6]/linear_0" [id=29, type=linear];
"30 /nncf_model_output_0" [id=30, type=nncf_model_output];
"0 /nncf_model_input_0" -> "2 AlexNet/Sequential[features]/NNCFConv2d[0]/conv2d_0";
"1 AlexNet/Sequential[features]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" -> "2 AlexNet/Sequential[features]/NNCFConv2d[0]/conv2d_0";
"2 AlexNet/Sequential[features]/NNCFConv2d[0]/conv2d_0" -> "3 AlexNet/Sequential[features]/ReLU[1]/relu__0";
"3 AlexNet/Sequential[features]/ReLU[1]/relu__0" -> "4 AlexNet/Sequential[features]/MaxPool2d[2]/max_pool2d_0";
"4 AlexNet/Sequential[features]/MaxPool2d[2]/max_pool2d_0" -> "6 AlexNet/Sequential[features]/NNCFConv2d[3]/conv2d_0";
"5 AlexNet/Sequential[features]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" -> "6 AlexNet/Sequential[features]/NNCFConv2d[3]/conv2d_0";
"6 AlexNet/Sequential[features]/NNCFConv2d[3]/conv2d_0" -> "7 AlexNet/Sequential[features]/ReLU[4]/relu__0";
"7 AlexNet/Sequential[features]/ReLU[4]/relu__0" -> "8 AlexNet/Sequential[features]/MaxPool2d[5]/max_pool2d_0";
"8 AlexNet/Sequential[features]/MaxPool2d[5]/max_pool2d_0" -> "10 AlexNet/Sequential[features]/NNCFConv2d[6]/conv2d_0";
"9 AlexNet/Sequential[features]/NNCFConv2d[6]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" -> "10 AlexNet/Sequential[features]/NNCFConv2d[6]/conv2d_0";
"10 AlexNet/Sequential[features]/NNCFConv2d[6]/conv2d_0" -> "11 AlexNet/Sequential[features]/ReLU[7]/relu__0";
"11 AlexNet/Sequential[features]/ReLU[7]/relu__0" -> "13 AlexNet/Sequential[features]/NNCFConv2d[8]/conv2d_0";
"12 AlexNet/Sequential[features]/NNCFConv2d[8]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" -> "13 AlexNet/Sequential[features]/NNCFConv2d[8]/conv2d_0";
"13 AlexNet/Sequential[features]/NNCFConv2d[8]/conv2d_0" -> "14 AlexNet/Sequential[features]/ReLU[9]/relu__0";
"14 AlexNet/Sequential[features]/ReLU[9]/relu__0" -> "16 AlexNet/Sequential[features]/NNCFConv2d[10]/conv2d_0";
"15 AlexNet/Sequential[features]/NNCFConv2d[10]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" -> "16 AlexNet/Sequential[features]/NNCFConv2d[10]/conv2d_0";
"16 AlexNet/Sequential[features]/NNCFConv2d[10]/conv2d_0" -> "17 AlexNet/Sequential[features]/ReLU[11]/relu__0";
"17 AlexNet/Sequential[features]/ReLU[11]/relu__0" -> "18 AlexNet/Sequential[features]/MaxPool2d[12]/max_pool2d_0";
"18 AlexNet/Sequential[features]/MaxPool2d[12]/max_pool2d_0" -> "19 AlexNet/view_0";
"19 AlexNet/view_0" -> "20 AlexNet/Sequential[classifier]/Dropout[0]/dropout_0";
"20 AlexNet/Sequential[classifier]/Dropout[0]/dropout_0" -> "22 AlexNet/Sequential[classifier]/NNCFLinear[1]/linear_0";
"21 AlexNet/Sequential[classifier]/NNCFLinear[1]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" -> "22 AlexNet/Sequential[classifier]/NNCFLinear[1]/linear_0";
"22 AlexNet/Sequential[classifier]/NNCFLinear[1]/linear_0" -> "23 AlexNet/Sequential[classifier]/ReLU[2]/relu__0";
"23 AlexNet/Sequential[classifier]/ReLU[2]/relu__0" -> "24 AlexNet/Sequential[classifier]/Dropout[3]/dropout_0";
"24 AlexNet/Sequential[classifier]/Dropout[3]/dropout_0" -> "26 AlexNet/Sequential[classifier]/NNCFLinear[4]/linear_0";
"25 AlexNet/Sequential[classifier]/NNCFLinear[4]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" -> "26 AlexNet/Sequential[classifier]/NNCFLinear[4]/linear_0";
"26 AlexNet/Sequential[classifier]/NNCFLinear[4]/linear_0" -> "27 AlexNet/Sequential[classifier]/ReLU[5]/relu__0";
"27 AlexNet/Sequential[classifier]/ReLU[5]/relu__0" -> "29 AlexNet/Sequential[classifier]/NNCFLinear[6]/linear_0";
"28 AlexNet/Sequential[classifier]/NNCFLinear[6]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask_0" -> "29 AlexNet/Sequential[classifier]/NNCFLinear[6]/linear_0";
"29 AlexNet/Sequential[classifier]/NNCFLinear[6]/linear_0" -> "30 /nncf_model_output_0";
}
