{
    "target_device": "VPU",
    "config": {
        "quantization": {
            "q8_tn": {
                "bits": 8,
                "mode": ["asymmetric", "symmetric"],
                "granularity": "pertensor"
            },

            "q8_ch": {
                "bits": 8,
                "mode": "symmetric",
                "granularity": "perchannel"
            },

            "q8_w": {
                "bits": 8,
                "mode": "symmetric",
                "granularity": [
                    "perchannel",
                    "pertensor"
                ]
            },
            "q4_tn": {
                "bits": 4,
                "mode": "symmetric",
                "granularity": "pertensor"
            },
            "q4_ch": {
                "bits": 4,
                "mode": "symmetric",
                "granularity": "perchannel"
            },

            "q4_w": {
                "bits": 4,
                "mode": "symmetric",
                "granularity": [
                    "perchannel",
                    "pertensor"
                ]
            },
            "q2_ch": {
                "bits": 2,
                "mode": "symmetric",
                "granularity": "perchannel"
            },

            "q2_w": {
                "bits": 2,
                "mode": "symmetric",
                "granularity": [
                    "perchannel",
                    "pertensor"
                ]
            }
        }
    },
    "operations": [
        {
            "type": "Convolution",
            "attributes": {
                "adjust_padding": true
            },
            "quantization": {
                "activations": ["q8_tn", "q4_tn"],
                "weights": ["q8_w", "q4_w", "q2_w"]
            }
        },
        {
            "type": "GroupConvolutionBackpropData",
            "quantization": {
                "activations": "q8_tn",
                "weights": ["q8_w", "q4_w", "q2_w"]
            }
        },
        {
            "type": "DepthWiseConvolution",
            "quantization": {
                "activations": ["q8_ch", "q8_tn"],
                "weights": ["q8_w", "q4_w", "q2_w"]
            }
        },
        {
            "type": "MatMul",
            "quantization": {
                "activations": ["q8_tn", "q4_tn"],
                "weights": ["q8_w", "q4_w", "q2_w"]
            }
        },
        {
            "type": "Add",
            "attributes": {
                "scales": "unified"
            },
            "quantization": {
                "activations": ["q8_tn", "q4_tn"],
                "weights": ["q8_w", "q4_tn"]
            }
        },
        {
            "type": "Multiply",
            "attributes": {
                "scales": "unified"
            },
            "quantization": {
                "activations": ["q8_tn", "q4_tn"],
                "weights": ["q8_w", "q4_tn"]
            }
        },
        {
            "type": "Maximum",
            "attributes": {
                "scales": "unified"
            },
            "quantization": {
                "activations": ["q8_tn", "q4_tn"],
                "weights": ["q8_w", "q4_tn"]
            }
        },
        {
            "type": "Less",
            "attributes": {
                "scales": "unified"
            },
            "quantization": {
                "activations": "q8_tn",
                "weights": "q8_w"
            }
        },
        {
            "type": "LessEqual",
            "attributes": {
                "scales": "unified"
            },
            "quantization": {
                "activations": "q8_tn",
                "weights": "q8_w"
            }
        },
        {
            "type": "Greater",
            "attributes": {
                "scales": "unified"
            },
            "quantization": {
                "activations": "q8_tn",
                "weights": "q8_w"
            }
        },
        {
            "type": "GreaterEqual",
            "attributes": {
                "scales": "unified"
            },
            "quantization": {
                "activations": "q8_tn",
                "weights": "q8_w"
            }
        },
        {
            "type": "Divide",
            "attributes": {
                "scales": "unified"
            },
            "quantization": {
                "activations": "q8_tn",
                "weights": "q8_w"
            }
        },
        {
            "type": "Minimum",
            "attributes": {
                "scales": "unified"
            },
            "quantization": {
                "activations": ["q8_tn", "q4_tn"],
                "weights": ["q8_w", "q4_tn"]
            }
        },
        {
            "type": "Equal",
            "attributes": {
                "scales": "unified"
            },
            "quantization": {
                "activations": "q8_tn",
                "weights": "q8_w"
            }
        },
        {
            "type": "Subtract",
            "attributes": {
                "scales": "unified"
            },
            "quantization": {
                "activations": ["q8_tn", "q4_tn"],
                "weights": ["q8_w", "q4_tn"]
            }
        },
        {
            "type": "NotEqual",
            "attributes": {
                "scales": "unified"
            },
            "quantization": {
                "activations": "q8_tn",
                "weights": "q8_w"
            }
        },
        {
            "type": "FloorMod",
            "attributes": {
                "scales": "unified"
            },
            "quantization": {
                "activations": "q8_tn",
                "weights": "q8_w"
            }
        },
        {
            "type": "LogicalOr",
            "attributes": {
                "scales": "unified"
            },
            "quantization": {
                "activations": "q8_tn",
                "weights": "q8_w"
            }
        },
        {
            "type": "LogicalXor",
            "attributes": {
                "scales": "unified"
            },
            "quantization": {
                "activations": "q8_tn",
                "weights": "q8_w"
            }
        },
        {
            "type": "LogicalAnd",
            "attributes": {
                "scales": "unified"
            },
            "quantization": {
                "activations": "q8_tn",
                "weights": "q8_w"
            }
        },
        {
            "type": "LogicalNot",
            "quantization": {
                "activations": "q8_tn",
                "weights": "q8_w"
            }
        },
        {
            "type": "Power",
            "quantization": {
                "activations": "q8_tn"
            }
        },
        {
            "type": "AvgPool",
            "quantization": {
                "activations": ["q8_ch", "q8_tn"]
            }
        },
        {
            "type": "ReduceMean",
            "quantization": {
                "activations": "q8_ch"
            }
        },
        {
            "type": "MaxPool"
        },
        {
            "type": "ReduceMax"
        },
        {
            "type": "Interpolate",
            "attributes": {
                "mode": "linear"
            },
            "quantization": {
                "activations": "q8_tn"
            }
        },
        {
            "type": "Interpolate",
            "attributes": {
                "mode": "nearest"
            }
        },
        {
            "type": "MVN",
            "quantization": {
                "activations": "q8_tn"
            }
        },
        {"type": "Reshape"},
        {
            "type": "Concat",
            "attributes": {
                "scales": "unified"
            }
        },
        {"type": "Flatten"},
        {"type": "Squeeze"},
        {"type": "Unsqueeze"},
        {"type": "Split"},
        {"type": "Crop"},
        {"type": "Transpose"},
        {"type": "Tile"},
        {"type": "StridedSlice"},
        // NNCF-specific extensions are below:
        {
            "type": "Embedding",
            "quantization": {
                "weights": [
                    "q8_tn", "q8_w"
                ]
            }
        },
        {
            "type": "EmbeddingBag",
            "quantization": {
                "weights": [
                    "q8_tn", "q8_w"
                ]
            }
        }
    ]
}
