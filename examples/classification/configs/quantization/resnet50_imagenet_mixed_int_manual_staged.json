{
    "model": "resnet50",
    "pretrained": true,
    "input_info": {
        "sample_size": [
            1,
            3,
            224,
            224
        ]
    },
    "num_classes": 1000,
    "batch_size": 150,
    "workers": 6,
    "epochs": 30,
    "multiprocessing_distributed": true,
    "quantizer_setup_type": "pattern_based",
    "compression": {
        "algorithm": "quantization",
        "weights": {
            "mode": "asymmetric",
            "bits": 4
        },
        "activations": {
            "mode": "asymmetric",
            "bits": 4
        },
        "initializer": {
            "precision": {
                "type": "manual",
                // [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 8, 4, 4, 4, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                // Acc@1 76.58%
                // | num_bits | % weights | % activations | % total |
                //| 8        | 21.600    | 28.000        | 49.600  |
                //| 4        | 21.600    | 28.800        | 50.400  |
                "bitwidth_per_scope": [
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/ReLU[relu]/RELU_0]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer1]/Bottleneck[0]/BatchNorm2d[bn3]/batch_norm_0]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer1]/Bottleneck[0]/ReLU[relu]/RELU_0]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer1]/Bottleneck[0]/ReLU[relu]/RELU_1]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer1]/Bottleneck[0]/ReLU[relu]/RELU_2]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer1]/Bottleneck[0]/Sequential[downsample]/BatchNorm2d[1]/batch_norm_0]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer1]/Bottleneck[1]/BatchNorm2d[bn3]/batch_norm_0]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer1]/Bottleneck[1]/ReLU[relu]/RELU_0]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer1]/Bottleneck[1]/ReLU[relu]/RELU_1]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer1]/Bottleneck[1]/ReLU[relu]/RELU_2]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer1]/Bottleneck[2]/BatchNorm2d[bn3]/batch_norm_0]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer1]/Bottleneck[2]/ReLU[relu]/RELU_0]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer1]/Bottleneck[2]/ReLU[relu]/RELU_1]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer1]/Bottleneck[2]/ReLU[relu]/RELU_2]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer2]/Bottleneck[0]/ReLU[relu]/RELU_0]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer2]/Bottleneck[0]/ReLU[relu]/RELU_1]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer2]/Bottleneck[0]/ReLU[relu]/RELU_2]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer2]/Bottleneck[1]/BatchNorm2d[bn3]/batch_norm_0]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer2]/Bottleneck[1]/ReLU[relu]/RELU_0]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer2]/Bottleneck[1]/ReLU[relu]/RELU_1]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer2]/Bottleneck[1]/ReLU[relu]/RELU_2]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer2]/Bottleneck[2]/BatchNorm2d[bn3]/batch_norm_0]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer2]/Bottleneck[2]/ReLU[relu]/RELU_0]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer2]/Bottleneck[2]/ReLU[relu]/RELU_1]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer2]/Bottleneck[2]/ReLU[relu]/RELU_2]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer2]/Bottleneck[3]/BatchNorm2d[bn3]/batch_norm_0]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer2]/Bottleneck[3]/ReLU[relu]/RELU_0]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer2]/Bottleneck[3]/ReLU[relu]/RELU_1]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer2]/Bottleneck[3]/ReLU[relu]/RELU_2]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer3]/Bottleneck[0]/ReLU[relu]/RELU_1]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer3]/Bottleneck[1]/ReLU[relu]/RELU_1]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer3]/Bottleneck[4]/ReLU[relu]/RELU_2]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer3]/Bottleneck[5]/BatchNorm2d[bn3]/batch_norm_0]"],
                    [8, "ModuleDict/AsymmetricQuantizer[ResNet/Sequential[layer3]/Bottleneck[5]/ReLU[relu]/RELU_2]"],
                    [8, "ResNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer1]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer1]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer1]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer1]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer2]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer2]/Bottleneck[0]/Sequential[downsample]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer2]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer2]/Bottleneck[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer2]/Bottleneck[3]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer3]/Bottleneck[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer3]/Bottleneck[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"],
                    [8, "ResNet/Sequential[layer4]/Bottleneck[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]"]
                    ]
            }
        },
        "params": {
            "base_lr": 3.1e-4,
            "base_wd": 1e-5,
            "batch_multiplier": 1,
            "activations_quant_start_epoch": 3,
            "weights_quant_start_epoch": 12,
            "lr_poly_drop_start_epoch": 20,
            "lr_poly_drop_duration_epochs": 10,
            "disable_wd_start_epoch": 20
        }
    }
}